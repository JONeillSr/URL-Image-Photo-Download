2025-10-07 11:13:37 [ERROR] Error searching etrailer.com : Just a moment...*{box-sizing:border-box;margin:0;padding:0}html{line-height:1.15;-webkit-text-size-adjust:100%;color:#313131;font-family:system-ui,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,"Noto Sans",sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji"}body{display:flex;flex-direction:column;height:100vh;min-height:100vh}.main-content{margin:8rem auto;padding-left:1.5rem;max-width:60rem}@media (width Enable JavaScript and cookies to continue(function(){window._cf_chl_opt = {cvId: '3',cZone: 'www.etrailer.com',cType: 'interactive',cRay: '98ae57ed88ed8b3e',cH: 'WuqMbI6VTRnzjnQWzkHIghsXraYmkr.i8oK5W7o5xSI-1759850016-1.2.1.1-ZWWniwa8XW.H.trX4V_V_Kci8BtrcNCUuwvYf0GH5ZbMVr1xv1nmH7jRUAKejanD',cUPMDTk:"\/search.aspx?q=Greystone+microwave+GSMW09B&__cf_chl_tk=HsrhEexB2NJ1RhYgV4i2V5nwQXOirvz2b2HUsu3sXsQ-1759850016-1.0.1.1-_lTxBqju9BhWWesyue_0ukcOVxp7pyRxdSMwGjgn_Qk",cFPWv: 'b',cITimeS: '1759850016',cTplC:0,cTplV:5,cTplB: 'cf',fa:"\/search.aspx?q=Greystone+microwave+GSMW09B&__cf_chl_f_tk=HsrhEexB2NJ1RhYgV4i2V5nwQXOirvz2b2HUsu3sXsQ-1759850016-1.0.1.1-_lTxBqju9BhWWesyue_0ukcOVxp7pyRxdSMwGjgn_Qk",md: 'v10q9tra.NZhAh7bFwgAUlZagA2.iGa.Wd1_uT79iVI-1759850016-1.2.1.1-DVo5xtqKRUPqL5YLDs3I6GH4mIdsr4pBZsP.sy3L3jx.FU_oXNzJcp_KK1HPG26G6FceZo0AANEr8..bkKyL0P6iPzzAHERuBMk8PARHtzSatI98FhcGWNiI8etcqfvwzSCzVhuazds5KOCV0hIDHeH27Oy7Pn6DJ3twCG9ZesnKE9Bw0eTLwgrykoc48zZ2.D99yyZuA1RT8zxToaVADtQwtmdjo_2ccTjytDbdAUavVm_7Cxh.62Y.bEFdZSlaNpk.TcHqMBczP.daT0LU.B4XZjJ_pBoGzICHpruSMzq4bkIat0WvBslnphkOI3_1QykT2i4hXCzkYJIqQchmpxsAs5RveWSLsoEWzV3YiUvZdREM_8ysLkaxpCmKYSXR.BMwC0ssiM.pRPcxoGskZUXITR8_m4uOWkCH7SBlBAz39vWq5HBMwrayYzo9d0suXQERVWg6JrLuS4QU5CJwrle1kW0sVbhE_ysB6hNrILYhm5uZj8uPca1d62aN_yJ9C_3jA9R0MmGvvmZfmZz50fKWCAAGa4yfJP.ikSPf06IGJ1RLx6nou6A4hq.4UzpefzF9ZjpeJO0dZm10xbvEinhHwKWi3EXUhXXZLJjW7WdEz_tKFUd05sCMmf..YGaqRF.LIbNkiacUSfGg84fVAhZ69L10oMdpE.ZdMu9aSYbKdm34Mf0je7ldDkI02LKlMT60tBa77PbfJ81M54u4rv4F.CiHyDGb5QJDY6nrl0pYs7N.EadwDmjsFC74sAR_9gH.E5jt5JRCH6HYO.8B3w9WHahD_lO9BPDfd.7GzgZhKlSK8vNKoC.2tfjR_nr0qMFQNv2kLVHGg6DvdxJG_hIeLPWvDhgF3KftAdQVnruvg8FAV2ftDHzhDZQEgHio86YaBc32VaZJO4eA_xQe5oc_pXVWByIp1ZujZFqHzRhiIvluBgUB1woFoATWX9I8LTZWGqUqVCAakpYbgC1AFEo5O2Jr_hf9gS20pqJM7DejM8EH1pAnVLsmuv4wZW6yzgARIsPWYsHJxaVzH3TZqghlrCjX1Omqd.AG2CjFd_A',mdrd: 'vdNpDMR1xlZs6eNe4lS7b0xjTWMq4GPBgB9V8CtIgA0-1759850016-1.2.1.1-Ed0nDPD6nnzQ_N8VjFqAFpZaugzvHssQhge5v.MV1dodl6JpuhaDLbzv0AYQyBL0c_kDqBHVNSY64B8Ry_AmSpU.NohEr6JZnsxQkQ.C_kvOjkZSvR0oB9zqz9YOhppIL3hDVeov7V_.GrAVYsbtrvpPjbeqYD2lZZWUEsIEaoBdKiFRrgmKAQFUUFZccuJpqyga8hcsVpJ7b5GJzUAmcWzNqNrL_.KQW.9hj.EICyRpi5Cic18d6Y4eGoKTdfQfUahjPhDkdOA74NcBBf6S_8.UkFEvYb8ZTaYnnhb8ix6Br33HGTdIPUbeYfcpJmhow1ZVEdgnjHLIQ_NAi3KUZEDCrN3IMXn_GAQYJ2vEOFtFRBCdN_F1wUoj.GfXcl3xK4jishLAVOkPqZCuGf3Wd__k6PQMPLnNi8H2PhJ8LbIaejuZ_8YQz99D7hGWrasSEQVj0MUsebp6Xezf0venBQ7fBL.0512xDbsHToLxAhE4YTX9A2dPwKXI1yu1nXQ_buL8KK3omMOdH8ZVguMoQayQbxDotKBZ.1xBCGtAXkc0wHZweXWq0.MS44dNnzOQCPZfacsPC4kGRl5aGuP64.GoGZGHuVKpuFht2PRrrduS3kFQ2j7sykVQ0jflvW8i.gFTwN1mavD4sobPhfkn6j1aUIpYIGmS9dXGcEAHneJBGcjuiJrPxKJSXoHzuq_n5AMOws8RN4IYexQI3f7lMYNrKYQ422vJDz4yVmcDLbvaMYrvJIGr9pbFSzNMAspBUC709c.dcsLggpUDEax93gHunUMq0gUIZlmXSHhwnm8vG9pOjjTLaesLMelVT1Sc5oBfdyrWnVzVlyvqmiclujadwedDoKhs.luQzSLfUdcBLbMWTPL.zJ_1JWJPUVlmRaG46Bki1roro_ZnPgsBzxDxa.LOdMVAxpB8xfz49fErPNFRDgmT72yBpIy4NiKbeXRKKc1BD9vMsC91qwKjQVYcWcCSH0hN626tA6ZLr3MyFvdWtt06gC.c_NL3nRDlKjsc8LPqx_zXEQS75okzRBX2xI4A._V7hkEhV5K4InuD25T4nsr3D74gYqMPF6B8EzpswbAaOEc18cJNKynZyYISCScgkuL4XPSlMrk8JeDHqd2ICUEQ6ZZ5NP6QYx1TcVibCYRlVhRuO8fohHmx8tHKJzoBAgePtceinrkACmY7I1zUWSRhqB24echJ1vNg3tGzoB4.EPMUYkuyPj_RcLL8KLXrsFKIynk3yfSqblKNgoZCrisyvt1Py76OpNJAUMEeU3AWydrzpnMkzZsJHXYm1RSdfhY94DT1NGJ0Z6Q.iL8N_VZuAANdfqRjKZDFRcFjfYXtvqRjyCPoZ8HuGo6_rAGKgBt2Ccz3OdcfPPBah2DETEMx.BjgSPwaxNVxN9i5ZMKv9veM6m2eP5KghOus5Md57B.YZQgJWrOdzMa6txbcQkO1oLebPXrcUZSKSLAQpTkpMmBYMMUelemG0M4x8DlMiU6DWBEUpSTId6Wv_HmzlxYCmjDd5Pp0tIXJ.U_L1eMZ0Sq9VD1AfNE1mRCKD_aCjfnqoQjZLbUcupteZle4bL01oZpdxhr8UA_UBY4woawotLyc_9eKoS1mwMg.A1JKYcYFAfCv6b8iGU2SravpB81EWlIf3cqC1tA7B8qGKy3sxGXw3Qn1Uue04oqIrmsAlawcKRPUL3ZA_IHmAQdOv_IZmP_WI36IszJ_kS77fv5eZlMv8Glvrw2dQMZ3mvjo7uCz5m9.QJ8PPO1Qa1JFaw9o36dVcNbXzQKgHvM9IsSS6vimbNqHMRD2m7IsEKu_0Ol.ezJKuhCC4Bi4wsd8bk_dAjGyMXTtJwVLfCgU_VpB.5Z4SS1iNQg4Geq4Hr7HBAaDVHj0wOmjEZfTMk_t1l1Fj6A7EjIcFskWi.nr_ONJ7g3sFW4jmyRX4Hyw2sPi46WJpAyyce7PRPIE88DNx41vjIJ_WZ.MOaRI7HHf9CdUZc3fDEYjw1SfDVkdswgrutiQzTt.KK9jnhuVa3KBdd2oKsg4TfdNiK11YH12hB_gIADPP8CsQ_WNSDYRdqzGG5cvtHch99do2eDqD2xkpHekhmK9jvk8T6JwTjae36xMLT1Bl599eRcRs7Kl2E7q689x0Y0jRAn5pZWjAXmwMyf9lefIZVJkciC5o3Gf8TJ4UKHEYqSjp1vlV.xQatk0xgdgmUQsQ7_9La.lL8C6RO7FXpwTBWAZ3hcjPOWEDDE3ree5XDyFwxz64rnVs6N4.uPlgkaRhAkZzG9nqzbkUd24G3JIQpxREQ6FtAoX0QLTadAzD_14Yfh4sqetpg2booYQpqggt33cj3jz5X4byK7r17YbU8Y7gXexEF9Nr9vIh2U6WgfULTds09MbQ2dbIVyP2aQd3nKQomfYAZ1Q7CXjt0Oq4k.eqVYC.yxX33TVzXfbaL2wXXhuOV1WI06Qkd6m_SYWOLeYnpliVwuPiJInJ4_DtkH02TKrRWrOZ3XXWIUKu.bzb2ZgIN42N8AVfBEKJP3LY5DAYOjWJcXn782qcGAhNFHgOLFv',};var a = document.createElement('script');a.src = '/cdn-cgi/challenge-platform/h/b/orchestrate/chl_page/v1?ray=98ae57ed88ed8b3e';window._cf_chl_opt.cOgUHash = location.hash === '' && location.href.indexOf('#') !== -1 ? '#' : location.hash;window._cf_chl_opt.cOgUQuery = location.search === '' && location.href.slice(0, location.href.length - window._cf_chl_opt.cOgUHash.length).indexOf('?') !== -1 ? '?' : location.search;if (window.history && window.history.replaceState) {var ogU = location.pathname + window._cf_chl_opt.cOgUQuery + window._cf_chl_opt.cOgUHash;history.replaceState(null, null,"\/search.aspx?q=Greystone+microwave+GSMW09B&__cf_chl_rt_tk=HsrhEexB2NJ1RhYgV4i2V5nwQXOirvz2b2HUsu3sXsQ-1759850016-1.0.1.1-_lTxBqju9BhWWesyue_0ukcOVxp7pyRxdSMwGjgn_Qk"+ window._cf_chl_opt.cOgUHash);a.onload = function() {history.replaceState(null, null, ogU);}}document.getElementsByTagName('head')[0].appendChild(a);}());
2025-10-07 11:13:38 [ERROR] Error searching lippert.com : 


    (window.NREUM||(NREUM={})).init={privacy:{cookies_enabled:true},ajax:{deny_list:["bam.nr-data.net"]},distributed_tracing:{enabled:true}};(window.NREUM||(NREUM={})).loader_config={agentID:"1103359710",accountID:"1869536",trustKey:"1869536",xpid:"VQ4BWFNQDhABVFRaBAQHUV0H",licenseKey:"d22126b98f",applicationID:"1058350796"};;/*! For license information please see nr-loader-spa-1.298.0.min.js.LICENSE.txt */
(()=>{var e,t,r={8122:(e,t,r)=>{"use strict";r.d(t,{a:()=>i});var n=r(944);function i(e,t){try{if(!e||"object"!=typeof e)return(0,n.R)(3);if(!t||"object"!=typeof t)return(0,n.R)(4);const r=Object.create(Object.getPrototypeOf(t),Object.getOwnPropertyDescriptors(t)),o=0===Object.keys(r).length?e:r;for(let a in o)if(void 0!==e[a])try{if(null===e[a]){r[a]=null;continue}Array.isArray(e[a])&&Array.isArray(t[a])?r[a]=Array.from(new Set([...e[a],...t[a]])):"object"==typeof e[a]&&"object"==typeof t[a]?r[a]=i(e[a],t[a]):r[a]=e[a]}catch(e){r[a]||(0,n.R)(1,e)}return r}catch(e){(0,n.R)(2,e)}}},2555:(e,t,r)=>{"use strict";r.d(t,{D:()=>s,f:()=>a});var n=r(384),i=r(8122);const o={beacon:n.NT.beacon,errorBeacon:n.NT.errorBeacon,licenseKey:void 0,applicationID:void 0,sa:void 0,queueTime:void 0,applicationTime:void 0,ttGuid:void 0,user:void 0,account:void 0,product:void 0,extra:void 0,jsAttributes:{},userAttributes:void 0,atts:void 0,transactionName:void 0,tNamePlain:void 0};function a(e){try{return!!e.licenseKey&&!!e.errorBeacon&&!!e.applicationID}catch(e){return!1}}const s=e=>(0,i.a)(e,o)},7699:(e,t,r)=>{"use strict";r.d(t,{It:()=>i,No:()=>n,qh:()=>a,uh:()=>o});const n=16e3,i=1e6,o="NR_CONTAINER_AGENT",a="SESSION_ERROR"},9324:(e,t,r)=>{"use strict";r.d(t,{F3:()=>i,Xs:()=>o,Yq:()=>a,xv:()=>n});const n="1.298.0",i="PROD",o="CDN",a="^2.0.0-alpha.18"},6154:(e,t,r)=>{"use strict";r.d(t,{A4:()=>s,OF:()=>d,RI:()=>i,WN:()=>h,bv:()=>o,gm:()=>a,lR:()=>f,m:()=>u,mw:()=>c,sb:()=>l});var n=r(1863);const i="undefined"!=typeof window&&!!window.document,o="undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self.navigator instanceof WorkerNavigator||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis.navigator instanceof WorkerNavigator),a=i?window:"undefined"!=typeof WorkerGlobalScope&&("undefined"!=typeof self&&self instanceof WorkerGlobalScope&&self||"undefined"!=typeof globalThis&&globalThis instanceof WorkerGlobalScope&&globalThis),s="complete"===a?.document?.readyState,c=Boolean("hidden"===a?.document?.visibilityState),u=""+a?.location,d=/iPad|iPhone|iPod/.test(a.navigator?.userAgent),l=d&&"undefined"==typeof SharedWorker,f=(()=>{const e=a.navigator?.userAgent?.match(/Firefox[/\s](\d+\.\d+)/);return Array.isArray(e)&&e.length>=2?+e[1]:0})(),h=Date.now()-(0,n.t)()},7295:(e,t,r)=>{"use strict";r.d(t,{Xv:()=>a,gX:()=>i,iW:()=>o});var n=[];function i(e){if(!e||o(e))return!1;if(0===n.length)return!0;for(var t=0;t0?(o=r.substring(0,i),a=r.substring(i)):(o=r,a="");let[s]=o.split(":");n.push({hostname:s,pathname:a})}}function s(e,t){return!(e.length>t.length)&&t.indexOf(e)===t.length-e.length}function c(e,t){return 0===e.indexOf("/")&&(e=e.substring(1)),0===t.indexOf("/")&&(t=t.substring(1)),""===e||e===t}},3241:(e,t,r)=>{"use strict";r.d(t,{W:()=>o});var n=r(6154);const i="newrelic";function o(e={}){try{n.gm.dispatchEvent(new CustomEvent(i,{detail:e}))}catch(e){}}},1687:(e,t,r)=>{"use strict";r.d(t,{Ak:()=>u,Ze:()=>f,x3:()=>d});var n=r(3241),i=r(7836),o=r(3606),a=r(860),s=r(2646);const c={};function u(e,t){const r={staged:!1,priority:a.P3[t]||0};l(e),c[e].get(t)||c[e].set(t,r)}function d(e,t){e&&c[e]&&(c[e].get(t)&&c[e].delete(t),p(e,t,!1),c[e].size&&h(e))}function l(e){if(!e)throw new Error("agentIdentifier required");c[e]||(c[e]=new Map)}function f(e="",t="feature",r=!1){if(l(e),!e||!c[e].get(t)||r)return p(e,t);c[e].get(t).staged=!0,h(e)}function h(e){const t=Array.from(c[e]);t.every((([e,t])=>t.staged))&&(t.sort(((e,t)=>e[1].priority-t[1].priority)),t.forEach((([t])=>{c[e].delete(t),p(e,t)})))}function p(e,t,r=!0){const a=e?i.ee.get(e):i.ee,c=o.i.handlers;if(!a.aborted&&a.backlog&&c){if((0,n.W)({agentIdentifier:e,type:"lifecycle",name:"drain",feature:t}),r){const e=a.backlog[t],r=c[t];if(r){for(let t=0;e&&t{Object.values(t||{}).forEach((t=>{t[0]?.on&&t[0]?.context()instanceof s.y&&t[0].on(e,t[1])}))}))}}a.isolatedBacklog||delete c[t],a.backlog[t]=null,a.emit("drain-"+t,[])}}function g(e,t){var r=e[1];Object.values(t[r]||{}).forEach((t=>{var r=e[0];if(t[0]===r){var n=t[1],i=e[3],o=e[2];n.apply(i,o)}}))}},7836:(e,t,r)=>{"use strict";r.d(t,{P:()=>s,ee:()=>c});var n=r(384),i=r(8990),o=r(2646),a=r(5607);const s="nr@context:".concat(a.W),c=function e(t,r){var n={},a={},d={},l=!1;try{l=16===r.length&&u.initializedAgents?.[r]?.runtime.isolatedBacklog}catch(e){}var f={on:p,addEventListener:p,removeEventListener:function(e,t){var r=n[e];if(!r)return;for(var i=0;i{e.apply(s,r)}));var u=v()[a[e]];u&&u.push([f,e,r,s]);return s},get:m,listeners:g,context:h,buffer:function(e,t){const r=v();if(t=t||"feature",f.aborted)return;Object.entries(e||{}).forEach((([e,n])=>{a[n]=t,t in r||(r[t]=[])}))},abort:function(){f._aborted=!0,Object.keys(f.backlog).forEach((e=>{delete f.backlog[e]}))},isBuffering:function(e){return!!v()[a[e]]},debugId:r,backlog:l?{}:t&&"object"==typeof t.backlog?t.backlog:{},isolatedBacklog:l};return Object.defineProperty(f,"aborted",{get:()=>{let e=f._aborted||!1;return e||(t&&(e=t.aborted),e)}}),f;function h(e){return e&&e instanceof o.y?e:e?(0,i.I)(e,s,(()=>new o.y(s))):new o.y(s)}function p(e,t){n[e]=g(e).concat(t)}function g(e){return n[e]||[]}function m(t){return d[t]=d[t]||e(f,t)}function v(){return f.backlog}}(void 0,"globalEE"),u=(0,n.Zm)();u.ee||(u.ee=c)},2646:(e,t,r)=>{"use strict";r.d(t,{y:()=>n});class n{constructor(e){this.contextId=e}}},9908:(e,t,r)=>{"use strict";r.d(t,{d:()=>n,p:()=>i});var n=r(7836).ee.get("handle");function i(e,t,r,i,o){o?(o.buffer([e],i),o.emit(e,t,r)):(n.buffer([e],i),n.emit(e,t,r))}},3606:(e,t,r)=>{"use strict";r.d(t,{i:()=>o});var n=r(9908);o.on=a;var i=o.handlers={};function o(e,t,r,o){a(o||n.d,i,e,t,r)}function a(e,t,r,i,o){o||(o="feature"),e||(e=n.d);var a=t[o]=t[o]||{};(a[r]=a[r]||[]).push([e,i])}},3878:(e,t,r)=>{"use strict";function n(e,t){return{capture:e,passive:!1,signal:t}}function i(e,t,r=!1,i){window.addEventListener(e,t,n(r,i))}function o(e,t,r=!1,i){document.addEventListener(e,t,n(r,i))}r.d(t,{DD:()=>o,jT:()=>n,sp:()=>i})},5607:(e,t,r)=>{"use strict";r.d(t,{W:()=>n});const n=(0,r(9566).bz)()},9566:(e,t,r)=>{"use strict";r.d(t,{LA:()=>s,ZF:()=>c,bz:()=>a,el:()=>u});var n=r(6154);const i="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";function o(e,t){return e?15&e[t]:16*Math.random()|0}function a(){const e=n.gm?.crypto||n.gm?.msCrypto;let t,r=0;return e&&e.getRandomValues&&(t=e.getRandomValues(new Uint8Array(30))),i.split("").map((e=>"x"===e?o(t,r++).toString(16):"y"===e?(3&o()|8).toString(16):e)).join("")}function s(e){const t=n.gm?.crypto||n.gm?.msCrypto;let r,i=0;t&&t.getRandomValues&&(r=t.getRandomValues(new Uint8Array(e)));const a=[];for(var s=0;s{"use strict";r.d(t,{BB:()=>a,H3:()=>n,g:()=>u,iL:()=>c,tS:()=>s,uh:()=>i,wk:()=>o});const n="NRBA",i="SESSION",o=144e5,a=18e5,s={STARTED:"session-started",PAUSE:"session-pause",RESET:"session-reset",RESUME:"session-resume",UPDATE:"session-update"},c={SAME_TAB:"same-tab",CROSS_TAB:"cross-tab"},u={OFF:0,FULL:1,ERROR:2}},1863:(e,t,r)=>{"use strict";function n(){return Math.floor(performance.now())}r.d(t,{t:()=>n})},7485:(e,t,r)=>{"use strict";r.d(t,{D:()=>i});var n=r(6154);function i(e){if(0===(e||"").indexOf("data:"))return{protocol:"data"};try{const t=new URL(e,location.href),r={port:t.port,hostname:t.hostname,pathname:t.pathname,search:t.search,protocol:t.protocol.slice(0,t.protocol.indexOf(":")),sameOrigin:t.protocol===n.gm?.location?.protocol&&t.host===n.gm?.location?.host};return r.port&&""!==r.port||("http:"===t.protocol&&(r.port="80"),"https:"===t.protocol&&(r.port="443")),r.pathname&&""!==r.pathname?r.pathname.startsWith("/")||(r.pathname="/".concat(r.pathname)):r.pathname="/",r}catch(e){return{}}}},944:(e,t,r)=>{"use strict";r.d(t,{R:()=>i});var n=r(3241);function i(e,t){"function"==typeof console.debug&&(console.debug("New Relic Warning: https://github.com/newrelic/newrelic-browser-agent/blob/main/docs/warning-codes.md#".concat(e),t),(0,n.W)({agentIdentifier:null,drained:null,type:"data",name:"warn",feature:"warn",data:{code:e,secondary:t}}))}},5701:(e,t,r)=>{"use strict";r.d(t,{B:()=>o,t:()=>a});var n=r(3241);const i=new Set,o={};function a(e,t){const r=t.agentIdentifier;o[r]??={},e&&"object"==typeof e&&(i.has(r)||(t.ee.emit("rumresp",[e]),o[r]=e,i.add(r),(0,n.W)({agentIdentifier:r,loaded:!0,drained:!0,type:"lifecycle",name:"load",feature:void 0,data:e})))}},8990:(e,t,r)=>{"use strict";r.d(t,{I:()=>i});var n=Object.prototype.hasOwnProperty;function i(e,t,r){if(n.call(e,t))return e[t];var i=r();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:i,writable:!0,enumerable:!1}),i}catch(e){}return e[t]=i,i}},6389:(e,t,r)=>{"use strict";function n(e,t=500,r={}){const n=r?.leading||!1;let i;return(...r)=>{n&&void 0===i&&(e.apply(this,r),i=setTimeout((()=>{i=clearTimeout(i)}),t)),n||(clearTimeout(i),i=setTimeout((()=>{e.apply(this,r)}),t))}}function i(e){let t=!1;return(...r)=>{t||(t=!0,e.apply(this,r))}}r.d(t,{J:()=>i,s:()=>n})},1910:(e,t,r)=>{"use strict";r.d(t,{i:()=>o});var n=r(944);const i=new Map;function o(...e){return e.every((e=>{if(i.has(e))return i.get(e);const t="function"==typeof e&&e.toString().includes("[native code]");return t||(0,n.R)(64,e?.name||e?.toString()),i.set(e,t),t}))}},3304:(e,t,r)=>{"use strict";r.d(t,{A:()=>o});var n=r(7836);const i=()=>{const e=new WeakSet;return(t,r)=>{if("object"==typeof r&&null!==r){if(e.has(r))return;e.add(r)}return r}};function o(e){try{return JSON.stringify(e,i())??""}catch(e){try{n.ee.emit("internal-error",[e])}catch(e){}return""}}},3496:(e,t,r)=>{"use strict";function n(e){return!e||!(!e.licenseKey||!e.applicationID)}function i(e,t){return!e||e.licenseKey===t.info.licenseKey&&e.applicationID===t.info.applicationID}r.d(t,{A:()=>i,I:()=>n})},5289:(e,t,r)=>{"use strict";r.d(t,{GG:()=>o,Qr:()=>s,sB:()=>a});var n=r(3878);function i(){return"undefined"==typeof document||"complete"===document.readyState}function o(e,t){if(i())return e();(0,n.sp)("load",e,t)}function a(e){if(i())return e();(0,n.DD)("DOMContentLoaded",e)}function s(e){if(i())return e();(0,n.sp)("popstate",e)}},384:(e,t,r)=>{"use strict";r.d(t,{NT:()=>a,US:()=>d,Zm:()=>s,bQ:()=>u,dV:()=>c,pV:()=>l});var n=r(6154),i=r(1863),o=r(1910);const a={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net"};function s(){return n.gm.NREUM||(n.gm.NREUM={}),void 0===n.gm.newrelic&&(n.gm.newrelic=n.gm.NREUM),n.gm.NREUM}function c(){let e=s();return e.o||(e.o={ST:n.gm.setTimeout,SI:n.gm.setImmediate||n.gm.setInterval,CT:n.gm.clearTimeout,XHR:n.gm.XMLHttpRequest,REQ:n.gm.Request,EV:n.gm.Event,PR:n.gm.Promise,MO:n.gm.MutationObserver,FETCH:n.gm.fetch,WS:n.gm.WebSocket},(0,o.i)(...Object.values(e.o))),e}function u(e,t){let r=s();r.initializedAgents??={},t.initializedAt={ms:(0,i.t)(),date:new Date},r.initializedAgents[e]=t}function d(e,t){s()[e]=t}function l(){return function(){let e=s();const t=e.info||{};e.info={beacon:a.beacon,errorBeacon:a.errorBeacon,...t}}(),function(){let e=s();const t=e.init||{};e.init={...t}}(),c(),function(){let e=s();const t=e.loader_config||{};e.loader_config={...t}}(),s()}},2843:(e,t,r)=>{"use strict";r.d(t,{u:()=>i});var n=r(3878);function i(e,t=!1,r,i){(0,n.DD)("visibilitychange",(function(){if(t)return void("hidden"===document.visibilityState&&e());e(document.visibilityState)}),r,i)}},8139:(e,t,r)=>{"use strict";r.d(t,{u:()=>f});var n=r(7836),i=r(3434),o=r(8990),a=r(6154);const s={},c=a.gm.XMLHttpRequest,u="addEventListener",d="removeEventListener",l="nr@wrapped:".concat(n.P);function f(e){var t=function(e){return(e||n.ee).get("events")}(e);if(s[t.debugId]++)return t;s[t.debugId]=1;var r=(0,i.YM)(t,!0);function f(e){r.inPlace(e,[u,d],"-",p)}function p(e,t){return e[1]}return"getPrototypeOf"in Object&&(a.RI&&h(document,f),c&&h(c.prototype,f),h(a.gm,f)),t.on(u+"-start",(function(e,t){var n=e[1];if(null!==n&&("function"==typeof n||"object"==typeof n)&&"newrelic"!==e[0]){var i=(0,o.I)(n,l,(function(){var e={object:function(){if("function"!=typeof n.handleEvent)return;return n.handleEvent.apply(n,arguments)},function:n}[typeof n];return e?r(e,"fn-",null,e.name||"anonymous"):n}));this.wrapped=e[1]=i}})),t.on(d+"-start",(function(e){e[1]=this.wrapped||e[1]})),t}function h(e,t,...r){let n=e;for(;"object"==typeof n&&!Object.prototype.hasOwnProperty.call(n,u);)n=Object.getPrototypeOf(n);n&&t(n,...r)}},3434:(e,t,r)=>{"use strict";r.d(t,{Jt:()=>o,YM:()=>u});var n=r(7836),i=r(5607);const o="nr@original:".concat(i.W),a=50;var s=Object.prototype.hasOwnProperty,c=!1;function u(e,t){return e||(e=n.ee),r.inPlace=function(e,t,n,i,o){n||(n="");const a="-"===n.charAt(0);for(let s=0;s=a,methodName:c,thrownError:h};t.isLongTask&&i("long-task",[t,s],l,u),i(r+"end",[o,s,f],l,u)}}}function i(r,n,i,o){if(!c||t){var a=c;c=!0;try{e.emit(r,n,i,t,o)}catch(t){d([t,r,n,i],e)}c=a}}}function d(e,t){t||(t=n.ee);try{t.emit("internal-error",e)}catch(e){}}function l(e){return!(e&&"function"==typeof e&&e.apply&&!e[o])}},9300:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K7.ajax},3333:(e,t,r)=>{"use strict";r.d(t,{$v:()=>u,TZ:()=>n,Zp:()=>i,kd:()=>c,mq:()=>s,nf:()=>a,qN:()=>o});const n=r(860).K7.genericEvents,i=["auxclick","click","copy","keydown","paste","scrollend"],o=["focus","blur"],a=4,s=1e3,c=["PageAction","UserAction","BrowserPerformance"],u={MARKS:"experimental.marks",MEASURES:"experimental.measures",RESOURCES:"experimental.resources"}},6774:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K7.jserrors},993:(e,t,r)=>{"use strict";r.d(t,{A$:()=>o,ET:()=>a,TZ:()=>s,p_:()=>i});var n=r(860);const i={ERROR:"ERROR",WARN:"WARN",INFO:"INFO",DEBUG:"DEBUG",TRACE:"TRACE"},o={OFF:0,ERROR:1,WARN:2,INFO:3,DEBUG:4,TRACE:5},a="log",s=n.K7.logging},3785:(e,t,r)=>{"use strict";r.d(t,{R:()=>c,b:()=>u});var n=r(9908),i=r(1863),o=r(860),a=r(8154),s=r(993);function c(e,t,r={},c=s.p_.INFO,u,d=(0,i.t)()){(0,n.p)(a.xV,["API/logging/".concat(c.toLowerCase(),"/called")],void 0,o.K7.metrics,e),(0,n.p)(s.ET,[d,t,r,c,u],void 0,o.K7.logging,e)}function u(e){return"string"==typeof e&&Object.values(s.p_).some((t=>t===e.toUpperCase().trim()))}},8154:(e,t,r)=>{"use strict";r.d(t,{z_:()=>o,XG:()=>s,TZ:()=>n,rs:()=>i,xV:()=>a});r(6154),r(9566),r(384);const n=r(860).K7.metrics,i="sm",o="cm",a="storeSupportabilityMetrics",s="storeEventMetrics"},6630:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K7.pageViewEvent},782:(e,t,r)=>{"use strict";r.d(t,{T:()=>n});const n=r(860).K7.pageViewTiming},6344:(e,t,r)=>{"use strict";r.d(t,{BB:()=>d,G4:()=>o,Qb:()=>l,TZ:()=>i,Ug:()=>a,_s:()=>s,bc:()=>u,yP:()=>c});var n=r(2614);const i=r(860).K7.sessionReplay,o={RECORD:"recordReplay",PAUSE:"pauseReplay",ERROR_DURING_REPLAY:"errorDuringReplay"},a=.12,s={DomContentLoaded:0,Load:1,FullSnapshot:2,IncrementalSnapshot:3,Meta:4,Custom:5},c={[n.g.ERROR]:15e3,[n.g.FULL]:3e5,[n.g.OFF]:0},u={RESET:{message:"Session was reset",sm:"Reset"},IMPORT:{message:"Recorder failed to import",sm:"Import"},TOO_MANY:{message:"429: Too Many Requests",sm:"Too-Many"},TOO_BIG:{message:"Payload was too large",sm:"Too-Big"},CROSS_TAB:{message:"Session Entity was set to OFF on another tab",sm:"Cross-Tab"},ENTITLEMENTS:{message:"Session Replay is not allowed and will not be started",sm:"Entitlement"}},d=5e3,l={API:"api",RESUME:"resume",SWITCH_TO_FULL:"switchToFull",INITIALIZE:"initialize",PRELOAD:"preload"}},5270:(e,t,r)=>{"use strict";r.d(t,{Aw:()=>a,SR:()=>o,rF:()=>s});var n=r(384),i=r(7767);function o(e){return!!(0,n.dV)().o.MO&&(0,i.V)(e)&&!0===e?.session_trace.enabled}function a(e){return!0===e?.session_replay.preload&&o(e)}function s(e,t){try{if("string"==typeof t?.type){if("password"===t.type.toLowerCase())return"*".repeat(e?.length||0);if(void 0!==t?.dataset?.nrUnmask||t?.classList?.contains("nr-unmask"))return e}}catch(e){}return"string"==typeof e?e.replace(/[\S]/g,"*"):"*".repeat(e?.length||0)}},3738:(e,t,r)=>{"use strict";r.d(t,{He:()=>i,Kp:()=>s,Lc:()=>u,Rz:()=>d,TZ:()=>n,bD:()=>o,d3:()=>a,jx:()=>l,sl:()=>f,uP:()=>c});const n=r(860).K7.sessionTrace,i="bstResource",o="resource",a="-start",s="-end",c="fn"+a,u="fn"+s,d="pushState",l=1e3,f=3e4},3962:(e,t,r)=>{"use strict";r.d(t,{AM:()=>a,O2:()=>l,OV:()=>o,Qu:()=>f,TZ:()=>c,ih:()=>h,pP:()=>s,t1:()=>d,tC:()=>i,wD:()=>u});var n=r(860);const i=["click","keydown","submit"],o="popstate",a="api",s="initialPageLoad",c=n.K7.softNav,u=5e3,d=500,l={INITIAL_PAGE_LOAD:"",ROUTE_CHANGE:1,UNSPECIFIED:2},f={INTERACTION:1,AJAX:2,CUSTOM_END:3,CUSTOM_TRACER:4},h={IP:"in progress",PF:"pending finish",FIN:"finished",CAN:"cancelled"}},7378:(e,t,r)=>{"use strict";r.d(t,{$p:()=>x,BR:()=>b,Kp:()=>R,L3:()=>y,Lc:()=>c,NC:()=>o,SG:()=>d,TZ:()=>i,U6:()=>p,UT:()=>m,d3:()=>w,dT:()=>f,e5:()=>E,gx:()=>v,l9:()=>l,oW:()=>h,op:()=>g,rw:()=>u,tH:()=>A,uP:()=>s,wW:()=>T,xq:()=>a});var n=r(384);const i=r(860).K7.spa,o=["click","submit","keypress","keydown","keyup","change"],a=999,s="fn-start",c="fn-end",u="cb-start",d="api-ixn-",l="remaining",f="interaction",h="spaNode",p="jsonpNode",g="fetch-start",m="fetch-done",v="fetch-body-",b="jsonp-end",y=(0,n.dV)().o.ST,w="-start",R="-end",x="-body",T="cb"+R,E="jsTime",A="fetch"},4234:(e,t,r)=>{"use strict";r.d(t,{W:()=>o});var n=r(7836),i=r(1687);class o{constructor(e,t){this.agentIdentifier=e,this.ee=n.ee.get(e),this.featureName=t,this.blocked=!1}deregisterDrain(){(0,i.x3)(this.agentIdentifier,this.featureName)}}},7767:(e,t,r)=>{"use strict";r.d(t,{V:()=>i});var n=r(6154);const i=e=>n.RI&&!0===e?.privacy.cookies_enabled},1741:(e,t,r)=>{"use strict";r.d(t,{W:()=>o});var n=r(944),i=r(4261);class o{#e(e,...t){if(this[e]!==o.prototype[e])return this[e](...t);(0,n.R)(35,e)}addPageAction(e,t){return this.#e(i.hG,e,t)}register(e){return this.#e(i.eY,e)}recordCustomEvent(e,t){return this.#e(i.fF,e,t)}setPageViewName(e,t){return this.#e(i.Fw,e,t)}setCustomAttribute(e,t,r){return this.#e(i.cD,e,t,r)}noticeError(e,t){return this.#e(i.o5,e,t)}setUserId(e){return this.#e(i.Dl,e)}setApplicationVersion(e){return this.#e(i.nb,e)}setErrorHandler(e){return this.#e(i.bt,e)}addRelease(e,t){return this.#e(i.k6,e,t)}log(e,t){return this.#e(i.$9,e,t)}start(){return this.#e(i.d3)}finished(e){return this.#e(i.BL,e)}recordReplay(){return this.#e(i.CH)}pauseReplay(){return this.#e(i.Tb)}addToTrace(e){return this.#e(i.U2,e)}setCurrentRouteName(e){return this.#e(i.PA,e)}interaction(){return this.#e(i.dT)}wrapLogger(e,t,r){return this.#e(i.Wb,e,t,r)}measure(e,t){return this.#e(i.V1,e,t)}}},4261:(e,t,r)=>{"use strict";r.d(t,{$9:()=>d,BL:()=>c,CH:()=>p,Dl:()=>R,Fw:()=>w,PA:()=>v,Pl:()=>n,Tb:()=>f,U2:()=>a,V1:()=>E,Wb:()=>T,bt:()=>y,cD:()=>b,d3:()=>x,dT:()=>u,eY:()=>g,fF:()=>h,hG:()=>o,hw:()=>i,k6:()=>s,nb:()=>m,o5:()=>l});const n="api-",i=n+"ixn-",o="addPageAction",a="addToTrace",s="addRelease",c="finished",u="interaction",d="log",l="noticeError",f="pauseReplay",h="recordCustomEvent",p="recordReplay",g="register",m="setApplicationVersion",v="setCurrentRouteName",b="setCustomAttribute",y="setErrorHandler",w="setPageViewName",R="setUserId",x="start",T="wrapLogger",E="measure"},5205:(e,t,r)=>{"use strict";r.d(t,{j:()=>S});var n=r(384),i=r(1741);var o=r(2555),a=r(3333);const s=e=>{if(!e||"string"!=typeof e)return!1;try{document.createDocumentFragment().querySelector(e)}catch{return!1}return!0};var c=r(2614),u=r(944),d=r(8122);const l="[data-nr-mask]",f=e=>(0,d.a)(e,(()=>{const e={feature_flags:[],experimental:{marks:!1,measures:!1,resources:!1},mask_selector:"*",block_selector:"[data-nr-block]",mask_input_options:{color:!1,date:!1,"datetime-local":!1,email:!1,month:!1,number:!1,range:!1,search:!1,tel:!1,text:!1,time:!1,url:!1,week:!1,textarea:!1,select:!1,password:!0}};return{ajax:{deny_list:void 0,block_internal:!0,enabled:!0,autoStart:!0},api:{allow_registered_children:!0,duplicate_registered_data:!1},distributed_tracing:{enabled:void 0,exclude_newrelic_header:void 0,cors_use_newrelic_header:void 0,cors_use_tracecontext_headers:void 0,allowed_origins:void 0},get feature_flags(){return e.feature_flags},set feature_flags(t){e.feature_flags=t},generic_events:{enabled:!0,autoStart:!0},harvest:{interval:30},jserrors:{enabled:!0,autoStart:!0},logging:{enabled:!0,autoStart:!0},metrics:{enabled:!0,autoStart:!0},obfuscate:void 0,page_action:{enabled:!0},page_view_event:{enabled:!0,autoStart:!0},page_view_timing:{enabled:!0,autoStart:!0},performance:{get capture_marks(){return e.feature_flags.includes(a.$v.MARKS)||e.experimental.marks},set capture_marks(t){e.experimental.marks=t},get capture_measures(){return e.feature_flags.includes(a.$v.MEASURES)||e.experimental.measures},set capture_measures(t){e.experimental.measures=t},capture_detail:!0,resources:{get enabled(){return e.feature_flags.includes(a.$v.RESOURCES)||e.experimental.resources},set enabled(t){e.experimental.resources=t},asset_types:[],first_party_domains:[],ignore_newrelic:!0}},privacy:{cookies_enabled:!0},proxy:{assets:void 0,beacon:void 0},session:{expiresMs:c.wk,inactiveMs:c.BB},session_replay:{autoStart:!0,enabled:!1,preload:!1,sampling_rate:10,error_sampling_rate:100,collect_fonts:!1,inline_images:!1,fix_stylesheets:!0,mask_all_inputs:!0,get mask_text_selector(){return e.mask_selector},set mask_text_selector(t){s(t)?e.mask_selector="".concat(t,",").concat(l):""===t||null===t?e.mask_selector=l:(0,u.R)(5,t)},get block_class(){return"nr-block"},get ignore_class(){return"nr-ignore"},get mask_text_class(){return"nr-mask"},get block_selector(){return e.block_selector},set block_selector(t){s(t)?e.block_selector+=",".concat(t):""!==t&&(0,u.R)(6,t)},get mask_input_options(){return e.mask_input_options},set mask_input_options(t){t&&"object"==typeof t?e.mask_input_options={...t,password:!0}:(0,u.R)(7,t)}},session_trace:{enabled:!0,autoStart:!0},soft_navigations:{enabled:!0,autoStart:!0},spa:{enabled:!0,autoStart:!0},ssl:void 0,user_actions:{enabled:!0,elementAttributes:["id","className","tagName","type"]}}})());var h=r(6154),p=r(9324);let g=0;const m={buildEnv:p.F3,distMethod:p.Xs,version:p.xv,originTime:h.WN},v={appMetadata:{},customTransaction:void 0,denyList:void 0,disabled:!1,entityManager:void 0,harvester:void 0,isolatedBacklog:!1,isRecording:!1,loaderType:void 0,maxBytes:3e4,obfuscator:void 0,onerror:void 0,ptid:void 0,releaseIds:{},session:void 0,timeKeeper:void 0,jsAttributesMetadata:{bytes:0},get harvestCount(){return++g}},b=e=>{const t=(0,d.a)(e,v),r=Object.keys(m).reduce(((e,t)=>(e[t]={value:m[t],writable:!1,configurable:!0,enumerable:!0},e)),{});return Object.defineProperties(t,r)};var y=r(5701);const w=e=>{const t=e.startsWith("http");e+="/",r.p=t?e:"https://"+e};var R=r(7836),x=r(3241);const T={accountID:void 0,trustKey:void 0,agentID:void 0,licenseKey:void 0,applicationID:void 0,xpid:void 0},E=e=>(0,d.a)(e,T),A=new Set;function S(e,t={},r,a){let{init:s,info:c,loader_config:u,runtime:d={},exposed:l=!0}=t;if(!c){const e=(0,n.pV)();s=e.init,c=e.info,u=e.loader_config}e.init=f(s||{}),e.loader_config=E(u||{}),c.jsAttributes??={},h.bv&&(c.jsAttributes.isWorker=!0),e.info=(0,o.D)(c);const p=e.init,g=[c.beacon,c.errorBeacon];A.has(e.agentIdentifier)||(p.proxy.assets&&(w(p.proxy.assets),g.push(p.proxy.assets)),p.proxy.beacon&&g.push(p.proxy.beacon),function(e){const t=(0,n.pV)();Object.getOwnPropertyNames(i.W.prototype).forEach((r=>{const n=i.W.prototype[r];if("function"!=typeof n||"constructor"===n)return;let o=t[r];e[r]&&!1!==e.exposed&&"micro-agent"!==e.runtime?.loaderType&&(t[r]=(...t)=>{const n=e[r](...t);return o?o(...t):n})}))}(e),(0,n.US)("activatedFeatures",y.B),e.runSoftNavOverSpa&&=!0===p.soft_navigations.enabled&&p.feature_flags.includes("soft_nav")),d.denyList=[...p.ajax.deny_list||[],...p.ajax.block_internal?g:[]],d.ptid=e.agentIdentifier,d.loaderType=r,e.runtime=b(d),A.has(e.agentIdentifier)||(e.ee=R.ee.get(e.agentIdentifier),e.exposed=l,(0,x.W)({agentIdentifier:e.agentIdentifier,drained:!!y.B?.[e.agentIdentifier],type:"lifecycle",name:"initialize",feature:void 0,data:e.config})),A.add(e.agentIdentifier)}},8374:(e,t,r)=>{r.nc=(()=>{try{return document?.currentScript?.nonce}catch(e){}return""})()},860:(e,t,r)=>{"use strict";r.d(t,{$J:()=>d,K7:()=>c,P3:()=>u,XX:()=>i,Yy:()=>s,df:()=>o,qY:()=>n,v4:()=>a});const n="events",i="jserrors",o="browser/blobs",a="rum",s="browser/logs",c={ajax:"ajax",genericEvents:"generic_events",jserrors:i,logging:"logging",metrics:"metrics",pageAction:"page_action",pageViewEvent:"page_view_event",pageViewTiming:"page_view_timing",sessionReplay:"session_replay",sessionTrace:"session_trace",softNav:"soft_navigations",spa:"spa"},u={[c.pageViewEvent]:1,[c.pageViewTiming]:2,[c.metrics]:3,[c.jserrors]:4,[c.spa]:5,[c.ajax]:6,[c.sessionTrace]:7,[c.softNav]:8,[c.sessionReplay]:9,[c.logging]:10,[c.genericEvents]:11},d={[c.pageViewEvent]:a,[c.pageViewTiming]:n,[c.ajax]:n,[c.spa]:n,[c.softNav]:n,[c.metrics]:i,[c.jserrors]:i,[c.sessionTrace]:o,[c.sessionReplay]:o,[c.logging]:s,[c.genericEvents]:"ins"}}},n={};function i(e){var t=n[e];if(void 0!==t)return t.exports;var o=n[e]={exports:{}};return r[e](o,o.exports,i),o.exports}i.m=r,i.d=(e,t)=>{for(var r in t)i.o(t,r)&&!i.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},i.f={},i.e=e=>Promise.all(Object.keys(i.f).reduce(((t,r)=>(i.f[r](e,t),t)),[])),i.u=e=>({212:"nr-spa-compressor",249:"nr-spa-recorder",478:"nr-spa"}[e]+"-1.298.0.min.js"),i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e={},t="NRBA-1.298.0.PROD:",i.l=(r,n,o,a)=>{if(e[r])e[r].push(n);else{var s,c;if(void 0!==o)for(var u=document.getElementsByTagName("script"),d=0;d{s.onerror=s.onload=null,clearTimeout(p);var i=e[r];if(delete e[r],s.parentNode&&s.parentNode.removeChild(s),i&&i.forEach((e=>e(n))),t)return t(n)},p=setTimeout(h.bind(null,void 0,{type:"timeout",target:s}),12e4);s.onerror=h.bind(null,s.onerror),s.onload=h.bind(null,s.onload),c&&document.head.appendChild(s)}},i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.p="https://js-agent.newrelic.com/",(()=>{var e={38:0,788:0};i.f.j=(t,r)=>{var n=i.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,i)=>n=e[t]=[r,i]));r.push(n[2]=o);var a=i.p+i.u(t),s=new Error;i.l(a,(r=>{if(i.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;s.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",s.name="ChunkLoadError",s.type=o,s.request=a,n[1](s)}}),"chunk-"+t,t)}};var t=(t,r)=>{var n,o,[a,s,c]=r,u=0;if(a.some((t=>0!==e[t]))){for(n in s)i.o(s,n)&&(i.m[n]=s[n]);if(c)c(i)}for(t&&t(r);u{"use strict";i(8374);var e=i(9566),t=i(1741);class r extends t.W{agentIdentifier=(0,e.LA)(16)}var n=i(860);const o=Object.values(n.K7);var a=i(5205);var s=i(9908),c=i(1863),u=i(4261),d=i(3241),l=i(944),f=i(5701),h=i(8154);function p(e,t,i,o){const a=o||i;!a||a[e]&&a[e]!==r.prototype[e]||(a[e]=function(){(0,s.p)(h.xV,["API/"+e+"/called"],void 0,n.K7.metrics,i.ee),(0,d.W)({agentIdentifier:i.agentIdentifier,drained:!!f.B?.[i.agentIdentifier],type:"data",name:"api",feature:u.Pl+e,data:{}});try{return t.apply(this,arguments)}catch(e){(0,l.R)(23,e)}})}function g(e,t,r,n,i){const o=e.info;null===r?delete o.jsAttributes[t]:o.jsAttributes[t]=r,(i||null===r)&&(0,s.p)(u.Pl+n,[(0,c.t)(),t,r],void 0,"session",e.ee)}var m=i(1687),v=i(4234),b=i(5289),y=i(6154),w=i(5270),R=i(7767),x=i(6389),T=i(7699);class E extends v.W{constructor(e,t){super(e.agentIdentifier,t),this.agentRef=e,this.abortHandler=void 0,this.featAggregate=void 0,this.onAggregateImported=void 0,this.deferred=Promise.resolve(),!1===e.init[this.featureName].autoStart?this.deferred=new Promise(((t,r)=>{this.ee.on("manual-start-all",(0,x.J)((()=>{(0,m.Ak)(e.agentIdentifier,this.featureName),t()})))})):(0,m.Ak)(e.agentIdentifier,t)}importAggregator(e,t,r={}){if(this.featAggregate)return;let n;this.onAggregateImported=new Promise((e=>{n=e}));const o=async()=>{let o;await this.deferred;try{if((0,R.V)(e.init)){const{setupAgentSession:t}=await i.e(478).then(i.bind(i,2955));o=t(e)}}catch(e){(0,l.R)(20,e),this.ee.emit("internal-error",[e]),(0,s.p)(T.qh,[e],void 0,this.featureName,this.ee)}try{if(!this.#t(this.featureName,o,e.init))return(0,m.Ze)(this.agentIdentifier,this.featureName),void n(!1);const{Aggregate:i}=await t();this.featAggregate=new i(e,r),e.runtime.harvester.initializedAggregates.push(this.featAggregate),n(!0)}catch(e){(0,l.R)(34,e),this.abortHandler?.(),(0,m.Ze)(this.agentIdentifier,this.featureName,!0),n(!1),this.ee&&this.ee.abort()}};y.RI?(0,b.GG)((()=>o()),!0):o()}#t(e,t,r){if(this.blocked)return!1;switch(e){case n.K7.sessionReplay:return(0,w.SR)(r)&&!!t;case n.K7.sessionTrace:return!!t;default:return!0}}}var A=i(6630),S=i(2614);class _ extends E{static featureName=A.T;constructor(e){var t;super(e,A.T),this.setupInspectionEvents(e.agentIdentifier),t=e,p(u.Fw,(function(e,r){"string"==typeof e&&("/"!==e.charAt(0)&&(e="/"+e),t.runtime.customTransaction=(r||"http://custom.transaction")+e,(0,s.p)(u.Pl+u.Fw,[(0,c.t)()],void 0,void 0,t.ee))}),t),this.ee.on("api-send-rum",((e,t)=>(0,s.p)("send-rum",[e,t],void 0,this.featureName,this.ee))),this.importAggregator(e,(()=>i.e(478).then(i.bind(i,1983))))}setupInspectionEvents(e){const t=(t,r)=>{t&&(0,d.W)({agentIdentifier:e,timeStamp:t.timeStamp,loaded:"complete"===t.target.readyState,type:"window",name:r,data:t.target.location+""})};(0,b.sB)((e=>{t(e,"DOMContentLoaded")})),(0,b.GG)((e=>{t(e,"load")})),(0,b.Qr)((e=>{t(e,"navigate")})),this.ee.on(S.tS.UPDATE,((t,r)=>{(0,d.W)({agentIdentifier:e,type:"lifecycle",name:"session",data:r})}))}}var N=i(384);var O=i(2843),I=i(3878),P=i(782);class j extends E{static featureName=P.T;constructor(e){super(e,P.T),y.RI&&((0,O.u)((()=>(0,s.p)("docHidden",[(0,c.t)()],void 0,P.T,this.ee)),!0),(0,I.sp)("pagehide",(()=>(0,s.p)("winPagehide",[(0,c.t)()],void 0,P.T,this.ee))),this.importAggregator(e,(()=>i.e(478).then(i.bind(i,9917)))))}}class k extends E{static featureName=h.TZ;constructor(e){super(e,h.TZ),y.RI&&document.addEventListener("securitypolicyviolation",(e=>{(0,s.p)(h.xV,["Generic/CSPViolation/Detected"],void 0,this.featureName,this.ee)})),this.importAggregator(e,(()=>i.e(478).then(i.bind(i,8351))))}}var C=i(6774),L=i(3304);class M{constructor(e,t,r,n,i){this.name="UncaughtError",this.message="string"==typeof e?e:(0,L.A)(e),this.sourceURL=t,this.line=r,this.column=n,this.__newrelic=i}}function H(e){return U(e)?e:new M(void 0!==e?.message?e.message:e,e?.filename||e?.sourceURL,e?.lineno||e?.line,e?.colno||e?.col,e?.__newrelic,e?.cause)}function D(e){const t="Unhandled Promise Rejection: ";if(!e?.reason)return;if(U(e.reason)){try{e.reason.message.startsWith(t)||(e.reason.message=t+e.reason.message)}catch(e){}return H(e.reason)}const r=H(e.reason);return(r.message||"").startsWith(t)||(r.message=t+r.message),r}function K(e){if(e.error instanceof SyntaxError&&!/:\d+$/.test(e.error.stack?.trim())){const t=new M(e.message,e.filename,e.lineno,e.colno,e.error.__newrelic,e.cause);return t.name=SyntaxError.name,t}return U(e.error)?e.error:H(e)}function U(e){return e instanceof Error&&!!e.stack}function F(e,t,r,i,o=(0,c.t)()){"string"==typeof e&&(e=new Error(e)),(0,s.p)("err",[e,o,!1,t,r.runtime.isRecording,void 0,i],void 0,n.K7.jserrors,r.ee)}var W=i(3496),B=i(993),G=i(3785);function V(e,{customAttributes:t={},level:r=B.p_.INFO}={},n,i,o=(0,c.t)()){(0,G.R)(n.ee,e,t,r,i,o)}function z(e,t,r,i,o=(0,c.t)()){(0,s.p)(u.Pl+u.hG,[o,e,t,i],void 0,n.K7.genericEvents,r.ee)}function Z(e){p(u.eY,(function(t){return function(e,t){const r={};let i,o;(0,l.R)(54,"newrelic.register"),e.init.api.allow_registered_children||(i=()=>(0,l.R)(55));t&&(0,W.I)(t)||(i=()=>(0,l.R)(48,t));const a={addPageAction:(n,i={})=>{u(z,[n,{...r,...i},e],t)},log:(n,i={})=>{u(V,[n,{...i,customAttributes:{...r,...i.customAttributes||{}}},e],t)},noticeError:(n,i={})=>{u(F,[n,{...r,...i},e],t)},setApplicationVersion:e=>{r["application.version"]=e},setCustomAttribute:(e,t)=>{r[e]=t},setUserId:e=>{r["enduser.id"]=e},metadata:{customAttributes:r,target:t,get connected(){return o||Promise.reject(new Error("Failed to connect"))}}};i?i():o=new Promise(((n,i)=>{try{const o=e.runtime?.entityManager;let s=!!o?.get().entityGuid,c=o?.getEntityGuidFor(t.licenseKey,t.applicationID),u=!!c;if(s&&u)t.entityGuid=c,n(a);else{const d=setTimeout((()=>i(new Error("Failed to connect - Timeout"))),15e3);function l(r){(0,W.A)(r,e)?s||=!0:t.licenseKey===r.licenseKey&&t.applicationID===r.applicationID&&(u=!0,t.entityGuid=r.entityGuid),s&&u&&(clearTimeout(d),e.ee.removeEventListener("entity-added",l),n(a))}e.ee.emit("api-send-rum",[r,t]),e.ee.on("entity-added",l)}}catch(f){i(f)}}));const u=async(t,r,a)=>{if(i)return i();const u=(0,c.t)();(0,s.p)(h.xV,["API/register/".concat(t.name,"/called")],void 0,n.K7.metrics,e.ee);try{await o;const n=e.init.api.duplicate_registered_data;(!0===n||Array.isArray(n)&&n.includes(a.entityGuid))&&t(...r,void 0,u),t(...r,a.entityGuid,u)}catch(e){(0,l.R)(50,e)}};return a}(e,t)}),e)}class q extends E{static featureName=C.T;constructor(e){var t;super(e,C.T),t=e,p(u.o5,((e,r)=>F(e,r,t)),t),function(e){p(u.bt,(function(t){e.runtime.onerror=t}),e)}(e),function(e){let t=0;p(u.k6,(function(e,r){++t>10||(this.runtime.releaseIds[e.slice(-200)]=(""+r).slice(-200))}),e)}(e),Z(e);try{this.removeOnAbort=new AbortController}catch(e){}this.ee.on("internal-error",((t,r)=>{this.abortHandler&&(0,s.p)("ierr",[H(t),(0,c.t)(),!0,{},e.runtime.isRecording,r],void 0,this.featureName,this.ee)})),y.gm.addEventListener("unhandledrejection",(t=>{this.abortHandler&&(0,s.p)("err",[D(t),(0,c.t)(),!1,{unhandledPromiseRejection:1},e.runtime.isRecording],void 0,this.featureName,this.ee)}),(0,I.jT)(!1,this.removeOnAbort?.signal)),y.gm.addEventListener("error",(t=>{this.abortHandler&&(0,s.p)("err",[K(t),(0,c.t)(),!1,{},e.runtime.isRecording],void 0,this.featureName,this.ee)}),(0,I.jT)(!1,this.removeOnAbort?.signal)),this.abortHandler=this.#r,this.importAggregator(e,(()=>i.e(478).then(i.bind(i,2176))))}#r(){this.removeOnAbort?.abort(),this.abortHandler=void 0}}var X=i(8990);let Y=1;function Q(e){const t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===y.gm?0:(0,X.I)(e,"nr@id",(function(){return Y++}))}function J(e){if("string"==typeof e&&e.length)return e.length;if("object"==typeof e){if("undefined"!=typeof ArrayBuffer&&e instanceof ArrayBuffer&&e.byteLength)return e.byteLength;if("undefined"!=typeof Blob&&e instanceof Blob&&e.size)return e.size;if(!("undefined"!=typeof FormData&&e instanceof FormData))try{return(0,L.A)(e).length}catch(e){return}}}var ee=i(8139),te=i(7836),re=i(3434);const ne={},ie=["open","send"];function oe(e){var t=e||te.ee;const r=function(e){return(e||te.ee).get("xhr")}(t);if(void 0===y.gm.XMLHttpRequest)return r;if(ne[r.debugId]++)return r;ne[r.debugId]=1,(0,ee.u)(t);var n=(0,re.YM)(r),i=y.gm.XMLHttpRequest,o=y.gm.MutationObserver,a=y.gm.Promise,s=y.gm.setInterval,c="readystatechange",u=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],d=[],f=y.gm.XMLHttpRequest=function(e){const t=new i(e),o=r.context(t);try{r.emit("new-xhr",[t],o),t.addEventListener(c,(a=o,function(){var e=this;e.readyState>3&&!a.resolved&&(a.resolved=!0,r.emit("xhr-resolved",[],e)),n.inPlace(e,u,"fn-",b)}),(0,I.jT)(!1))}catch(e){(0,l.R)(15,e);try{r.emit("internal-error",[e])}catch(e){}}var a;return t};function h(e,t){n.inPlace(t,["onreadystatechange"],"fn-",b)}if(function(e,t){for(var r in e)t[r]=e[r]}(i,f),f.prototype=i.prototype,n.inPlace(f.prototype,ie,"-xhr-",b),r.on("send-xhr-start",(function(e,t){h(e,t),function(e){d.push(e),o&&(p?p.then(v):s?s(v):(g=-g,m.data=g))}(t)})),r.on("open-xhr-start",h),o){var p=a&&a.resolve();if(!s&&!a){var g=1,m=document.createTextNode(g);new o(v).observe(m,{characterData:!0})}}else t.on("fn-end",(function(e){e[0]&&e[0].type===c||v()}));function v(){for(var e=0;e{r(ue[le],e,se),r(de[le],e,se)})),r(y.gm,"fetch",ae),t.on(ae+"end",(function(e,r){var n=this;if(r){var i=r.headers.get("content-length");null!==i&&(n.rxSize=i),t.emit(ae+"done",[null,r],n)}else t.emit(ae+"done",[e],n)})),t}var pe=i(7485);class ge{constructor(e){this.agentRef=e}generateTracePayload(t){const r=this.agentRef.loader_config;if(!this.shouldGenerateTrace(t)||!r)return null;var n=(r.accountID||"").toString()||null,i=(r.agentID||"").toString()||null,o=(r.trustKey||"").toString()||null;if(!n||!i)return null;var a=(0,e.ZF)(),s=(0,e.el)(),c=Date.now(),u={spanId:a,traceId:s,timestamp:c};return(t.sameOrigin||this.isAllowedOrigin(t)&&this.useTraceContextHeadersForCors())&&(u.traceContextParentHeader=this.generateTraceContextParentHeader(a,s),u.traceContextStateHeader=this.generateTraceContextStateHeader(a,c,n,i,o)),(t.sameOrigin&&!this.excludeNewrelicHeader()||!t.sameOrigin&&this.isAllowedOrigin(t)&&this.useNewrelicHeaderForCors())&&(u.newrelicHeader=this.generateTraceHeader(a,s,c,n,i,o)),u}generateTraceContextParentHeader(e,t){return"00-"+t+"-"+e+"-01"}generateTraceContextStateHeader(e,t,r,n,i){return i+"@nr=0-1-"+r+"-"+n+"-"+e+"----"+t}generateTraceHeader(e,t,r,n,i,o){if(!("function"==typeof y.gm?.btoa))return null;var a={v:[0,1],d:{ty:"Browser",ac:n,ap:i,id:e,tr:t,ti:r}};return o&&n!==o&&(a.d.tk=o),btoa((0,L.A)(a))}shouldGenerateTrace(e){return this.agentRef.init?.distributed_tracing?.enabled&&this.isAllowedOrigin(e)}isAllowedOrigin(e){var t=!1;const r=this.agentRef.init?.distributed_tracing;if(e.sameOrigin)t=!0;else if(r?.allowed_origins instanceof Array)for(var n=0;n(0,s.p)(e,t,r,n,this.ee);try{const e={xmlhttprequest:"xhr",fetch:"fetch",beacon:"beacon"};y.gm?.performance?.getEntriesByType("resource").forEach((t=>{if(t.initiatorType in e&&0!==t.responseStatus){const r={status:t.responseStatus},i={rxSize:t.transferSize,duration:Math.floor(t.duration),cbTime:0};Ee(r,t.name),this.handler("xhr",[r,i,t.startTime,t.responseEnd,e[t.initiatorType]],void 0,n.K7.ajax)}}))}catch(e){}he(this.ee),oe(this.ee),function(e,t,r,i){function o(e){var t=this;t.totalCbs=0,t.called=0,t.cbTime=0,t.end=E,t.ended=!1,t.xhrGuids={},t.lastSize=null,t.loadCaptureCalled=!1,t.params=this.params||{},t.metrics=this.metrics||{},t.latestLongtaskEnd=0,e.addEventListener("load",(function(r){A(t,e)}),(0,I.jT)(!1)),y.lR||e.addEventListener("progress",(function(e){t.lastSize=e.loaded}),(0,I.jT)(!1))}function a(e){this.params={method:e[0]},Ee(this,e[1]),this.metrics={}}function u(t,r){e.loader_config.xpid&&this.sameOrigin&&r.setRequestHeader("X-NewRelic-ID",e.loader_config.xpid);var n=i.generateTracePayload(this.parsedOrigin);if(n){var o=!1;n.newrelicHeader&&(r.setRequestHeader("newrelic",n.newrelicHeader),o=!0),n.traceContextParentHeader&&(r.setRequestHeader("traceparent",n.traceContextParentHeader),n.traceContextStateHeader&&r.setRequestHeader("tracestate",n.traceContextStateHeader),o=!0),o&&(this.dt=n)}}function d(e,r){var n=this.metrics,i=e[0],o=this;if(n&&i){var a=J(i);a&&(n.txSize=a)}this.startTime=(0,c.t)(),this.body=i,this.listener=function(e){try{"abort"!==e.type||o.loadCaptureCalled||(o.params.aborted=!0),("load"!==e.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof r.onload)&&"function"==typeof o.end)&&o.end(r)}catch(e){try{t.emit("internal-error",[e])}catch(e){}}};for(var s=0;s1?e[1]=o:e.push(o)}}function s(e,t){var r=!1;return t.newrelicHeader&&(e.set("newrelic",t.newrelicHeader),r=!0),t.traceContextParentHeader&&(e.set("traceparent",t.traceContextParentHeader),t.traceContextStateHeader&&e.set("tracestate",t.traceContextStateHeader),r=!0),r}}function x(e,t){this.params={},this.metrics={},this.startTime=(0,c.t)(),this.dt=t,e.length>=1&&(this.target=e[0]),e.length>=2&&(this.opts=e[1]);var r,n=this.opts||{},i=this.target;"string"==typeof i?r=i:"object"==typeof i&&i instanceof we?r=i.url:y.gm?.URL&&"object"==typeof i&&i instanceof URL&&(r=i.href),Ee(this,r);var o=(""+(i&&i instanceof we&&i.method||n.method||"GET")).toUpperCase();this.params.method=o,this.body=n.body,this.txSize=J(n.body)||0}function T(e,t){if(this.endTime=(0,c.t)(),this.params||(this.params={}),(0,ve.iW)(this.params))return;let i;this.params.status=t?t.status:0,"string"==typeof this.rxSize&&this.rxSize.length>0&&(i=+this.rxSize);const o={txSize:this.txSize,rxSize:i,duration:(0,c.t)()-this.startTime};r("xhr",[this.params,o,this.startTime,this.endTime,"fetch"],this,n.K7.ajax)}function E(e){const t=this.params,i=this.metrics;if(!this.ended){this.ended=!0;for(let t=0;t=0){var o=r.getResponseHeader(xe);o&&((0,s.p)(h.rs,["Ajax/CrossApplicationTracing/Header/Seen"],void 0,n.K7.metrics,t),e.params.cat=o.split(", ").pop())}e.loadCaptureCalled=!0}t.on("new-xhr",o),t.on("open-xhr-start",a),t.on("open-xhr-end",u),t.on("send-xhr-start",d),t.on("xhr-cb-time",l),t.on("xhr-load-added",f),t.on("xhr-load-removed",p),t.on("xhr-resolved",g),t.on("addEventListener-end",m),t.on("removeEventListener-end",v),t.on("fn-end",w),t.on("fetch-before-start",R),t.on("fetch-start",x),t.on("fn-start",b),t.on("fetch-done",T)}(e,this.ee,this.handler,this.dt),this.importAggregator(e,(()=>i.e(478).then(i.bind(i,3845))))}}function Ee(e,t){var r=(0,pe.D)(t),n=e.params||e;n.hostname=r.hostname,n.port=r.port,n.protocol=r.protocol,n.host=r.hostname+":"+r.port,n.pathname=r.pathname,e.parsedOrigin=r,e.sameOrigin=r.sameOrigin}const Ae={},Se=["pushState","replaceState"];function _e(e){const t=function(e){return(e||te.ee).get("history")}(e);return!y.RI||Ae[t.debugId]++||(Ae[t.debugId]=1,(0,re.YM)(t).inPlace(window.history,Se,"-")),t}var Ne=i(3738);function Oe(e){p(u.BL,(function(t=Date.now()){const r=t-y.WN;r{const t=e.getEntries();(0,s.p)(Ie,[t],void 0,n.K7.sessionTrace,r)})),o.observe({type:Pe,buffered:!0})}catch(e){}this.importAggregator(e,(()=>i.e(478).then(i.bind(i,6974))),{resourceObserver:o})}}var Ke=i(6344);class Ue extends E{static featureName=Ke.TZ;#n;recorder;constructor(e){var t;let r;super(e,Ke.TZ),t=e,p(u.CH,(function(){(0,s.p)(u.CH,[],void 0,n.K7.sessionReplay,t.ee)}),t),function(e){p(u.Tb,(function(){(0,s.p)(u.Tb,[],void 0,n.K7.sessionReplay,e.ee)}),e)}(e);try{r=JSON.parse(localStorage.getItem("".concat(S.H3,"_").concat(S.uh)))}catch(e){}(0,w.SR)(e.init)&&this.ee.on(Ke.G4.RECORD,(()=>this.#i())),this.#o(r)&&this.importRecorder().then((e=>{e.startRecording(Ke.Qb.PRELOAD,r?.sessionReplayMode)})),this.importAggregator(this.agentRef,(()=>i.e(478).then(i.bind(i,6167))),this),this.ee.on("err",(e=>{this.blocked||this.agentRef.runtime.isRecording&&(this.errorNoticed=!0,(0,s.p)(Ke.G4.ERROR_DURING_REPLAY,[e],void 0,this.featureName,this.ee))}))}#o(e){return e&&(e.sessionReplayMode===S.g.FULL||e.sessionReplayMode===S.g.ERROR)||(0,w.Aw)(this.agentRef.init)}importRecorder(){return this.recorder?Promise.resolve(this.recorder):(this.#n??=Promise.all([i.e(478),i.e(249)]).then(i.bind(i,8589)).then((({Recorder:e})=>(this.recorder=new e(this),this.recorder))).catch((e=>{throw this.ee.emit("internal-error",[e]),this.blocked=!0,e})),this.#n)}#i(){this.blocked||(this.featAggregate?this.featAggregate.mode!==S.g.FULL&&this.featAggregate.initializeRecording(S.g.FULL,!0,Ke.Qb.API):this.importRecorder().then((()=>{this.recorder.startRecording(Ke.Qb.API,S.g.FULL)})))}}var Fe=i(3962);function We(e){const t=e.ee.get("tracer");function r(){}p(u.dT,(function(e){return(new r).get("object"==typeof e?e:{})}),e);const i=r.prototype={createTracer:function(r,i){var o={},a=this,d="function"==typeof i;return(0,s.p)(h.xV,["API/createTracer/called"],void 0,n.K7.metrics,e.ee),e.runSoftNavOverSpa||(0,s.p)(u.hw+"tracer",[(0,c.t)(),r,o],a,n.K7.spa,e.ee),function(){if(t.emit((d?"":"no-")+"fn-start",[(0,c.t)(),a,d],o),d)try{return i.apply(this,arguments)}catch(e){const r="string"==typeof e?new Error(e):e;throw t.emit("fn-err",[arguments,this,r],o),r}finally{t.emit("fn-end",[(0,c.t)()],o)}}}};["actionText","setName","setAttribute","save","ignore","onEnd","getContext","end","get"].forEach((t=>{p.apply(this,[t,function(){return(0,s.p)(u.hw+t,[(0,c.t)(),...arguments],this,e.runSoftNavOverSpa?n.K7.softNav:n.K7.spa,e.ee),this},e,i])})),p(u.PA,(function(){e.runSoftNavOverSpa?(0,s.p)(u.hw+"routeName",[performance.now(),...arguments],void 0,n.K7.softNav,e.ee):(0,s.p)(u.Pl+"routeName",[(0,c.t)(),...arguments],this,n.K7.spa,e.ee)}),e)}class Be extends E{static featureName=Fe.TZ;constructor(e){if(super(e,Fe.TZ),We(e),!y.RI||!(0,N.dV)().o.MO)return;const t=_e(this.ee);try{this.removeOnAbort=new AbortController}catch(e){}Fe.tC.forEach((e=>{(0,I.sp)(e,(e=>{a(e)}),!0,this.removeOnAbort?.signal)}));const r=()=>(0,s.p)("newURL",[(0,c.t)(),""+window.location],void 0,this.featureName,this.ee);t.on("pushState-end",r),t.on("replaceState-end",r),(0,I.sp)(Fe.OV,(e=>{a(e),(0,s.p)("newURL",[e.timeStamp,""+window.location],void 0,this.featureName,this.ee)}),!0,this.removeOnAbort?.signal);let n=!1;const o=new((0,N.dV)().o.MO)(((e,t)=>{n||(n=!0,requestAnimationFrame((()=>{(0,s.p)("newDom",[(0,c.t)()],void 0,this.featureName,this.ee),n=!1})))})),a=(0,x.s)((e=>{(0,s.p)("newUIEvent",[e],void 0,this.featureName,this.ee),o.observe(document.body,{attributes:!0,childList:!0,subtree:!0,characterData:!0})}),100,{leading:!0});this.abortHandler=function(){this.removeOnAbort?.abort(),o.disconnect(),this.abortHandler=void 0},this.importAggregator(e,(()=>i.e(478).then(i.bind(i,4393))),{domObserver:o})}}var Ge=i(7378);const Ve={},ze=["appendChild","insertBefore","replaceChild"];function Ze(e){const t=function(e){return(e||te.ee).get("jsonp")}(e);if(!y.RI||Ve[t.debugId])return t;Ve[t.debugId]=!0;var r=(0,re.YM)(t),n=/[?&](?:callback|cb)=([^&#]+)/,i=/(.*)\.([^.]+)/,o=/^(\w+)(\.|$)(.*)$/;function a(e,t){if(!e)return t;const r=e.match(o),n=r[1];return a(r[3],t[n])}return r.inPlace(Node.prototype,ze,"dom-"),t.on("dom-start",(function(e){!function(e){if(!e||"string"!=typeof e.nodeName||"script"!==e.nodeName.toLowerCase())return;if("function"!=typeof e.addEventListener)return;var o=(s=e.src,c=s.match(n),c?c[1]:null);var s,c;if(!o)return;var u=function(e){var t=e.match(i);if(t&&t.length>=3)return{key:t[2],parent:a(t[1],window)};return{key:e,parent:window}}(o);if("function"!=typeof u.parent[u.key])return;var d={};function l(){t.emit("jsonp-end",[],d),e.removeEventListener("load",l,(0,I.jT)(!1)),e.removeEventListener("error",f,(0,I.jT)(!1))}function f(){t.emit("jsonp-error",[],d),t.emit("jsonp-end",[],d),e.removeEventListener("load",l,(0,I.jT)(!1)),e.removeEventListener("error",f,(0,I.jT)(!1))}r.inPlace(u.parent,[u.key],"cb-",d),e.addEventListener("load",l,(0,I.jT)(!1)),e.addEventListener("error",f,(0,I.jT)(!1)),t.emit("new-jsonp",[e.src],d)}(e[0])})),t}const qe={};function Xe(e){const t=function(e){return(e||te.ee).get("promise")}(e);if(qe[t.debugId])return t;qe[t.debugId]=!0;var r=t.context,n=(0,re.YM)(t),i=y.gm.Promise;return i&&function(){function e(r){var o=t.context(),a=n(r,"executor-",o,null,!1);const s=Reflect.construct(i,[a],e);return t.context(s).getCtx=function(){return o},s}y.gm.Promise=e,Object.defineProperty(e,"name",{value:"Promise"}),e.toString=function(){return i.toString()},Object.setPrototypeOf(e,i),["all","race"].forEach((function(r){const n=i[r];e[r]=function(e){let i=!1;[...e||[]].forEach((e=>{this.resolve(e).then(a("all"===r),a(!1))}));const o=n.apply(this,arguments);return o;function a(e){return function(){t.emit("propagate",[null,!i],o,!1,!1),i=i||!e}}}})),["resolve","reject"].forEach((function(r){const n=i[r];e[r]=function(e){const r=n.apply(this,arguments);return e!==r&&t.emit("propagate",[e,!0],r,!1,!1),r}})),e.prototype=i.prototype;const o=i.prototype.then;i.prototype.then=function(...e){var i=this,a=r(i);a.promise=i,e[0]=n(e[0],"cb-",a,null,!1),e[1]=n(e[1],"cb-",a,null,!1);const s=o.apply(this,e);return a.nextPromise=s,t.emit("propagate",[i,!0],s,!1,!1),s},i.prototype.then[re.Jt]=o,t.on("executor-start",(function(e){e[0]=n(e[0],"resolve-",this,null,!1),e[1]=n(e[1],"resolve-",this,null,!1)})),t.on("executor-err",(function(e,t,r){e[1](r)})),t.on("cb-end",(function(e,r,n){t.emit("propagate",[n,!0],this.nextPromise,!1,!1)})),t.on("propagate",(function(e,r,n){this.getCtx&&!r||(this.getCtx=function(){if(e instanceof Promise)var r=t.context(e);return r&&r.getCtx?r.getCtx():this})}))}(),t}const Ye={},$e="setTimeout",Qe="setInterval",Je="clearTimeout",et="-start",tt=[$e,"setImmediate",Qe,Je,"clearImmediate"];function rt(e){const t=function(e){return(e||te.ee).get("timer")}(e);if(Ye[t.debugId]++)return t;Ye[t.debugId]=1;var r=(0,re.YM)(t);return r.inPlace(y.gm,tt.slice(0,2),$e+"-"),r.inPlace(y.gm,tt.slice(2,3),Qe+"-"),r.inPlace(y.gm,tt.slice(3),Je+"-"),t.on(Qe+et,(function(e,t,n){e[0]=r(e[0],"fn-",null,n)})),t.on($e+et,(function(e,t,n){this.method=n,this.timerDuration=isNaN(e[1])?0:+e[1],e[0]=r(e[0],"fn-",this,n)})),t}const nt={};function it(e){const t=function(e){return(e||te.ee).get("mutation")}(e);if(!y.RI||nt[t.debugId])return t;nt[t.debugId]=!0;var r=(0,re.YM)(t),n=y.gm.MutationObserver;return n&&(window.MutationObserver=function(e){return this instanceof n?new n(r(e,"fn-")):n.apply(this,arguments)},MutationObserver.prototype=n.prototype),t}const{TZ:ot,d3:at,Kp:st,$p:ct,wW:ut,e5:dt,tH:lt,uP:ft,rw:ht,Lc:pt}=Ge;class gt extends E{static featureName=ot;constructor(e){if(super(e,ot),We(e),!y.RI)return;try{this.removeOnAbort=new AbortController}catch(e){}let t,r=0;const n=this.ee.get("tracer"),o=Ze(this.ee),a=Xe(this.ee),u=rt(this.ee),d=oe(this.ee),l=this.ee.get("events"),f=he(this.ee),h=_e(this.ee),p=it(this.ee);function g(e,t){h.emit("newURL",[""+window.location,t])}function m(){r++,t=window.location.hash,this[ft]=(0,c.t)()}function v(){r--,window.location.hash!==t&&g(0,!0);var e=(0,c.t)();this[dt]=~~this[dt]+e-this[ft],this[pt]=e}function b(e,t){e.on(t,(function(){this[t]=(0,c.t)()}))}this.ee.on(ft,m),a.on(ht,m),o.on(ht,m),this.ee.on(pt,v),a.on(ut,v),o.on(ut,v),this.ee.on("fn-err",((...t)=>{t[2]?.__newrelic?.[e.agentIdentifier]||(0,s.p)("function-err",[...t],void 0,this.featureName,this.ee)})),this.ee.buffer([ft,pt,"xhr-resolved"],this.featureName),l.buffer([ft],this.featureName),u.buffer(["setTimeout"+st,"clearTimeout"+at,ft],this.featureName),d.buffer([ft,"new-xhr","send-xhr"+at],this.featureName),f.buffer([lt+at,lt+"-done",lt+ct+at,lt+ct+st],this.featureName),h.buffer(["newURL"],this.featureName),p.buffer([ft],this.featureName),a.buffer(["propagate",ht,ut,"executor-err","resolve"+at],this.featureName),n.buffer([ft,"no-"+ft],this.featureName),o.buffer(["new-jsonp","cb-start","jsonp-error","jsonp-end"],this.featureName),b(f,lt+at),b(f,lt+"-done"),b(o,"new-jsonp"),b(o,"jsonp-end"),b(o,"cb-start"),h.on("pushState-end",g),h.on("replaceState-end",g),window.addEventListener("hashchange",g,(0,I.jT)(!0,this.removeOnAbort?.signal)),window.addEventListener("load",g,(0,I.jT)(!0,this.removeOnAbort?.signal)),window.addEventListener("popstate",(function(){g(0,r>1)}),(0,I.jT)(!0,this.removeOnAbort?.signal)),this.abortHandler=this.#r,this.importAggregator(e,(()=>i.e(478).then(i.bind(i,5592))))}#r(){this.removeOnAbort?.abort(),this.abortHandler=void 0}}var mt=i(3333);class vt extends E{static featureName=mt.TZ;constructor(e){super(e,mt.TZ);const t=[e.init.page_action.enabled,e.init.performance.capture_marks,e.init.performance.capture_measures,e.init.user_actions.enabled,e.init.performance.resources.enabled];var r;if(r=e,p(u.hG,((e,t)=>z(e,t,r)),r),function(e){p(u.fF,(function(){(0,s.p)(u.Pl+u.fF,[(0,c.t)(),...arguments],void 0,n.K7.genericEvents,e.ee)}),e)}(e),Oe(e),Z(e),function(e){p(u.V1,(function(t,r){const i=(0,c.t)(),{start:o,end:a,customAttributes:d}=r||{},f={customAttributes:d||{}};if("object"!=typeof f.customAttributes||"string"!=typeof t||0===t.length)return void(0,l.R)(57);const h=(e,t)=>null==e?t:"number"==typeof e?e:e instanceof PerformanceMark?e.startTime:Number.NaN;if(f.start=h(o,0),f.end=h(a,i),Number.isNaN(f.start)||Number.isNaN(f.end))(0,l.R)(57);else{if(f.duration=f.end-f.start,!(f.duration(0,I.sp)(e,(e=>(0,s.p)("ua",[e],void 0,this.featureName,this.ee)),!0))),mt.qN.forEach((e=>{const t=(0,x.s)((e=>{(0,s.p)("ua",[e],void 0,this.featureName,this.ee)}),500,{leading:!0});(0,I.sp)(e,t)}))),e.init.performance.resources.enabled&&y.gm.PerformanceObserver?.supportedEntryTypes.includes("resource"))){new PerformanceObserver((e=>{e.getEntries().forEach((e=>{(0,s.p)("browserPerformance.resource",[e],void 0,this.featureName,this.ee)}))})).observe({type:"resource",buffered:!0})}t.some((e=>e))?this.importAggregator(e,(()=>i.e(478).then(i.bind(i,8019)))):this.deregisterDrain()}}var bt=i(2646);const yt=new Map;function wt(e,t,r,n){if("object"!=typeof t||!t||"string"!=typeof r||!r||"function"!=typeof t[r])return(0,l.R)(29);const i=function(e){return(e||te.ee).get("logger")}(e),o=(0,re.YM)(i),a=new bt.y(te.P);a.level=n.level,a.customAttributes=n.customAttributes;const s=t[r]?.[re.Jt]||t[r];return yt.set(s,a),o.inPlace(t,[r],"wrap-logger-",(()=>yt.get(s))),i}var Rt=i(1910);class xt extends E{static featureName=B.TZ;constructor(e){var t;super(e,B.TZ),t=e,p(u.$9,((e,r)=>V(e,r,t)),t),function(e){p(u.Wb,((t,r,{customAttributes:n={},level:i=B.p_.INFO}={})=>{wt(e.ee,t,r,{customAttributes:n,level:i})}),e)}(e),Z(e);const r=this.ee;["log","error","warn","info","debug","trace"].forEach((e=>{(0,Rt.i)(y.gm.console[e]),wt(r,y.gm.console,e,{level:"log"===e?"info":e})})),this.ee.on("wrap-logger-end",(function([e]){const{level:t,customAttributes:n}=this;(0,G.R)(r,e,n,t)})),this.importAggregator(e,(()=>i.e(478).then(i.bind(i,5288))))}}new class extends r{constructor(e){var t;(super(),y.gm)?(this.features={},(0,N.bQ)(this.agentIdentifier,this),this.desiredFeatures=new Set(e.features||[]),this.desiredFeatures.add(_),this.runSoftNavOverSpa=[...this.desiredFeatures].some((e=>e.featureName===n.K7.softNav)),(0,a.j)(this,e,e.loaderType||"agent"),t=this,p(u.cD,(function(e,r,n=!1){if("string"==typeof e){if(["string","number","boolean"].includes(typeof r)||null===r)return g(t,e,r,u.cD,n);(0,l.R)(40,typeof r)}else(0,l.R)(39,typeof e)}),t),function(e){p(u.Dl,(function(t){if("string"==typeof t||null===t)return g(e,"enduser.id",t,u.Dl,!0);(0,l.R)(41,typeof t)}),e)}(this),function(e){p(u.nb,(function(t){if("string"==typeof t||null===t)return g(e,"application.version",t,u.nb,!1);(0,l.R)(42,typeof t)}),e)}(this),function(e){p(u.d3,(function(){e.ee.emit("manual-start-all")}),e)}(this),this.run()):(0,l.R)(21)}get config(){return{info:this.info,init:this.init,loader_config:this.loader_config,runtime:this.runtime}}get api(){return this}run(){try{const e=function(e){const t={};return o.forEach((r=>{t[r]=!!e[r]?.enabled})),t}(this.init),t=[...this.desiredFeatures];t.sort(((e,t)=>n.P3[e.featureName]-n.P3[t.featureName])),t.forEach((t=>{if(!e[t.featureName]&&t.featureName!==n.K7.pageViewEvent)return;if(this.runSoftNavOverSpa&&t.featureName===n.K7.spa)return;if(!this.runSoftNavOverSpa&&t.featureName===n.K7.softNav)return;const r=function(e){switch(e){case n.K7.ajax:return[n.K7.jserrors];case n.K7.sessionTrace:return[n.K7.ajax,n.K7.pageViewEvent];case n.K7.sessionReplay:return[n.K7.sessionTrace];case n.K7.pageViewTiming:return[n.K7.pageViewEvent];default:return[]}}(t.featureName).filter((e=>!(e in this.features)));r.length>0&&(0,l.R)(36,{targetFeature:t.featureName,missingDependencies:r}),this.features[t.featureName]=new t(this)}))}catch(e){(0,l.R)(22,e);for(const e in this.features)this.features[e].abortHandler?.();const t=(0,N.Zm)();delete t.initializedAgents[this.agentIdentifier]?.features,delete this.sharedAggregator;return t.ee.get(this.agentIdentifier).abort(),!1}}}({features:[Te,_,j,De,Ue,k,q,vt,xt,Be,gt],loaderType:"spa"})})()})();





404 Not Found | Lippert




    









    











.be-ix-link-block .be-related-link-container {    padding-top: 20px;text-align: center;}
.be-ix-link-block .be-related-link-container .be-label {margin: 0;font-family: Barlow, sans-serif;font-size: 1.25rem;
font-weight: 600;line-height: 140%;}
.be-ix-link-block .be-related-link-container .be-list { display: inline-block; list-style: none;margin: 0; padding: 0;}
.be-ix-link-block .be-related-link-container .be-list .be-list-item {display: inline-block;margin-right: 20px;margin-bottom: 6px;}
.be-ix-link-block .be-related-link-container .be-list .be-list-item .be-related-link {font-size: 1rem;}
.be-ix-link-block .be-related-link-container .be-list .be-list-item .be-related-link:hover {text-decoration: underline;}
.be-ix-link-block .be-related-link-container .be-list .be-list-item:last-child { margin-right: 0;}

@media (max-width: 767px) {
  .be-ix-link-block .be-related-link-container .be-label {width: 100%;margin-bottom: 10px;}
  .be-ix-link-block .be-related-link-container .be-list { display: block;width: 100%;}
  .be-ix-link-block .be-related-link-container .be-list .be-list-item {display: block;margin-right: 0;}
}
@media (min-width: 768px) {
  .be-ix-link-block .be-related-link-container {display: flex;align-items: baseline; padding-bottom:15px;}
  .be-ix-link-block .be-related-link-container .be-label {display: inline-block;margin-right: 20px;flex-grow: 0;flex-shrink: 0;}
}






    window.addEventListener('init-external-scripts', () => {
        (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
                new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
            j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
            '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
        })(window,document,'script','dataLayer','GTM-W79MKWD4');
        window.dispatchEvent(new Event('gtmReady'));
    }, {once: true, passive: true})
    var BASE_URL = 'https://www.lippert.com/';
    var THEME_PATH = 'https://www.lippert.com/static/version1759822589/frontend/Vaimo/lippert/en_US';
    var COOKIE_CONFIG = {
        "expires": null,
        "path": "\u002F",
        "domain": ".www.lippert.com",
        "secure": true,
        "lifetime": "1800",
        "cookie_restriction_enabled": false    };
    var CURRENT_STORE_CODE = 'lippert';
    var CURRENT_WEBSITE_ID = '1';

    window.hyva = window.hyva || {}

    window.cookie_consent_groups = window.cookie_consent_groups || {}
    window.cookie_consent_groups['necessary'] = true;

    window.cookie_consent_config = window.cookie_consent_config || {};
    window.cookie_consent_config['necessary'] = [].concat(
        window.cookie_consent_config['necessary'] || [],
        [
            'user_allowed_save_cookie',
            'form_key',
            'mage-messages',
            'private_content_version',
            'mage-cache-sessid',
            'last_visited_store',
            'section_data_ids'
        ]
    );


    'use strict';
    (function( hyva, undefined ) {

        function lifetimeToExpires(options, defaults) {

            var lifetime = options.lifetime || defaults.lifetime;

            if (lifetime) {
                var date = new Date;
                date.setTime(date.getTime() + lifetime * 1000);
                return date;
            }

            return null;
        }

        function generateRandomString() {

            const allowedCharacters = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ',
                length = 16;

            let formKey = '',
                charactersLength = allowedCharacters.length;

            for (var i = 0; i  {
            const cookieConfig = window.COOKIE_CONFIG || {};

            if (cookieConfig.cookie_restriction_enabled && ! internalCookie.isCookieAllowed(name)) {
                return cookieTempStorage[name] ? cookieTempStorage[name]['value'] : null;
            }

            return internalCookie.get(name);
        }

        hyva.setCookie = (name, value, days, skipSetDomain) => {
            const cookieConfig = window.COOKIE_CONFIG || {};

            if (cookieConfig.cookie_restriction_enabled && ! internalCookie.isCookieAllowed(name)) {
                cookieTempStorage[name] = {value, days, skipSetDomain};
                return;
            }
            return internalCookie.set(name, value, days, skipSetDomain);
        }


        hyva.setSessionCookie = (name, value, skipSetDomain) => {
            return hyva.setCookie(name, value, sessionCookieMarker, skipSetDomain)
        }

        hyva.getBrowserStorage = () => {
            const browserStorage = window.localStorage || window.sessionStorage;
            if (!browserStorage) {
                console.warn('Browser Storage is unavailable');
                return false;
            }
            try {
                browserStorage.setItem('storage_test', 1);
                browserStorage.removeItem('storage_test');
            } catch (error) {
                console.warn('Browser Storage is not accessible', error);
                return false;
            }
            return browserStorage;
        }

        hyva.postForm = (postParams) => {
            const form = document.createElement("form");

            let data = postParams.data;

            if (! postParams.skipUenc && ! data.uenc) {
                data.uenc = btoa(window.location.href);
            }
            form.method = "POST";
            form.action = postParams.action;

            Object.keys(postParams.data).map(key => {
                const field = document.createElement("input");
                field.type = 'hidden'
                field.value = postParams.data[key];
                field.name = key;
                form.appendChild(field);
            });

            const form_key = document.createElement("input");
            form_key.type = 'hidden';
            form_key.value = hyva.getFormKey();
            form_key.name="form_key";
            form.appendChild(form_key);

            document.body.appendChild(form);

            form.submit();
        }

        hyva.getFormKey = function () {
            let formKey = hyva.getCookie('form_key');

            if (!formKey) {
                formKey = generateRandomString();
                hyva.setCookie('form_key', formKey);
            }

            return formKey;
        }

        hyva.formatPrice = (value, showSign, options = {}) => {
            const formatter = new Intl.NumberFormat(
                'en\u002DUS',
                Object.assign({
                                  style: 'currency',
                                  currency: 'USD',
                                  signDisplay: showSign ? 'always' : 'auto'
                              }, options)
            );
            return (typeof Intl.NumberFormat.prototype.formatToParts === 'function') ?
                formatter.formatToParts(value).map(({type, value}) => {
                    switch (type) {
                        case 'currency':
                            return '\u0024' || value;
                        case 'minusSign':
                            return '-';
                        case 'plusSign':
                            return '+';
                        default :
                            return value;
                    }
                }).reduce((string, part) => string + part) :
                formatter.format(value);
        }

                const formatStr = function (str, nStart) {
            const args = Array.from(arguments).slice(2);

            return str.replace(/(%+)([0-9]+)/g, (m, p, n) => {
                const idx = parseInt(n) - nStart;

                if (args[idx] === null || args[idx] === void 0) {
                    return m;
                }
                return p.length % 2
                    ? p.slice(0, -1).replace('%%', '%') + args[idx]
                    : p.replace('%%', '%') + n;
            })
        }

                hyva.str = function (string) {
            const args = Array.from(arguments);
            args.splice(1, 0, 1);

            return formatStr.apply(undefined, args);
        }

                hyva.strf = function () {
            const args = Array.from(arguments);
            args.splice(1, 0, 0);

            return formatStr.apply(undefined, args);
        }

        /**
         * Take a html string as `content` parameter and
         * extract an element from the DOM to replace in
         * the current page under the same selector,
         * defined by `targetSelector`
         */
        hyva.replaceDomElement = (targetSelector, content) => {
            // Parse the content and extract the DOM node using the `targetSelector`
            const parser = new DOMParser();
            const doc = parser.parseFromString(content, 'text/html');
            const contentNode = doc.querySelector(targetSelector);

            // Bail if content can't be found
            if (!contentNode) {
                return;
            }

            hyva.activateScripts(contentNode)

            // Replace the old DOM node with the new content
            document.querySelector(targetSelector).replaceWith(contentNode);

            // Reload customerSectionData and display cookie-messages if present
            window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
            hyva.initMessages();
        }

        hyva.activateScripts = (contentNode) => {
            // Extract all the script tags from the content.
            // Script tags won't execute when inserted into a dom-element directly,
            // therefore we need to inject them to the head of the document.
            const tmpScripts = contentNode.getElementsByTagName('script');

            if (tmpScripts.length > 0) {
                // Push all script tags into an array
                // (to prevent dom manipulation while iterating over dom nodes)
                const scripts = [];
                for (let i = 0; i  btoa(window.location.href).replace(/[+/=]/g, match => replace[match]);

        var currentTrap;

        const focusableElements = (rootElement) => {
            const selector = 'button, [href], input, select, textarea, details, [tabindex]:not([tabindex="-1"]';
            return Array.from(rootElement.querySelectorAll(selector))
                .filter(el => {
                    return el.style.display !== 'none'
                           && !el.disabled
                           && el.tabIndex !== -1
                           && (el.offsetWidth || el.offsetHeight || el.getClientRects().length)
                })
        }

        const focusTrap = (e) => {
            const isTabPressed = e.key === 'Tab' || e.keyCode === 9;
            if (!isTabPressed) return;

            const focusable = focusableElements(currentTrap)
            const firstFocusableElement = focusable[0]
            const lastFocusableElement = focusable[focusable.length - 1]

            e.shiftKey
                ? document.activeElement === firstFocusableElement && (lastFocusableElement.focus(), e.preventDefault())
                : document.activeElement === lastFocusableElement && (firstFocusableElement.focus(), e.preventDefault())
        };

        hyva.releaseFocus = (rootElement) => {
            if (currentTrap && (!rootElement || rootElement === currentTrap)) {
                currentTrap.removeEventListener('keydown', focusTrap)
                currentTrap = null
            }
        }
        hyva.trapFocus = (rootElement) => {
            if (!rootElement) return;
            hyva.releaseFocus()
            currentTrap = rootElement
            rootElement.addEventListener('keydown', focusTrap)
            const firstElement = focusableElements(rootElement)[0]
            firstElement && firstElement.focus()
        }

                hyva.alpineInitialized = (fn) => window.addEventListener('alpine:initialized', fn, {once: true})
                window.addEventListener('user-allowed-save-cookie', () => internalCookie.saveTempStorageCookies())

    }( window.hyva = window.hyva || {} ));


    if (!window.IntersectionObserver) {
        window.IntersectionObserver = function (callback) {
            this.observe = el => el && callback(this.takeRecords());
            this.takeRecords = () => [{isIntersecting: true, intersectionRatio: 1}];
            this.disconnect = () => {};
            this.unobserve = () => {};
        }
    }



    const setTransitionNameBetweenGallery = async (url, promise) => {
        if (window.matchMedia('(prefers-reduced-motion)').matches) return;

        const productGallery = document.getElementById('gallery');
        const productListItem = document.querySelector(`.product-item-photo[href="${url}"]`);
        const targetElement = productListItem
            ? productListItem
            : (productGallery ? productGallery.querySelector('img').parentNode : null);

        if (targetElement) {
            targetElement.style.viewTransitionName = 'view-transition-to-gallery';
            await promise;
            targetElement.style.viewTransitionName = '';
        }
    };

    window.addEventListener('pageswap', async (e) => {
        if (!e.viewTransition) return;
        const targetUrl = new URL(e.activation.entry.url);
        setTransitionNameBetweenGallery(targetUrl.href, e.viewTransition.finished);
    });

    window.addEventListener('pagereveal', async (e) => {
        if (!e.viewTransition || !navigation.activation.from) return;
        const fromUrl = new URL(navigation.activation.from.url);
        // const entryURL = new URL(navigation.activation.entry.url);
        setTransitionNameBetweenGallery(fromUrl.href, e.viewTransition.ready);
    });



    @view-transition {
        navigation: auto;
    }



    'use strict';

    document.addEventListener('DOMContentLoaded', function () {
        if (HTMLScriptElement.supports && HTMLScriptElement.supports('speculationrules')) {
            const specScript = document.createElement('script');
            specScript.type = 'speculationrules';
            specScript.textContent = '{"prerender":[{"where":{"href_matches":"/*"},"eagerness":"moderate"},{"source":"list","urls":[]}]}';
            document.body.append(specScript);
        }
    })


    
    window.algoliaConfig = {"instant":{"enabled":true,"selector":".columns","isAddToCartEnabled":true,"addToCartParams":{"action":"https:\/\/www.lippert.com\/checkout\/cart\/add\/","formKey":"0bWX3IvLyp83P2Wp","redirectUrlParam":"uenc"},"infiniteScrollEnabled":false,"urlTrackedParameters":["query","attribute:*","index","page"],"isSearchBoxEnabled":false,"isVisualMerchEnabled":false,"categorySeparator":" \/\/\/ ","categoryPageIdAttribute":"categoryPageId","isCategoryNavigationEnabled":false,"hidePagination":false},"autocomplete":{"enabled":true,"selector":".algolia-search-input","sections":[{"name":"pages","label":"Learn & Explore","hitsPerPage":"2"},{"name":"blogs","label":"Blogs","hitsPerPage":"2"}],"nbOfProductsSuggestions":10,"nbOfCategoriesSuggestions":2,"nbOfQueriesSuggestions":4,"isDebugEnabled":true,"isNavigatorEnabled":true,"debounceMilliseconds":300,"minimumCharacters":0},"landingPage":{"query":"","configuration":"[]"},"recommend":{"enabledFBT":false,"enabledRelated":false,"enabledFBTInCart":false,"enabledRelatedInCart":false,"enabledLookingSimilar":0,"limitFBTProducts":6,"limitRelatedProducts":6,"limitTrendingItems":6,"limitLookingSimilar":6,"enabledTrendItems":0,"trendItemFacetName":null,"trendItemFacetValue":null,"isTrendItemsEnabledInPDP":0,"isTrendItemsEnabledInCartPage":0,"isAddToCartEnabledInFBT":false,"isAddToCartEnabledInRelatedProduct":false,"isAddToCartEnabledInTrendsItem":false,"isAddToCartEnabledInLookingSimilar":false,"FBTTitle":"Frequently bought together","relatedProductsTitle":"Related products","trendingItemsTitle":"Trending items","addToCartParams":{"action":"https:\/\/www.lippert.com\/checkout\/cart\/add\/","formKey":"0bWX3IvLyp83P2Wp","redirectUrlParam":"uenc"},"isLookingSimilarEnabledInPDP":0,"isLookingSimilarEnabledInCartPage":0,"lookingSimilarTitle":"Looking Similar"},"extensionVersion":"3.14.3","applicationId":"KEVIIVKC0U","indexName":"gwp_d2c_prod_lippert","apiKey":"ZDk1NmI4ZDJmNjlmYWY4M2QzMjhhNTZhZGI0Y2NkODNjYTdmMGFiYWE4OGM4MjAxYWJjNzAyMGY1OGMyZTFiN2ZpbHRlcnM9Y2F0YWxvZ19wZXJtaXNzaW9ucy5jdXN0b21lcl9ncm91cF8wJTIwJTIxJTNEJTIwMCZ0YWdGaWx0ZXJzPSZ2YWxpZFVudGlsPTE3NTk5MzY0MTc=","attributeFilter":{"filters":"catalog_permissions.customer_group_0 != 0"},"facets":{"0":{"attribute":"categories","type":"conjunctive","label":"Categories","searchable":"2","create_rule":"2"},"1":{"attribute":"price","type":"priceRanges","label":"Price","searchable":"2","create_rule":"2"},"2":{"attribute":"giftcard_type","type":"disjunctive","label":"Card Type","searchable":"2","create_rule":"2"},"3":{"attribute":"frnmat_marine_type","type":"disjunctive","label":"Marine Seating Type","searchable":"2","create_rule":"2"},"4":{"attribute":"cargo_bin_size","type":"disjunctive","label":"Cargo Bin Size","searchable":"2","create_rule":"2"},"5":{"attribute":"awn_fabric_closed_color","type":"colorSwatches","label":"Fabric Color When Closed","searchable":"2","create_rule":"2"},"6":{"attribute":"awn_roller_fabric_width","type":"disjunctive","label":"Awning Width","searchable":"2","create_rule":"2"},"7":{"attribute":"measfit_pattern","type":"disjunctive","label":"Pattern","searchable":"2","create_rule":"2"},"8":{"attribute":"axle_beam_diameter","type":"disjunctive","label":"Axle Beam Diameter","searchable":"2","create_rule":"2"},"9":{"attribute":"water_drain_location","type":"disjunctive","label":"Drain Location","searchable":"2","create_rule":"2"},"10":{"attribute":"frnmat_mattress_size","type":"disjunctive","label":"Mattress Size","searchable":"2","create_rule":"2"},"11":{"attribute":"leveling_kit_type","type":"disjunctive","label":"Leveling Kit Type","searchable":"2","create_rule":"2"},"12":{"attribute":"outdoor_furniture_type","type":"disjunctive","label":"Camping Furniture Type","searchable":"2","create_rule":"2"},"13":{"attribute":"measfit_watts","type":"disjunctive","label":"Watts","searchable":"2","create_rule":"2"},"14":{"attribute":"boating_dock_box_style","type":"disjunctive","label":"Dock Box Style","searchable":"2","create_rule":"2"},"15":{"attribute":"water_faucet_cartridge_style","type":"disjunctive","label":"Faucet Cartridge Style","searchable":"2","create_rule":"2"},"16":{"attribute":"frnmat_recliner_type","type":"disjunctive","label":"Recliner Type","searchable":"2","create_rule":"2"},"17":{"attribute":"frnmat_sofa_type","type":"disjunctive","label":"Sofa Type","searchable":"2","create_rule":"2"},"18":{"attribute":"axle_hanger_spacing","type":"disjunctive","label":"Hanger Spacing","searchable":"2","create_rule":"2"},"19":{"attribute":"axle_brake_mounting_bolt_size","type":"disjunctive","label":"Axle Brake Mounting Bolt Size","searchable":"2","create_rule":"2"},"20":{"attribute":"axle_lubrication_system","type":"disjunctive","label":"Lubrication System","searchable":"2","create_rule":"2"},"21":{"attribute":"axle_type","type":"disjunctive","label":"Axle Type","searchable":"2","create_rule":"2"},"22":{"attribute":"cargo_trim_application","type":"disjunctive","label":"Cargo Trim Application","searchable":"2","create_rule":"2"},"23":{"attribute":"tow_pin_box_style","type":"disjunctive","label":"Pin Box Style","searchable":"2","create_rule":"2"},"24":{"attribute":"cargo_adapter_application","type":"disjunctive","label":"Cargo Adapter Application","searchable":"2","create_rule":"2"},"25":{"attribute":"cargo_compartment_depth","type":"disjunctive","label":"Compartment Depth","searchable":"2","create_rule":"2"},"26":{"attribute":"series","type":"disjunctive","label":"Series","searchable":"2","create_rule":"2"},"27":{"attribute":"awn_type","type":"disjunctive","label":"Awning Type","searchable":"2","create_rule":"2"},"28":{"attribute":"awn_roller_model","type":"disjunctive","label":"Roller Model","searchable":"2","create_rule":"2"},"29":{"attribute":"awn_light_kit_size","type":"disjunctive","label":"Light Kit Size","searchable":"2","create_rule":"2"},"30":{"attribute":"awn_arm_size","type":"disjunctive","label":"Awning Arm Size","searchable":"2","create_rule":"2"},"31":{"attribute":"measfit_weight_capacity","type":"disjunctive","label":"Weight Capacity","searchable":"2","create_rule":"2"},"32":{"attribute":"measfit_fit_side","type":"disjunctive","label":"Side","searchable":"2","create_rule":"2"},"33":{"attribute":"measfit_voltage","type":"disjunctive","label":"Voltage","searchable":"2","create_rule":"2"},"34":{"attribute":"step_operation_type","type":"disjunctive","label":"Step Operation Type","searchable":"2","create_rule":"2"},"35":{"attribute":"axle_shackle_size","type":"disjunctive","label":"Shackle Size","searchable":"2","create_rule":"2"},"36":{"attribute":"cargo_tray_area","type":"disjunctive","label":"Cargo Tray Area Dimensions","searchable":"2","create_rule":"2"},"37":{"attribute":"frnmat_modular_type","type":"disjunctive","label":"Modular Seating Type","searchable":"2","create_rule":"2"},"38":{"attribute":"axle_equalizer_type","type":"disjunctive","label":"Equalizer Type","searchable":"2","create_rule":"2"},"39":{"attribute":"axle_hub_style","type":"disjunctive","label":"Hub Style","searchable":"2","create_rule":"2"},"40":{"attribute":"tow_gross_trailer_weight","type":"disjunctive","label":"Gross Trailer Weight (GTW)","searchable":"2","create_rule":"2"},"41":{"attribute":"towing_receiver_size","type":"disjunctive","label":"Receiver Size","searchable":"2","create_rule":"2"},"42":{"attribute":"tow_tongue_weight_capacity","type":"disjunctive","label":"Tongue Weight Capacity","searchable":"2","create_rule":"2"},"43":{"attribute":"elecapp_capacity","type":"disjunctive","label":"Appliance Capacity","searchable":"2","create_rule":"2"},"44":{"attribute":"measfit_color","type":"colorSwatches","label":"Product Color","searchable":"2","create_rule":"2"},"45":{"attribute":"axle_hub_bolt_pattern","type":"disjunctive","label":"Hub Bolt Pattern","searchable":"2","create_rule":"2"},"46":{"attribute":"axle_brake_flange_bolt_pattern","type":"disjunctive","label":"Brake Flange Count","searchable":"2","create_rule":"2"},"47":{"attribute":"hardware_part_type","type":"disjunctive","label":"Part Type","searchable":"2","create_rule":"2"},"48":{"attribute":"sealant_type","type":"disjunctive","label":"Sealant Type","searchable":"2","create_rule":"2"},"49":{"attribute":"axle_count","type":"disjunctive","label":"Axle Count","searchable":"2","create_rule":"2"},"50":{"attribute":"axle_hanger_drop","type":"disjunctive","label":"Hanger Drop","searchable":"2","create_rule":"2"},"51":{"attribute":"hdw_washer_type","type":"disjunctive","label":"Washer Type","searchable":"2","create_rule":"2"},"52":{"attribute":"elecapp_burner_count","type":"disjunctive","label":"Burner Count","searchable":"2","create_rule":"2"},"53":{"attribute":"awn_accy_type","type":"disjunctive","label":"Awning Accessory Type","searchable":"2","create_rule":"2"},"55":{"attribute":"awn_arm_adjustment","type":"disjunctive","label":"Awning Arm Adjustment","searchable":"2","create_rule":"2"},"56":{"attribute":"awn_fabric_color","type":"disjunctive","label":"Awning Fabric Color","searchable":"2","create_rule":"2"},"57":{"attribute":"awn_hardware_color","type":"disjunctive","label":"Awning Hardware Color","searchable":"2","create_rule":"2"},"58":{"attribute":"awn_hardware_model","type":"disjunctive","label":"Hardware Model","searchable":"2","create_rule":"2"},"59":{"attribute":"awn_roller_projection","type":"disjunctive","label":"Roller Projection","searchable":"2","create_rule":"2"},"60":{"attribute":"axle_brake_size","type":"disjunctive","label":"Brake Size","searchable":"2","create_rule":"2"},"61":{"attribute":"axle_brake_type","type":"disjunctive","label":"Brake Type","searchable":"2","create_rule":"2"},"62":{"attribute":"axle_capacity","type":"disjunctive","label":"Axle Capacity","searchable":"2","create_rule":"2"},"63":{"attribute":"axle_spring_load_length","type":"disjunctive","label":"Load Length","searchable":"2","create_rule":"2"},"64":{"attribute":"axle_spring_type","type":"disjunctive","label":"Axle Spring Type","searchable":"2","create_rule":"2"},"65":{"attribute":"brand","type":"disjunctive","label":"Brand","searchable":"2","create_rule":"2"},"66":{"attribute":"cargo_bike_capacity","type":"disjunctive","label":"Bike Capacity","searchable":"2","create_rule":"2"},"67":{"attribute":"cargo_case_material","type":"disjunctive","label":"Cargo Case Material","searchable":"2","create_rule":"2"},"68":{"attribute":"cargo_hitch_size","type":"disjunctive","label":"Compartment Width","searchable":"2","create_rule":"2"},"69":{"attribute":"cargo_lock_method","type":"disjunctive","label":"Cargo Locking Method","searchable":"2","create_rule":"2"},"70":{"attribute":"cargo_mounting_location","type":"disjunctive","label":"Cargo Mounting Location","searchable":"2","create_rule":"2"},"71":{"attribute":"cargo_rack_features","type":"disjunctive","label":"Cargo Rack Features","searchable":"2","create_rule":"2"},"72":{"attribute":"cargo_rack_style","type":"disjunctive","label":"Cargo Rack Style","searchable":"2","create_rule":"2"},"73":{"attribute":"cargo_storage_application","type":"disjunctive","label":"Storage Application","searchable":"2","create_rule":"2"},"74":{"attribute":"cargo_tire_winch_options","type":"disjunctive","label":"Tire Winch Options","searchable":"2","create_rule":"2"},"75":{"attribute":"door_hinge_location","type":"disjunctive","label":"Door Hinge Location","searchable":"2","create_rule":"2"},"76":{"attribute":"door_hinge_type","type":"disjunctive","label":"Door Hinge Type","searchable":"2","create_rule":"2"},"77":{"attribute":"door_opening_call_size","type":"disjunctive","label":"Door Size","searchable":"2","create_rule":"2"},"78":{"attribute":"door_type","type":"disjunctive","label":"Door Type","searchable":"2","create_rule":"2"},"79":{"attribute":"elecapp_cord_length","type":"disjunctive","label":"Cord Length","searchable":"2","create_rule":"2"},"80":{"attribute":"elecapp_energy_inlet_shape","type":"disjunctive","label":"Inlet Shape","searchable":"2","create_rule":"2"},"81":{"attribute":"electrical_component_app","type":"disjunctive","label":"Electrical Component Application","searchable":"2","create_rule":"2"},"82":{"attribute":"electrical_component_type","type":"disjunctive","label":"Electrical Component Type","searchable":"2","create_rule":"2"},"83":{"attribute":"frnmat_cover_application","type":"disjunctive","label":"Mattress Cover Application","searchable":"2","create_rule":"2"},"84":{"attribute":"frnmat_fabric_color","type":"disjunctive","label":"Fabric Color","searchable":"2","create_rule":"2"},"85":{"attribute":"frnmat_fabric_type","type":"disjunctive","label":"Fabric Type","searchable":"2","create_rule":"2"},"86":{"attribute":"frnmat_furniture_features","type":"disjunctive","label":"Furniture Features","searchable":"2","create_rule":"2"},"87":{"attribute":"frnmat_mattress_style","type":"disjunctive","label":"Mattress Style","searchable":"2","create_rule":"2"},"88":{"attribute":"frnmat_mattress_type","type":"disjunctive","label":"Mattress Type","searchable":"2","create_rule":"2"},"89":{"attribute":"hardware_application","type":"disjunctive","label":"Hardware Application","searchable":"2","create_rule":"2"},"90":{"attribute":"hardware_type","type":"disjunctive","label":"Hardware Type","searchable":"2","create_rule":"2"},"91":{"attribute":"leveling_lift_capacity","type":"disjunctive","label":"Lift Capacity","searchable":"2","create_rule":"2"},"92":{"attribute":"level_jack_count","type":"disjunctive","label":"Leveling Jack Count","searchable":"2","create_rule":"2"},"93":{"attribute":"level_jack_feature","type":"disjunctive","label":"Jack Features","searchable":"2","create_rule":"2"},"94":{"attribute":"level_jack_style","type":"disjunctive","label":"Jack Style","searchable":"2","create_rule":"2"},"95":{"attribute":"level_jack_type","type":"disjunctive","label":"Jack Type","searchable":"2","create_rule":"2"},"96":{"attribute":"level_mount_location","type":"disjunctive","label":"Jack Mounting Location","searchable":"2","create_rule":"2"},"97":{"attribute":"level_system_type","type":"disjunctive","label":"Leveling System Type","searchable":"2","create_rule":"2"},"98":{"attribute":"measfit_amperage","type":"disjunctive","label":"Amperage","searchable":"2","create_rule":"2"},"99":{"attribute":"measfit_extended_length","type":"disjunctive","label":"Extended Length","searchable":"2","create_rule":"2"},"100":{"attribute":"measfit_material","type":"disjunctive","label":"Material Type","searchable":"2","create_rule":"2"},"101":{"attribute":"measfit_units_system","type":"disjunctive","label":"Measuring Units","searchable":"2","create_rule":"2"},"102":{"attribute":"merch_apparel_gender_type","type":"disjunctive","label":"Apparel Gender Style","searchable":"2","create_rule":"2"},"103":{"attribute":"merch_apparel_sleeve_type","type":"disjunctive","label":"Sleeve Type","searchable":"2","create_rule":"2"},"104":{"attribute":"merch_clothing_size_short","type":"disjunctive","label":"Apparel Size","searchable":"2","create_rule":"2"},"105":{"attribute":"merch_series","type":"disjunctive","label":"Merchandise Series","searchable":"2","create_rule":"2"},"106":{"attribute":"product_ratio","type":"disjunctive","label":"Ratio","searchable":"2","create_rule":"2"},"107":{"attribute":"slide_arm_rack_size","type":"disjunctive","label":"Arm Rack Size","searchable":"2","create_rule":"2"},"108":{"attribute":"slide_drive_type","type":"disjunctive","label":"Drive Type","searchable":"2","create_rule":"2"},"109":{"attribute":"step_count","type":"disjunctive","label":"Step Count","searchable":"2","create_rule":"2"},"110":{"attribute":"step_features","type":"disjunctive","label":"Step Features","searchable":"2","create_rule":"2"},"111":{"attribute":"step_model","type":"disjunctive","label":"Step Model","searchable":"2","create_rule":"2"},"112":{"attribute":"step_type","type":"disjunctive","label":"Step Type","searchable":"2","create_rule":"2"},"113":{"attribute":"towing_spring_bar_style","type":"disjunctive","label":"Spring Bar Style","searchable":"2","create_rule":"2"},"114":{"attribute":"tow_capacity","type":"disjunctive","label":"Towing Capacity","searchable":"2","create_rule":"2"},"115":{"attribute":"tow_coupler_type","type":"disjunctive","label":"Coupler Type","searchable":"2","create_rule":"2"},"116":{"attribute":"tow_enhance_kit_type","type":"disjunctive","label":"Towing Enhancement Kit Type","searchable":"2","create_rule":"2"},"117":{"attribute":"tow_hardware_kit_type","type":"disjunctive","label":"Towing Hardware Kit Type","searchable":"2","create_rule":"2"},"118":{"attribute":"tow_lci_box_num","type":"disjunctive","label":"LCI Pin Box Number","searchable":"2","create_rule":"2"},"119":{"attribute":"tow_mounting_position","type":"disjunctive","label":"Towing Mount Position","searchable":"2","create_rule":"2"},"120":{"attribute":"tow_oem_box_num","type":"disjunctive","label":"OEM Pin Box Number","searchable":"2","create_rule":"2"},"121":{"attribute":"tow_pin_box_bolt_pattern","type":"disjunctive","label":"Pin Box Bolt Pattern","searchable":"2","create_rule":"2"},"122":{"attribute":"tow_wdtw","type":"disjunctive","label":"Weight Distribution Tongue Weight (WDTW)","searchable":"2","create_rule":"2"},"123":{"attribute":"vertical_load_limit","type":"disjunctive","label":"Vertical Load Limit","searchable":"2","create_rule":"2"},"124":{"attribute":"water_connection_type","type":"disjunctive","label":"Connection Type","searchable":"2","create_rule":"2"},"125":{"attribute":"water_faucet_mount_holes","type":"disjunctive","label":"Faucet Mounting Holes","searchable":"2","create_rule":"2"},"126":{"attribute":"water_faucet_spout_style","type":"disjunctive","label":"Spout Style","searchable":"2","create_rule":"2"},"127":{"attribute":"water_hose_support_accessory","type":"disjunctive","label":"Hose Support Accessory","searchable":"2","create_rule":"2"},"128":{"attribute":"water_sink_application","type":"disjunctive","label":"Sink Application","searchable":"2","create_rule":"2"},"129":{"attribute":"water_sink_mount_type","type":"disjunctive","label":"Sink Mount Type","searchable":"2","create_rule":"2"},"130":{"attribute":"water_sink_style","type":"disjunctive","label":"Sink Style","searchable":"2","create_rule":"2"},"131":{"attribute":"water_tub_surround_shape","type":"disjunctive","label":"Wall Surround Shape","searchable":"2","create_rule":"2"},"132":{"attribute":"water_wall_surround_texture","type":"disjunctive","label":"Wall Surround Texture","searchable":"2","create_rule":"2"},"133":{"attribute":"water_waste_hose_accessory","type":"disjunctive","label":"Hose Accessory","searchable":"2","create_rule":"2"},"134":{"attribute":"winch_options","type":"disjunctive","label":"Winch Extension Options","searchable":"2","create_rule":"2"}},"areCategoriesInFacets":true,"hitsPerPage":12,"sortingIndices":[{"attribute":"price","sort":"asc","sortLabel":"Lowest price","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_price_default_asc","ranking":["asc(price.USD.default)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Lowest price"},{"attribute":"price","sort":"desc","sortLabel":"Highest price","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_price_default_desc","ranking":["desc(price.USD.default)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Highest price"},{"attribute":"best_seller_label","sort":"desc","sortLabel":"Best Sellers","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_best_seller_label_desc","ranking":["desc(best_seller_label)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Best Sellers"},{"attribute":"sku","sort":"asc","sortLabel":"SKU","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_sku_asc","ranking":["asc(sku)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"SKU"}],"isSearchPage":false,"isCategoryPage":false,"isLandingPage":false,"removeBranding":true,"productId":null,"priceKey":".USD.default","priceGroup":null,"origFormatedVar":"price.USD.default_original_formated","tierFormatedVar":"price.USD.default_tier_formated","currencyCode":"USD","currencySymbol":"$","priceFormat":{"pattern":"$%s","precision":2,"requiredPrecision":2,"decimalSymbol":".","groupSymbol":",","groupLength":3,"integerRequired":false},"maxValuesPerFacet":12,"autofocus":true,"resultPageUrl":"https:\/\/www.lippert.com\/catalogsearch\/result\/","request":{"query":"","refinementKey":"","refinementValue":"","categoryId":"","landingPageId":"","path":"","level":"","parentCategory":"","childCategories":[],"url":"https:\/\/www.lippert.com\/search"},"showCatsNotIncludedInNavigation":false,"showSuggestionsOnNoResultsPage":true,"baseUrl":"https:\/\/www.lippert.com","popularQueries":["window","door","power gear","test","windows","steps","awning parts","camera","step","happijac"],"useAdaptiveImage":false,"urls":{"logo":"https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Algolia_AlgoliaSearch\/js\/images\/algolia-logo-blue.svg"},"cookieConfiguration":{"customerTokenCookie":"_ALGOLIA_MAGENTO_AUTH","consentCookieName":"user_allowed_save_cookie","cookieAllowButtonSelector":"#btn-cookie-allow","cookieRestrictionModeEnabled":false,"cookieDuration":"15552000000"},"ccAnalytics":{"enabled":true,"ISSelector":".product-item-photo, .search-panel__product-name, .product-item-link, .search-panel__product-image","conversionAnalyticsMode":"all","addToCartSelector":".js-button-add-to-cart","orderedProductIds":[]},"isPersonalizationEnabled":false,"personalization":{"enabled":false,"viewedEvents":{"viewProduct":{"eventName":"Viewed Product","enabled":false,"method":"viewedObjectIDs"}},"clickedEvents":{"productClicked":{"eventName":"Product Clicked","enabled":false,"selector":".ais-Hits-item a.result, .ais-InfiniteHits-item a.result","method":"clickedObjectIDs"},"productRecommended":{"eventName":"Recommended Product Clicked","enabled":false,"selector":".products-upsell .product-item","method":"clickedObjectIDs"}},"filterClicked":{"eventName":"Filter Clicked","enabled":false,"method":"clickedFilters"}},"analytics":{"enabled":true,"delay":"3000","triggerOnUiInteraction":"1","pushInitialSearch":"0"},"now":1759795200,"queue":{"isEnabled":true,"nbOfJobsToRun":10,"retryLimit":3,"nbOfElementsPerIndexingJob":300},"isPreventBackendRenderingEnabled":false,"translations":{"to":"to","or":"or","go":"Go","popularQueries":"You can try one of the popular search queries","seeAll":"See all products","allDepartments":"Search page","seeIn":"See products in","orIn":"or in","noProducts":"No products for query","noResults":"No results","refine":"Refine","selectedFilters":"Selected Filters","clearAll":"Clear all","previousPage":"Previous page","nextPage":"Next page","searchFor":"Search for products","relevance":"Relevance","categories":"Categories","products":"Products","suggestions":"Suggestions","searchBy":"Search by","searchForFacetValuesPlaceholder":"Search for other ...","showMore":"Show more products","searchTitle":"Search results for","placeholder":"Search for products, categories, ...","addToCart":"Add to Cart","sku":"SKU","viewAllProductResults":"View all product results","viewAll":"View all","allProducts":"All products","in":"in","noResultsFound":"No results found"}};

    'use strict';

    window.dataLayer = window.dataLayer || [];

    function handleAttributes(element) {
        const attributes = element.attributes;
        let data = {};

        for (let i = 0; i  0) {
            pages.forEach((elem) => {
                simplePushLayer(elem.getAttribute('data-g4-trigger-page'), handleAttributes(elem));
            });
        }
    }

    function simplePushLayer (event, value) {
        dataLayer.push({ event, value });
    }

    window.addEventListener('gtmReady', () => {
        document.addEventListener('click', event => {
            const target = event.target;

            if (target.matches('[data-g4-trigger]')) {
                simplePushLayer(target.getAttribute('data-g4-trigger'), handleAttributes(target));
            }
        });

        document.addEventListener('change', event => {
            const target = event.target;

            if (target.matches('[data-g4-trigger-change]')) {
                simplePushLayer(target.getAttribute('data-g4-trigger-change'), handleAttributes(target));
            }
        });

        document.addEventListener('submit', event => {
            const target = event.target;

            if (target.matches('[data-g4-trigger-form]')) {
                simplePushLayer(target.getAttribute('data-g4-trigger-form'), handleAttributes(target));
            }
        });

        handlePages();
    })





    'use strict';

    (function () {
        window.fbqCompatiilityGdprCookie = {
            allowedCookies: null,
            disallowedCookies: null,
            isAllowedToRunScript: null,
            facebookPixelCookieName: '_fbp',
            listeners: [
                "cookiebar-action-accept-finish",
                "cookiebar-action-allow-finish"
            ],

            /**
             * @public
             * @params {Object} config
             * @returns {void}
             */
            init(config) {
                this.listeners.forEach(listener => {
                    window.addEventListener(listener, () =>
                        this.sendFbq(config),
                        {once:true}
                    );
                });

                this.sendFbq(config);
            },

            /**
             * @private
             * @params {Object} config
             * @returns {void}
             */
            sendFbq: function (config) {
                this.disallowedCookies = hyva.getCookie('amcookie_disallowed') || '';
                this.allowedCookies = hyva.getCookie('amcookie_allowed') || '';
                this.isAllowedToRunScript = !!this.allowedCookies.length
                    && (!this.disallowedCookies || this.disallowedCookies.indexOf(this.facebookPixelCookieName) === -1)

                if (this.isAllowedToRunScript) {
                    fbq(config.callMethod, config.arguments, config.advancedInfo ?? {});
                }
            }
        }
    })();

    
        !function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
            n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
            n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];
            t=b.createElement(e);t.async=!0;t.src=v;s=b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t,s)}(window,
            document,'script','https://connect.facebook.net/en_US/fbevents.js');
    
                        
        
            
        
        
                        
            window.fbqCompatiilityGdprCookie.init({
                "callMethod": "init",
                "arguments": "1043719779047477",
                "advancedInfo": {}            })
        
        
        window.fbqCompatiilityGdprCookie.init({
            "callMethod": "track",
            "arguments": "PageView"
        })
    



    
        'use strict';

        window.dataLayer = window.dataLayer || [];
        window.gtmConfig = window.gtmConfig || {};
        window.gtmConfig.global = {
            "affiliation": "",
            "location_id": "",
            "currency": "USD",
            "add_remove_product_active": 1,
            "search_term_active": 1        }

        window.addEventListener('private-content-loaded', data => {
            window.gtmConfig.cartProducts = data.detail.data.cart.items;
        }, { once: true });

        class globalEvents {
            constructor(config) {
                this.addToCartSelector = 'js-button-add-to-cart';
                this.removeFromCartSelector = 'js-button-remove-from-cart';


                this.affiliation = config.global.affiliation || '';
                this.location_id = config.global.location_id || '';
                this.currency = config.global.currency || '';
                this.products = config.product?.gtmConfig?.gtmProductDetail?.products ||
                    config?.category?.products || [];

                if (config.global.add_remove_product_active) {
                    this.cartActionEvents();
                }


                if (config.global.search_term_active) {
                    this.handleSearch();
                }
            }

            cartActionEvents() {
                window.addEventListener('click', e => {
                    const btn = e.target.classList.contains(this.addToCartSelector) ? e.target :
                        e.target.closest('.' + this.addToCartSelector);

                    if (btn) {
                        const productRoot = btn.closest('[data-product-sku]');
                        const qtyField = productRoot.querySelector('.qty-input');

                        if (productRoot && productRoot.dataset.productSku) {
                            const product = this.products.find(product => product.id === productRoot.dataset.productSku)
                            product.quantity = qtyField?.value || 1;

                            this.pushEvent('add_to_cart', [product]);
                        }
                    }
                })

                window.addEventListener('click', e => {
                    const btn = e.target.classList.contains(this.removeFromCartSelector) ?
                        e.target :
                        e.target.closest('.' + this.removeFromCartSelector);
                    if (btn) {
                        const productSku = btn.dataset.productSku;

                        if (productSku) {
                            const product = window.gtmConfig.cartProducts.find(product => product.product_sku === productSku)
                            if (product) {
                                const normalizedProduct = this.normalizeProductCart(product);

                                this.pushEvent('remove_from_cart', [normalizedProduct]);
                            }
                        }
                    }
                })
            }

            normalizeProductCart(product) {
                return {
                    id: product.product_id,
                    name: product.product_name,
                    price: product.product_price_value,
                    quantity: product.qty || 1
                }
            }

            handleSearch() {
                // Algolia search dataLayer
                window.addEventListener('submit', e => {
                    if (e.target.classList.contains('aa-Form')) {
                        const form = e.target;

                        try {
                            dataLayer.push({
                                'event': 'search',
                                search_term: form.querySelector('.aa-Input').value
                            });
                        } catch (e) {
                            console.error(e)
                        }
                    }
                })
            }

            pushEvent(eventType, products) {
                const items = products
                    .filter((product) => product.quantity !== 0)
                    .map((product, index) => {
                        const discount = product.special_price !== '0' && product.special_price !== product.regular_price
                            ? (parseFloat(product.regular_price) - parseFloat(product.special_price)).toFixed(2)
                            : 0;

                        return {
                            item_id: product.id,
                            item_name: product.name,
                            affiliation: this.affiliation,
                            currency: this.currency,
                            index,
                            item_brand: product.brand,
                            item_category: product.category,
                            item_list_name: product.category,
                            location_id: this.location_id,
                            price: parseFloat(product.price).toFixed(2),
                            discount: isNaN(discount) ? 0 : discount,
                            quantity: product.quantity || 1
                        };
                    });

                if (items.length > 0) {
                    dataLayer.push({ ecommerce: null });  // Clear the previous ecommerce object.
                    dataLayer.push({
                        'event': eventType,
                        ecommerce: {
                            items
                        }
                    });
                }
            }
        }

        window.addEventListener('gtmReady', () => {
            new globalEvents(window.gtmConfig);
        })

    

    
        
            
                
                    JavaScript seems to be disabled in your browser.
                    
                        For the best experience on our site, be sure to turn on Javascript in your browser.                    
                
            
        
    



    document.body.addEventListener('touchstart', () => {}, {passive: true})



    (function (hyva) {
        'use strict';

        /**
         * We use multiple Store objects depending on which Alpine version is
         */
        const isAlpineV3 = true;

        /**
         * @returns {string}
         */
        function getInitEventName() {
            return isAlpineV3 ? 'alpine:init' : 'spruce:init';
        }

        /**
         * @returns {Object}
         */
        function getStoreObject() {
            return isAlpineV3 ? Alpine : Spruce;
        }

        hyva.amStorage = {
            /**
             * @param {string} key
             * @param {Object} object
             * @returns {void}
             */
            create: (key, object) => {
                const eventName = key.toLowerCase() + '-created';

                document.addEventListener(getInitEventName(), () => {
                    getStoreObject().store(key, object);
                    document.dispatchEvent(new Event(eventName));
                });
            },

            /**
             * @param {string} key
             * @returns {Object}
             */
            getStorage: (key) => {
                return getStoreObject().store(key);
            },

            /**
             * @param {string} key
             * @param {Object} object
             * @returns {void}
             */
            reInit: (key, object) => {
                isAlpineV3
                    ? getStoreObject().store(key, object)
                    : getStoreObject().reset(key, object);
            }
        };


    }(window.hyva = window.hyva || {}));


    window.amastyCookieManager = window.amastyCookieManager || {};



    'use strict';

    window.addEventListener('init-external-scripts', () => {
        const script = document.createElement('script');
        script.type = 'text/javascript';
        script.src = 'https://7228630.collect.igodigital.com/collect.js ';
        script.id = 'sfmc';
        script.async = true;
        document.head.appendChild(script);
    }, { once: true });



    'use strict';
    (function(hyva) {
                const formValidationRules = {
            required(value, options, field, context) {
                const el = field.element.type === 'hidden' ? createTextInputFrom(field.element) : field.element,
                    msg = 'This\u0020is\u0020a\u0020required\u0020field.';

                if (el.type === 'radio' || el.type === 'checkbox') {
                    return (value === undefined || value.length === 0) ? msg : true;
                }

                el.setAttribute('required', '');
                el.checkValidity();

                return el.validity.valueMissing ? msg : true;
            },
            maxlength(value, options, field, context) {
                const n = Number(options)
                if (value.length > n) {
                    return n === 1
                        ? hyva.strf('Please\u0020enter\u0020no\u0020more\u0020than\u00201\u0020character.')
                        : hyva.strf('Please\u0020enter\u0020no\u0020more\u0020than\u0020\u00250\u0020characters.', options)
                }
                return true;
            },
            minlength(value, options, field, context) {
                const n = Number(options)
                if (value.length > 0 && value.length  0 && !rule.test(value)) {
                    return 'Please\u0020enter\u0020a\u0020valid\u0020email\u0020address.';
                }
                return true;
            },
            password(value, options, field, context) {
                const rule = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;
                if (value.length > 0 && !rule.test(value)) {
                    return 'Please\u0020provide\u0020at\u0020least\u0020one\u0020upper\u0020case,\u0020one\u0020lower\u0020case,\u0020one\u0020digit\u0020and\u0020one\u0020special\u0020character\u0020\u0028\u0023\u003F\u0021\u0040\u0024\u0025\u005E\u0026\u002A\u002D\u0029';
                }
                return true;
            },
            equalTo(value, options, field, context) {
                const dependencyField = context.fields[options].element;
                if (value !== dependencyField.value) {
                    const dependencyFieldName = dependencyField.label || dependencyField.title || dependencyField.name;
                    return hyva.strf('This\u0020field\u0020value\u0020must\u0020be\u0020the\u0020same\u0020as\u0020\u0022\u00250\u0022.', dependencyFieldName);
                }
                return true;
            }
        };

                function raceSome(promises, pred) {
            return new Promise((resolve, reject) => {

                if (promises.length === 0) {
                    return resolve();
                }

                let settled = false, nDone = 0;

                const resolveIf = v => {
                    if (!settled && (pred(v) || ++nDone === promises.length)) {
                        settled = true;
                        resolve(v);
                    }
                    return v;
                }

                promises.map(promise => {
                    promise.then(resolveIf).catch(reason => {
                        settled = true;
                        reject(reason)
                    });
                    return promise;
                });
            });
        }

        function getRules(element) {
            let rules = {};
            const BROWSER_ATTRS = ['min', 'max', 'required', 'minlength', 'maxlength', 'step', 'pattern'];
            const DEFAULT_TYPES = ['email'];
            BROWSER_ATTRS.forEach(attrName => {
                if (element.hasAttribute(attrName)) {
                    rules[attrName] = element.getAttribute(attrName);
                }
            })
            if (DEFAULT_TYPES.includes(element.type)) {
                rules[element.type] = true;
            }

            if (element.dataset.validate) {
                try {
                    Object.assign(rules, JSON.parse(element.dataset.validate));
                } catch (error) {
                    console.error('Validator error. Cannot parse data-validate attribute of element:\n', element);
                }
            }

            return rules;
        }

        function isInvalidRuleResult(ruleState) {
            return typeof ruleState === 'string' || !ruleState;
        }

        async function runValidateFn(rule, options, value, field) {
            return formValidationRules[rule](value, options, field, this);
        }

        function generateId() {
            let id;
            do {
                id = `${this.idPrefix}-${++this.idSeq}`;
            } while (document.getElementById(id));
            return id;
        }

        function isVisible(element) {
            const el = element.type !== 'hidden' ? element : (element.parentElement || {});
            return !!(el.offsetWidth || el.offsetHeight || el.getClientRects().length)
        }

        function elementWillValidate(element) {
            return (element.willValidate || element.type === 'hidden')
                && element.tagName !== 'BUTTON'
                && element.disabled === false
                && !(element.tagName === 'INPUT' && element.type === 'submit')
                && (element.hasAttribute('data-validate-hidden') || isVisible(element))
        }

        function createMessageContainer(el, fieldWrapperClassName) {
            if (! el.parentElement) {
                return;
            }
            if (el.dataset.msgTarget) {
                return el;
            } else {
                const refocus = document.activeElement === el;
                const wrapper = document.createElement('div');
                wrapper.classList.add.apply(wrapper.classList, fieldWrapperClassName.split(' '));
                el.parentElement.insertBefore(wrapper, el);
                wrapper.appendChild(el);
                refocus && document.activeElement !== el && el.focus();
                return wrapper;
            }
        }

        function containerNotFound(selector, el) {
            const msg = `Cannot find message container element ${selector} of ${el.name}`;
            console.error(msg, el);
            throw msg;
        }

        function createTextInputFrom(el) {
            const text = document.createElement('INPUT');
            text.type = 'text';
            text.value = el.value;
            return text;
        }

        function classNamesToSelector(classNames) {
            return classNames.split(' ')
                .filter(className => className.length > 0)
                .map(className => `.${className}`)
                .join('')
        }

        function hasMessagesWrapper(field, messagesWrapperClassName) {
            return this.getMessageContainer(field).querySelector(classNamesToSelector(messagesWrapperClassName));
        }

        function getMessagesWrapper(field, messagesWrapperClassName) {
            if (hasMessagesWrapper.call(this, field, messagesWrapperClassName)) {
                return this.getMessageContainer(field).querySelector(classNamesToSelector(messagesWrapperClassName));
            }

            const msgWrapper = document.createElement('ul');
            msgWrapper.id = generateId.call(this);
            msgWrapper.classList.add.apply(msgWrapper.classList, messagesWrapperClassName.split(' '));
            this.getMessageContainer(field).appendChild(msgWrapper);

            return msgWrapper;
        }

        function getCheckedValues(field) {
            const name = field.element.name.replace(/([\\"])/g, '\\$1');
            const elements = document.querySelectorAll('input[name="' + name + '"]:checked');
            return Array.from(elements).map(el => el.value);
        }

        
        function formValidation(formElement, options) {
            // Disable browser default validation
            if (formElement.tagName === 'FORM') {
                formElement.setAttribute('novalidate', '');
            } else {
                console.error('formValidation can be initialized only on FORM element', formElement);
                return;
            }

            options = Object.assign({
                fieldWrapperClassName: 'field field-reserved',
                messagesWrapperClassName: 'messages',
                validClassName: 'field-success',
                invalidClassName: 'field-error',
                pageMessagesWrapperSelector: null,
                scrollToFirstError: true,
            }, options || {});

            return {
                state: {
                    valid: false,
                },
                fields: {},
                idSeq: 0,
                idPrefix: formElement.id || 'vld-msg',
                setupFields(elements) {
                    this.fields = {};
                    Array.from(elements).forEach(element => {
                        if (elementWillValidate(element)) {
                            this.setupField(element);
                        }
                    });
                },
                setupField(element) {
                    if (elementWillValidate(element)) {
                        const rules = getRules(element);
                        if (Object.keys(rules).length > 0) {
                            if (this.fields[element.name]) {
                                Object.assign(this.fields[element.name].rules, rules);
                            } else {
                                this.fields[element.name] = {
                                    element,
                                    rules: rules,
                                    state: {
                                        valid: null,
                                        rules: {}
                                    }
                                }
                            }
                        }
                    } else {
                        console.error('Element will not validate', element);
                    }
                },
                onSubmit(event) {
                    if (event.target.tagName === 'FORM') {
                        event.preventDefault();

                        this.validate()
                            .then(() => event.target.submit())
                            .catch(invalidElements => {});
                    }
                },
                onChange(event) {
                    if (!Object.keys(this.fields).length) {
                        this.setupFields(formElement.elements);
                    }
                    if (!Object.keys(this.fields).includes(event.target.name)) {
                        this.setupField(event.target);
                    }
                    const field = this.fields[event.target.name];

                    this.validateField(field);
                },
                validateSafe() {
                    return new Promise(resolve => this.validate().then(() => resolve(true)).catch(() => {}))
                },
                validate() {
                    if (!Object.keys(this.fields).length || !Object.keys(this.fields).length !== formElement.elements.length) {
                        this.setupFields(formElement.elements);
                    }
                    return new Promise(async (resolve, reject) => {
                        if (formElement.elements) {
                                                        await raceSome(this.validateFields(), result => result !== true)
                            const invalidFields = Object.values(this.fields).filter(field => !field.state.valid);
                            this.state.valid = invalidFields.length === 0;
                            if (this.state.valid) {
                                resolve();
                            } else {
                                if (options.scrollToFirstError && invalidFields.length > 0) {
                                    invalidFields[0].element.focus()
                                    invalidFields[0].element.select && invalidFields[0].element.select();
                                }
                                reject(invalidFields.map(field => field.element));
                            }
                        }
                    });
                },
                validateSilent() {
                    if (!Object.keys(this.fields).length || !Object.keys(this.fields).length !== formElement.elements.length) {
                        this.setupFields(formElement.elements);
                    }
                    return new Promise(async (resolve, reject) => {
                        if (formElement.elements) {
                            await raceSome(this.validateFields('silent'), result => result !== true)
                            const invalidFields = Object.values(this.fields).filter(field => !field.state.valid);
                            this.state.valid = invalidFields.length === 0;
                            if (this.state.valid) {
                                resolve();
                            } else {
                                reject(invalidFields.map(field => field.element));
                            }
                        }
                    });
                },
                                validateFields(validationType) {
                    const fields = Object.values(this.fields);

                                        if (validationType !== 'silent') {
                        fields.forEach(field => {
                            this.getMessageContainer(field).classList.remove(options.validClassName, options.invalidClassName)
                        });
                    }

                                        return fields.map(field => this.validateField(field, validationType))
                },
                                validateField(field, validationType) {
                                        if (! field || ! elementWillValidate(field.element)) {
                        return new Promise(resolve => resolve(true))
                    }

                    let value;
                    if (field.element.type === 'checkbox') {
                        value = getCheckedValues(field);
                    } else if (field.element.type === 'radio') {
                        value = getCheckedValues(field)[0] || undefined;
                    } else if (field.element.tagName === 'SELECT' && field.element.multiple) {
                        value = Array.from(field.element.selectedOptions).map(opt => opt.value);
                    } else {
                        value = field.element.value;
                    }

                    const rules = field.rules || {};

                                        field.state.valid = true;
                    if (validationType !== 'silent') {
                        this.showFieldState(field);
                    }

                
                                        const fieldValidations = Object.keys(rules).filter(rule => formValidationRules[rule]).map(async rule => {
                        return runValidateFn.call(this, rule, rules[rule], value, field).then(result => {
                            field.state.rules[rule] = result;
                            return result;
                        })
                    });

                    return new Promise(resolve => {
                                                Promise.all(fieldValidations).then(results => {
                                                                                    field.state.valid = !elementWillValidate(field.element) || rules.length === 0 || !results.some(isInvalidRuleResult)
                            this.showFieldState(field, validationType);
                            resolve(field.state.valid);
                        })
                    });
                },
                getMessagesByField(field) {
                    const messages = [];
                    const invalidRules = Object.keys(field.state.rules).filter(rule => isInvalidRuleResult(field.state.rules[rule]));

                    field.rules && Object.keys(field.rules).forEach((rule) => {
                        if (invalidRules.includes(rule)) {
                            const customMessage = field.element.getAttribute('data-msg-' + rule);
                            const message = customMessage ? customMessage : field.state.rules[rule];
                            const ruleOptions = JSON.parse(JSON.stringify(field.rules[rule]));

                            if (typeof message !== 'string') {
                                messages.push(hyva.strf('Validation rule "%0" failed.', rule));
                            } else if (Array.isArray(ruleOptions)) {
                                ruleOptions.unshift(message);
                                messages.push(hyva.strf.apply(null, ruleOptions));
                            } else {
                                messages.push(hyva.strf(message, ruleOptions));
                            }
                        }
                    });
                    return messages;
                },
                /** @deprecated */
                getFieldWrapper(field) {
                                        return this.getMessageContainer(field)
                },
                getMessageContainer(field) {
                    let container;
                    const pageSelector = field.element.getAttribute('data-validation-container') || options.pageMessagesContainerSelector;
                    if (pageSelector) {
                        container = document.querySelector(pageSelector)
                            || containerNotFound(pageSelector, field.element)
                    } else {
                        const containerSelector = classNamesToSelector(options.fieldWrapperClassName);
                        container = field.element.closest(containerSelector)
                            || createMessageContainer(field.element, options.fieldWrapperClassName)
                            || containerNotFound(containerSelector, field.element);
                    }

                    return container;
                },
                showFieldState(field, validationType) {
                    if (validationType !== 'silent') {
                        const container = this.getMessageContainer(field),
                        hasErrorMessages = hasMessagesWrapper.call(this, field, options.messagesWrapperClassName);
                        container.classList.toggle(options.validClassName, field.state.valid && ! hasErrorMessages);
                        container.classList.toggle(options.invalidClassName, !field.state.valid || hasErrorMessages);
                    }
                    this.createErrorMessage(field, this.getMessagesByField(field), validationType);

                    if (validationType !== 'silent') {
                        if (field.state.valid) {
                            field.element.removeAttribute('aria-invalid');
                        } else {
                            field.element.setAttribute('aria-invalid', 'true');
                            if (! document.activeElement) {
                                field.element.focus();
                            }
                        }
                    }
                },
                removeMessages(field, messagesClass) {
                    const msgTargetData = field.element.dataset.msgTarget;

                    if (msgTargetData) {
                        const msgTarget = document.getElementById(msgTargetData);

                        msgTarget.innerHTML = '';
                    }

                    if (! hasMessagesWrapper.call(this, field, messagesClass || options.messagesWrapperClassName)) {
                        return;
                    }

                    const msgWrapper = getMessagesWrapper.call(this, field, messagesClass || options.messagesWrapperClassName);
                    const messages = msgWrapper.querySelectorAll(`[data-msg-field='${field.element.name}']`);
                    Array.from(messages).forEach(msg => msg.remove());
                    if (msgWrapper && msgWrapper.childElementCount === 0) {
                        msgWrapper.remove();
                    }
                },
                createErrorMessage(field, messages, validationType) {
                    this.removeMessages(field, options.messagesWrapperClassName);
                    field.element.removeAttribute('aria-errormessage');

                    if (validationType !== 'silent' && !field.state.valid) {
                        const msgWrapper = this.addMessages(field, options.messagesWrapperClassName, messages)
                        field.element.setAttribute('aria-errormessage', msgWrapper.id);
                    }
                },
                /** @deprecated */
                createMessage(field, message) {
                                        return this.addMessages(field, options.messagesWrapperClassName, message);
                },
                addMessages(field, messagesClass, messages) {
                    const msgWrapper = getMessagesWrapper.call(this, field, messagesClass);

                    (Array.isArray(messages) ? messages : [messages]).forEach((message) => {
                        const msgTargetData = field.element.dataset.msgTarget;
                        if (msgTargetData) {
                            const msgTarget = document.getElementById(msgTargetData)

                            if (msgTarget) {
                                msgTarget.setAttribute('data-msg-field', field.element.name);
                                msgTarget.innerHTML = message;
                            }
                        } else {
                            const li = document.createElement('li');
                            li.innerText = message;
                            li.setAttribute('data-msg-field', field.element.name);
                            msgWrapper.appendChild(li);
                        }
                    });

                    return msgWrapper;
                },
                setField(name, value) {
                    this.fields[name].element.value = value;
                    this.fields[name].element.dispatchEvent((new Event('input')));
                    this.validateField(this.fields[name]);
                }
            }
        }

        hyva.formValidation = formValidation;
        hyva.formValidation.rules = formValidationRules;
        hyva.formValidation.addRule = (name, validator) => {
            formValidationRules[name] = validator;
        }
    }(window.hyva = window.hyva || {}));



    'use strict';

    (function handleQtyOverlay() {
        window.addEventListener('actions-stop', () => {
            const qtyInputs = document.querySelectorAll('.field-quantity');

            qtyInputs.forEach(el => {
                const input = el.querySelector('.qty-input');

                el.classList.add('actions-stopped');

                if (input && input.disabled !== true) {
                    input.disabled = true;
                    input.classList.add('js-was-disabled');
                }
            })
        })

        window.addEventListener('actions-start', () => {
            const qtyInputs = document.querySelectorAll('.field-quantity');

            qtyInputs.forEach(el => {
                const input = el.querySelector('.qty-input');

                el.classList.remove('actions-stopped');

                if (input && input.classList.contains('js-was-disabled')) {
                    input.removeAttribute('disabled');
                    input.classList.remove('js-was-disabled');
                }
            })
        })
    })()

    window.hyva.breakpointTablet = 991;


    window.addEventListener('load', () => {
        const hash = window.location.hash;

        if (hash) {
            const target = document.getElementById(hash.substring(1));

            if (target) {
                target.scrollIntoView();
            }
        }
    })

    window.debounce = function debounce(func, wait) {
        let timeout;
        return function () {
            const context = this,
                args = arguments;

            const later = function later() {
                timeout = null;
                func.apply(context, args);
            };

            clearTimeout(timeout);
            timeout = setTimeout(later, wait);
        };
    }

    window.loadScript = function loadScript(src, id) {
        return new Promise(resolve => {
            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = src;
            if (id) {
                script.id = id;
            }
            script.async = true;
            script.onload = resolve;
            document.head.appendChild(script);
        })
    }

    window.lazyLoadSwiper = function lazyLoadSwiper() {
        if (!window.swiperLoadPromise) {
            window.swiperLoadPromise = window.loadScript(
                'https://www.lippert.com/static/version1759822589/frontend/Vaimo/lippert/en_US/js/swiper-bundle.min.js'
            )
        }
        return window.swiperLoadPromise;
    }



    'use strict';

    // proper long page anchor scrolling
    const debouncedAnchorScroll = window.debounce(() => {
        if (window.location.hash && !window.userInteracted) {
            const element = document.querySelector(window.location.hash);

            if (element) {
                element.scrollIntoView({ behavior: "smooth" });
            }
        }
    }, 200);

    // Required for anchor. If the user has already reached the target,
    // stop scrolling to it (ignore further carousel-swatches-displayed events).
    setTimeout(() => {
        window.addEventListener('scroll', () => { window.userInteracted = true });
    }, 3000)
    window.addEventListener('carousel-swatches-displayed', debouncedAnchorScroll);


    // Add to cart ajax
    window.addToCartAjax = function(id, el, algoliaQueryId = null) {
        el.classList.add('button--loading');

        let url = `/checkout/cart/add/uenc/${hyva.getUenc()}/product/${id}`;
        if (algoliaQueryId !== null) {
            url += `?queryID=${algoliaQueryId}`;
        }

        fetch(url, {
            method: 'POST',
            body: new URLSearchParams({
                item: id,
                form_key: window.hyva.getFormKey(),
                qty: 1
            }),
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8',
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
            .then(response => response.json())
            .catch(error => console.error('Error:', error))
            .finally(() => {
                window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
                el.classList.remove('button--loading');
            })
    }



    'use strict';

    function yotpoLazyLoading() {
        return {
            showBlock() {
                this.$nextTick(() => {
                    this.$el.dataset.galleryId = this.$el.id;
                    delete this.$el.dataset.yotpoElementId;

                    window.yotpo?.initWidgets();
                })
            }
        }
    }



    .cmsb9-mr-2 {
margin-right: 0.5rem
}
.cmsb9-block {
display: block
}
.cmsb9-bg-\[\#6A879C\] {
--tw-bg-opacity: 1;
background-color: rgb(106 135 156 / var(--tw-bg-opacity))
}
.cmsb9-p-2 {
padding: 0.5rem
}
.cmsb9-text-center {
text-align: center
}
.cmsb9-text-sm {
font-size: 0.875rem;
line-height: 1.25rem
}
.cmsb9-text-white {
--tw-text-opacity: 1;
color: rgb(255 255 255 / var(--tw-text-opacity))
}
.cmsb9-underline {
text-decoration-line: underline
}
@media (min-width: 768px) {
.cmsb9-md\:inline-block {
display: inline-block
}
}
#html-body [data-pb-style=X7UP76C]{margin-top:0;padding-top:0}Fall Into Savings | Shop the Clearance Sale Now

    
        Skip to Content    


    
        
            Close
            

close
        
        
            
    
        
    

        
        
                
        const isCheckout = document.querySelector('.hyva_checkout-index-index');

        if (!isCheckout) {
            const algoliaConfig = Object.assign(
                {"instant":{"enabled":true,"selector":".columns","isAddToCartEnabled":true,"addToCartParams":{"action":"https:\/\/www.lippert.com\/checkout\/cart\/add\/","formKey":"0bWX3IvLyp83P2Wp","redirectUrlParam":"uenc"},"infiniteScrollEnabled":false,"urlTrackedParameters":["query","attribute:*","index","page"],"isSearchBoxEnabled":false,"isVisualMerchEnabled":false,"categorySeparator":" \/\/\/ ","categoryPageIdAttribute":"categoryPageId","isCategoryNavigationEnabled":false,"hidePagination":false},"autocomplete":{"enabled":true,"selector":".algolia-search-input","sections":[{"name":"pages","label":"Learn & Explore","hitsPerPage":"2"},{"name":"blogs","label":"Blogs","hitsPerPage":"2"}],"nbOfProductsSuggestions":10,"nbOfCategoriesSuggestions":2,"nbOfQueriesSuggestions":4,"isDebugEnabled":true,"isNavigatorEnabled":true,"debounceMilliseconds":300,"minimumCharacters":0},"landingPage":{"query":"","configuration":"[]"},"recommend":{"enabledFBT":false,"enabledRelated":false,"enabledFBTInCart":false,"enabledRelatedInCart":false,"enabledLookingSimilar":0,"limitFBTProducts":6,"limitRelatedProducts":6,"limitTrendingItems":6,"limitLookingSimilar":6,"enabledTrendItems":0,"trendItemFacetName":null,"trendItemFacetValue":null,"isTrendItemsEnabledInPDP":0,"isTrendItemsEnabledInCartPage":0,"isAddToCartEnabledInFBT":false,"isAddToCartEnabledInRelatedProduct":false,"isAddToCartEnabledInTrendsItem":false,"isAddToCartEnabledInLookingSimilar":false,"FBTTitle":"Frequently bought together","relatedProductsTitle":"Related products","trendingItemsTitle":"Trending items","addToCartParams":{"action":"https:\/\/www.lippert.com\/checkout\/cart\/add\/","formKey":"0bWX3IvLyp83P2Wp","redirectUrlParam":"uenc"},"isLookingSimilarEnabledInPDP":0,"isLookingSimilarEnabledInCartPage":0,"lookingSimilarTitle":"Looking Similar"},"extensionVersion":"3.14.3","applicationId":"KEVIIVKC0U","indexName":"gwp_d2c_prod_lippert","apiKey":"ZDk1NmI4ZDJmNjlmYWY4M2QzMjhhNTZhZGI0Y2NkODNjYTdmMGFiYWE4OGM4MjAxYWJjNzAyMGY1OGMyZTFiN2ZpbHRlcnM9Y2F0YWxvZ19wZXJtaXNzaW9ucy5jdXN0b21lcl9ncm91cF8wJTIwJTIxJTNEJTIwMCZ0YWdGaWx0ZXJzPSZ2YWxpZFVudGlsPTE3NTk5MzY0MTc=","attributeFilter":{"filters":"catalog_permissions.customer_group_0 != 0"},"facets":{"0":{"attribute":"categories","type":"conjunctive","label":"Categories","searchable":"2","create_rule":"2"},"1":{"attribute":"price","type":"priceRanges","label":"Price","searchable":"2","create_rule":"2"},"2":{"attribute":"giftcard_type","type":"disjunctive","label":"Card Type","searchable":"2","create_rule":"2"},"3":{"attribute":"frnmat_marine_type","type":"disjunctive","label":"Marine Seating Type","searchable":"2","create_rule":"2"},"4":{"attribute":"cargo_bin_size","type":"disjunctive","label":"Cargo Bin Size","searchable":"2","create_rule":"2"},"5":{"attribute":"awn_fabric_closed_color","type":"colorSwatches","label":"Fabric Color When Closed","searchable":"2","create_rule":"2"},"6":{"attribute":"awn_roller_fabric_width","type":"disjunctive","label":"Awning Width","searchable":"2","create_rule":"2"},"7":{"attribute":"measfit_pattern","type":"disjunctive","label":"Pattern","searchable":"2","create_rule":"2"},"8":{"attribute":"axle_beam_diameter","type":"disjunctive","label":"Axle Beam Diameter","searchable":"2","create_rule":"2"},"9":{"attribute":"water_drain_location","type":"disjunctive","label":"Drain Location","searchable":"2","create_rule":"2"},"10":{"attribute":"frnmat_mattress_size","type":"disjunctive","label":"Mattress Size","searchable":"2","create_rule":"2"},"11":{"attribute":"leveling_kit_type","type":"disjunctive","label":"Leveling Kit Type","searchable":"2","create_rule":"2"},"12":{"attribute":"outdoor_furniture_type","type":"disjunctive","label":"Camping Furniture Type","searchable":"2","create_rule":"2"},"13":{"attribute":"measfit_watts","type":"disjunctive","label":"Watts","searchable":"2","create_rule":"2"},"14":{"attribute":"boating_dock_box_style","type":"disjunctive","label":"Dock Box Style","searchable":"2","create_rule":"2"},"15":{"attribute":"water_faucet_cartridge_style","type":"disjunctive","label":"Faucet Cartridge Style","searchable":"2","create_rule":"2"},"16":{"attribute":"frnmat_recliner_type","type":"disjunctive","label":"Recliner Type","searchable":"2","create_rule":"2"},"17":{"attribute":"frnmat_sofa_type","type":"disjunctive","label":"Sofa Type","searchable":"2","create_rule":"2"},"18":{"attribute":"axle_hanger_spacing","type":"disjunctive","label":"Hanger Spacing","searchable":"2","create_rule":"2"},"19":{"attribute":"axle_brake_mounting_bolt_size","type":"disjunctive","label":"Axle Brake Mounting Bolt Size","searchable":"2","create_rule":"2"},"20":{"attribute":"axle_lubrication_system","type":"disjunctive","label":"Lubrication System","searchable":"2","create_rule":"2"},"21":{"attribute":"axle_type","type":"disjunctive","label":"Axle Type","searchable":"2","create_rule":"2"},"22":{"attribute":"cargo_trim_application","type":"disjunctive","label":"Cargo Trim Application","searchable":"2","create_rule":"2"},"23":{"attribute":"tow_pin_box_style","type":"disjunctive","label":"Pin Box Style","searchable":"2","create_rule":"2"},"24":{"attribute":"cargo_adapter_application","type":"disjunctive","label":"Cargo Adapter Application","searchable":"2","create_rule":"2"},"25":{"attribute":"cargo_compartment_depth","type":"disjunctive","label":"Compartment Depth","searchable":"2","create_rule":"2"},"26":{"attribute":"series","type":"disjunctive","label":"Series","searchable":"2","create_rule":"2"},"27":{"attribute":"awn_type","type":"disjunctive","label":"Awning Type","searchable":"2","create_rule":"2"},"28":{"attribute":"awn_roller_model","type":"disjunctive","label":"Roller Model","searchable":"2","create_rule":"2"},"29":{"attribute":"awn_light_kit_size","type":"disjunctive","label":"Light Kit Size","searchable":"2","create_rule":"2"},"30":{"attribute":"awn_arm_size","type":"disjunctive","label":"Awning Arm Size","searchable":"2","create_rule":"2"},"31":{"attribute":"measfit_weight_capacity","type":"disjunctive","label":"Weight Capacity","searchable":"2","create_rule":"2"},"32":{"attribute":"measfit_fit_side","type":"disjunctive","label":"Side","searchable":"2","create_rule":"2"},"33":{"attribute":"measfit_voltage","type":"disjunctive","label":"Voltage","searchable":"2","create_rule":"2"},"34":{"attribute":"step_operation_type","type":"disjunctive","label":"Step Operation Type","searchable":"2","create_rule":"2"},"35":{"attribute":"axle_shackle_size","type":"disjunctive","label":"Shackle Size","searchable":"2","create_rule":"2"},"36":{"attribute":"cargo_tray_area","type":"disjunctive","label":"Cargo Tray Area Dimensions","searchable":"2","create_rule":"2"},"37":{"attribute":"frnmat_modular_type","type":"disjunctive","label":"Modular Seating Type","searchable":"2","create_rule":"2"},"38":{"attribute":"axle_equalizer_type","type":"disjunctive","label":"Equalizer Type","searchable":"2","create_rule":"2"},"39":{"attribute":"axle_hub_style","type":"disjunctive","label":"Hub Style","searchable":"2","create_rule":"2"},"40":{"attribute":"tow_gross_trailer_weight","type":"disjunctive","label":"Gross Trailer Weight (GTW)","searchable":"2","create_rule":"2"},"41":{"attribute":"towing_receiver_size","type":"disjunctive","label":"Receiver Size","searchable":"2","create_rule":"2"},"42":{"attribute":"tow_tongue_weight_capacity","type":"disjunctive","label":"Tongue Weight Capacity","searchable":"2","create_rule":"2"},"43":{"attribute":"elecapp_capacity","type":"disjunctive","label":"Appliance Capacity","searchable":"2","create_rule":"2"},"44":{"attribute":"measfit_color","type":"colorSwatches","label":"Product Color","searchable":"2","create_rule":"2"},"45":{"attribute":"axle_hub_bolt_pattern","type":"disjunctive","label":"Hub Bolt Pattern","searchable":"2","create_rule":"2"},"46":{"attribute":"axle_brake_flange_bolt_pattern","type":"disjunctive","label":"Brake Flange Count","searchable":"2","create_rule":"2"},"47":{"attribute":"hardware_part_type","type":"disjunctive","label":"Part Type","searchable":"2","create_rule":"2"},"48":{"attribute":"sealant_type","type":"disjunctive","label":"Sealant Type","searchable":"2","create_rule":"2"},"49":{"attribute":"axle_count","type":"disjunctive","label":"Axle Count","searchable":"2","create_rule":"2"},"50":{"attribute":"axle_hanger_drop","type":"disjunctive","label":"Hanger Drop","searchable":"2","create_rule":"2"},"51":{"attribute":"hdw_washer_type","type":"disjunctive","label":"Washer Type","searchable":"2","create_rule":"2"},"52":{"attribute":"elecapp_burner_count","type":"disjunctive","label":"Burner Count","searchable":"2","create_rule":"2"},"53":{"attribute":"awn_accy_type","type":"disjunctive","label":"Awning Accessory Type","searchable":"2","create_rule":"2"},"55":{"attribute":"awn_arm_adjustment","type":"disjunctive","label":"Awning Arm Adjustment","searchable":"2","create_rule":"2"},"56":{"attribute":"awn_fabric_color","type":"disjunctive","label":"Awning Fabric Color","searchable":"2","create_rule":"2"},"57":{"attribute":"awn_hardware_color","type":"disjunctive","label":"Awning Hardware Color","searchable":"2","create_rule":"2"},"58":{"attribute":"awn_hardware_model","type":"disjunctive","label":"Hardware Model","searchable":"2","create_rule":"2"},"59":{"attribute":"awn_roller_projection","type":"disjunctive","label":"Roller Projection","searchable":"2","create_rule":"2"},"60":{"attribute":"axle_brake_size","type":"disjunctive","label":"Brake Size","searchable":"2","create_rule":"2"},"61":{"attribute":"axle_brake_type","type":"disjunctive","label":"Brake Type","searchable":"2","create_rule":"2"},"62":{"attribute":"axle_capacity","type":"disjunctive","label":"Axle Capacity","searchable":"2","create_rule":"2"},"63":{"attribute":"axle_spring_load_length","type":"disjunctive","label":"Load Length","searchable":"2","create_rule":"2"},"64":{"attribute":"axle_spring_type","type":"disjunctive","label":"Axle Spring Type","searchable":"2","create_rule":"2"},"65":{"attribute":"brand","type":"disjunctive","label":"Brand","searchable":"2","create_rule":"2"},"66":{"attribute":"cargo_bike_capacity","type":"disjunctive","label":"Bike Capacity","searchable":"2","create_rule":"2"},"67":{"attribute":"cargo_case_material","type":"disjunctive","label":"Cargo Case Material","searchable":"2","create_rule":"2"},"68":{"attribute":"cargo_hitch_size","type":"disjunctive","label":"Compartment Width","searchable":"2","create_rule":"2"},"69":{"attribute":"cargo_lock_method","type":"disjunctive","label":"Cargo Locking Method","searchable":"2","create_rule":"2"},"70":{"attribute":"cargo_mounting_location","type":"disjunctive","label":"Cargo Mounting Location","searchable":"2","create_rule":"2"},"71":{"attribute":"cargo_rack_features","type":"disjunctive","label":"Cargo Rack Features","searchable":"2","create_rule":"2"},"72":{"attribute":"cargo_rack_style","type":"disjunctive","label":"Cargo Rack Style","searchable":"2","create_rule":"2"},"73":{"attribute":"cargo_storage_application","type":"disjunctive","label":"Storage Application","searchable":"2","create_rule":"2"},"74":{"attribute":"cargo_tire_winch_options","type":"disjunctive","label":"Tire Winch Options","searchable":"2","create_rule":"2"},"75":{"attribute":"door_hinge_location","type":"disjunctive","label":"Door Hinge Location","searchable":"2","create_rule":"2"},"76":{"attribute":"door_hinge_type","type":"disjunctive","label":"Door Hinge Type","searchable":"2","create_rule":"2"},"77":{"attribute":"door_opening_call_size","type":"disjunctive","label":"Door Size","searchable":"2","create_rule":"2"},"78":{"attribute":"door_type","type":"disjunctive","label":"Door Type","searchable":"2","create_rule":"2"},"79":{"attribute":"elecapp_cord_length","type":"disjunctive","label":"Cord Length","searchable":"2","create_rule":"2"},"80":{"attribute":"elecapp_energy_inlet_shape","type":"disjunctive","label":"Inlet Shape","searchable":"2","create_rule":"2"},"81":{"attribute":"electrical_component_app","type":"disjunctive","label":"Electrical Component Application","searchable":"2","create_rule":"2"},"82":{"attribute":"electrical_component_type","type":"disjunctive","label":"Electrical Component Type","searchable":"2","create_rule":"2"},"83":{"attribute":"frnmat_cover_application","type":"disjunctive","label":"Mattress Cover Application","searchable":"2","create_rule":"2"},"84":{"attribute":"frnmat_fabric_color","type":"disjunctive","label":"Fabric Color","searchable":"2","create_rule":"2"},"85":{"attribute":"frnmat_fabric_type","type":"disjunctive","label":"Fabric Type","searchable":"2","create_rule":"2"},"86":{"attribute":"frnmat_furniture_features","type":"disjunctive","label":"Furniture Features","searchable":"2","create_rule":"2"},"87":{"attribute":"frnmat_mattress_style","type":"disjunctive","label":"Mattress Style","searchable":"2","create_rule":"2"},"88":{"attribute":"frnmat_mattress_type","type":"disjunctive","label":"Mattress Type","searchable":"2","create_rule":"2"},"89":{"attribute":"hardware_application","type":"disjunctive","label":"Hardware Application","searchable":"2","create_rule":"2"},"90":{"attribute":"hardware_type","type":"disjunctive","label":"Hardware Type","searchable":"2","create_rule":"2"},"91":{"attribute":"leveling_lift_capacity","type":"disjunctive","label":"Lift Capacity","searchable":"2","create_rule":"2"},"92":{"attribute":"level_jack_count","type":"disjunctive","label":"Leveling Jack Count","searchable":"2","create_rule":"2"},"93":{"attribute":"level_jack_feature","type":"disjunctive","label":"Jack Features","searchable":"2","create_rule":"2"},"94":{"attribute":"level_jack_style","type":"disjunctive","label":"Jack Style","searchable":"2","create_rule":"2"},"95":{"attribute":"level_jack_type","type":"disjunctive","label":"Jack Type","searchable":"2","create_rule":"2"},"96":{"attribute":"level_mount_location","type":"disjunctive","label":"Jack Mounting Location","searchable":"2","create_rule":"2"},"97":{"attribute":"level_system_type","type":"disjunctive","label":"Leveling System Type","searchable":"2","create_rule":"2"},"98":{"attribute":"measfit_amperage","type":"disjunctive","label":"Amperage","searchable":"2","create_rule":"2"},"99":{"attribute":"measfit_extended_length","type":"disjunctive","label":"Extended Length","searchable":"2","create_rule":"2"},"100":{"attribute":"measfit_material","type":"disjunctive","label":"Material Type","searchable":"2","create_rule":"2"},"101":{"attribute":"measfit_units_system","type":"disjunctive","label":"Measuring Units","searchable":"2","create_rule":"2"},"102":{"attribute":"merch_apparel_gender_type","type":"disjunctive","label":"Apparel Gender Style","searchable":"2","create_rule":"2"},"103":{"attribute":"merch_apparel_sleeve_type","type":"disjunctive","label":"Sleeve Type","searchable":"2","create_rule":"2"},"104":{"attribute":"merch_clothing_size_short","type":"disjunctive","label":"Apparel Size","searchable":"2","create_rule":"2"},"105":{"attribute":"merch_series","type":"disjunctive","label":"Merchandise Series","searchable":"2","create_rule":"2"},"106":{"attribute":"product_ratio","type":"disjunctive","label":"Ratio","searchable":"2","create_rule":"2"},"107":{"attribute":"slide_arm_rack_size","type":"disjunctive","label":"Arm Rack Size","searchable":"2","create_rule":"2"},"108":{"attribute":"slide_drive_type","type":"disjunctive","label":"Drive Type","searchable":"2","create_rule":"2"},"109":{"attribute":"step_count","type":"disjunctive","label":"Step Count","searchable":"2","create_rule":"2"},"110":{"attribute":"step_features","type":"disjunctive","label":"Step Features","searchable":"2","create_rule":"2"},"111":{"attribute":"step_model","type":"disjunctive","label":"Step Model","searchable":"2","create_rule":"2"},"112":{"attribute":"step_type","type":"disjunctive","label":"Step Type","searchable":"2","create_rule":"2"},"113":{"attribute":"towing_spring_bar_style","type":"disjunctive","label":"Spring Bar Style","searchable":"2","create_rule":"2"},"114":{"attribute":"tow_capacity","type":"disjunctive","label":"Towing Capacity","searchable":"2","create_rule":"2"},"115":{"attribute":"tow_coupler_type","type":"disjunctive","label":"Coupler Type","searchable":"2","create_rule":"2"},"116":{"attribute":"tow_enhance_kit_type","type":"disjunctive","label":"Towing Enhancement Kit Type","searchable":"2","create_rule":"2"},"117":{"attribute":"tow_hardware_kit_type","type":"disjunctive","label":"Towing Hardware Kit Type","searchable":"2","create_rule":"2"},"118":{"attribute":"tow_lci_box_num","type":"disjunctive","label":"LCI Pin Box Number","searchable":"2","create_rule":"2"},"119":{"attribute":"tow_mounting_position","type":"disjunctive","label":"Towing Mount Position","searchable":"2","create_rule":"2"},"120":{"attribute":"tow_oem_box_num","type":"disjunctive","label":"OEM Pin Box Number","searchable":"2","create_rule":"2"},"121":{"attribute":"tow_pin_box_bolt_pattern","type":"disjunctive","label":"Pin Box Bolt Pattern","searchable":"2","create_rule":"2"},"122":{"attribute":"tow_wdtw","type":"disjunctive","label":"Weight Distribution Tongue Weight (WDTW)","searchable":"2","create_rule":"2"},"123":{"attribute":"vertical_load_limit","type":"disjunctive","label":"Vertical Load Limit","searchable":"2","create_rule":"2"},"124":{"attribute":"water_connection_type","type":"disjunctive","label":"Connection Type","searchable":"2","create_rule":"2"},"125":{"attribute":"water_faucet_mount_holes","type":"disjunctive","label":"Faucet Mounting Holes","searchable":"2","create_rule":"2"},"126":{"attribute":"water_faucet_spout_style","type":"disjunctive","label":"Spout Style","searchable":"2","create_rule":"2"},"127":{"attribute":"water_hose_support_accessory","type":"disjunctive","label":"Hose Support Accessory","searchable":"2","create_rule":"2"},"128":{"attribute":"water_sink_application","type":"disjunctive","label":"Sink Application","searchable":"2","create_rule":"2"},"129":{"attribute":"water_sink_mount_type","type":"disjunctive","label":"Sink Mount Type","searchable":"2","create_rule":"2"},"130":{"attribute":"water_sink_style","type":"disjunctive","label":"Sink Style","searchable":"2","create_rule":"2"},"131":{"attribute":"water_tub_surround_shape","type":"disjunctive","label":"Wall Surround Shape","searchable":"2","create_rule":"2"},"132":{"attribute":"water_wall_surround_texture","type":"disjunctive","label":"Wall Surround Texture","searchable":"2","create_rule":"2"},"133":{"attribute":"water_waste_hose_accessory","type":"disjunctive","label":"Hose Accessory","searchable":"2","create_rule":"2"},"134":{"attribute":"winch_options","type":"disjunctive","label":"Winch Extension Options","searchable":"2","create_rule":"2"}},"areCategoriesInFacets":true,"hitsPerPage":12,"sortingIndices":[{"attribute":"price","sort":"asc","sortLabel":"Lowest price","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_price_default_asc","ranking":["asc(price.USD.default)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Lowest price"},{"attribute":"price","sort":"desc","sortLabel":"Highest price","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_price_default_desc","ranking":["desc(price.USD.default)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Highest price"},{"attribute":"best_seller_label","sort":"desc","sortLabel":"Best Sellers","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_best_seller_label_desc","ranking":["desc(best_seller_label)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"Best Sellers"},{"attribute":"sku","sort":"asc","sortLabel":"SKU","virtualReplica":"1","name":"gwp_d2c_prod_lippert_products_sku_asc","ranking":["asc(sku)","typo","geo","words","filters","proximity","attribute","exact","custom"],"label":"SKU"}],"isSearchPage":false,"isCategoryPage":false,"isLandingPage":false,"removeBranding":true,"productId":null,"priceKey":".USD.default","priceGroup":null,"origFormatedVar":"price.USD.default_original_formated","tierFormatedVar":"price.USD.default_tier_formated","currencyCode":"USD","currencySymbol":"$","priceFormat":{"pattern":"$%s","precision":2,"requiredPrecision":2,"decimalSymbol":".","groupSymbol":",","groupLength":3,"integerRequired":false},"maxValuesPerFacet":12,"autofocus":true,"resultPageUrl":"https:\/\/www.lippert.com\/catalogsearch\/result\/","request":{"query":"","refinementKey":"","refinementValue":"","categoryId":"","landingPageId":"","path":"","level":"","parentCategory":"","childCategories":[],"url":"https:\/\/www.lippert.com\/search"},"showCatsNotIncludedInNavigation":false,"showSuggestionsOnNoResultsPage":true,"baseUrl":"https:\/\/www.lippert.com","popularQueries":["window","door","power gear","test","windows","steps","awning parts","camera","step","happijac"],"useAdaptiveImage":false,"urls":{"logo":"https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Algolia_AlgoliaSearch\/js\/images\/algolia-logo-blue.svg"},"cookieConfiguration":{"customerTokenCookie":"_ALGOLIA_MAGENTO_AUTH","consentCookieName":"user_allowed_save_cookie","cookieAllowButtonSelector":"#btn-cookie-allow","cookieRestrictionModeEnabled":false,"cookieDuration":"15552000000"},"ccAnalytics":{"enabled":true,"ISSelector":".product-item-photo, .search-panel__product-name, .product-item-link, .search-panel__product-image","conversionAnalyticsMode":"all","addToCartSelector":".js-button-add-to-cart","orderedProductIds":[]},"isPersonalizationEnabled":false,"personalization":{"enabled":false,"viewedEvents":{"viewProduct":{"eventName":"Viewed Product","enabled":false,"method":"viewedObjectIDs"}},"clickedEvents":{"productClicked":{"eventName":"Product Clicked","enabled":false,"selector":".ais-Hits-item a.result, .ais-InfiniteHits-item a.result","method":"clickedObjectIDs"},"productRecommended":{"eventName":"Recommended Product Clicked","enabled":false,"selector":".products-upsell .product-item","method":"clickedObjectIDs"}},"filterClicked":{"eventName":"Filter Clicked","enabled":false,"method":"clickedFilters"}},"analytics":{"enabled":true,"delay":"3000","triggerOnUiInteraction":"1","pushInitialSearch":"0"},"now":1759795200,"queue":{"isEnabled":true,"nbOfJobsToRun":10,"retryLimit":3,"nbOfElementsPerIndexingJob":300},"isPreventBackendRenderingEnabled":false,"translations":{"to":"to","or":"or","go":"Go","popularQueries":"You can try one of the popular search queries","seeAll":"See all products","allDepartments":"Search page","seeIn":"See products in","orIn":"or in","noProducts":"No products for query","noResults":"No results","refine":"Refine","selectedFilters":"Selected Filters","clearAll":"Clear all","previousPage":"Previous page","nextPage":"Next page","searchFor":"Search for products","relevance":"Relevance","categories":"Categories","products":"Products","suggestions":"Suggestions","searchBy":"Search by","searchForFacetValuesPlaceholder":"Search for other ...","showMore":"Show more products","searchTitle":"Search results for","placeholder":"Search for products, categories, ...","addToCart":"Add to Cart","sku":"SKU","viewAllProductResults":"View all product results","viewAll":"View all","allProducts":"All products","in":"in","noResultsFound":"No results found"}}, {
                    resultURL: 'https\u003A\u002F\u002Fwww.lippert.com\u002Fcatalogsearch\u002Fresult\u002F',
                    placeholder: 'Search...',
                    classNames: {},
                    translations: {
                        viewAll: "View all %1 results %2",
                        viewAllProductResults: "View all product results",
                        allProducts: "All products",
                        suggestions: "Suggestions",
                        noResultsFoundFor: "No results found for",
                        categories: "Categories",
                        in: "in",
                        clearAll: "Clear all",
                        firstPageItem: "First",
                        lastPageItem: "Last",
                        popularQueries: "You can try one of the popular search queries",
                        or: "or",
                        seeAll: "See all products",
                        relevance: "Relevance",
                        sku: "SKU"
                    },
                    maxValuesPerFacet: 5
                }
            )

            window.algoliaConfig = algoliaConfig;

            function loadScripts(scripts) {
                return Promise.all(scripts.map(src => window.loadScript(src)))
            }

            window.autocompleteInitialized = false

            // Algolia autocomplete scripts
            if (algoliaConfig.autocomplete.enabled) {
                const autocompleteScripts = ["https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Hyva_AlgoliaSearch\/js\/internals\/autocomplete-js.js","https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Hyva_AlgoliaSearch\/js\/internals\/algoliasearch.js","https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Hyva_AlgoliaSearch\/js\/internals\/algoliasearch-query-suggestion-plugin.js","https:\/\/www.lippert.com\/static\/version1759822589\/frontend\/Vaimo\/lippert\/en_US\/Hyva_AlgoliaSearch\/js\/internals\/autocomplete-plugin-recent-searches.js"];

                window.addEventListener('algolia-autocomplete-load', () => {
                    // prevent twice the scripts loading and initializing
                    if (window.autocompleteInitialized) {
                        return;
                    }
                    // Algolia common scripts
                    const commonScripts = [
                        'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002FalgoliaBundle.min.js',
                        'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002Fcommon.js'
                    ];

                    loadScripts(commonScripts).then(() => {
                        algoliaCommon();

                        // Algolia insights required for a global scope
                        if (algoliaConfig.ccAnalytics.enabled) {
                            const insightScripts = [
                                'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002Fsearch\u002Dinsights.js',
                                'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002Finsights.js',
                                'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002Finsights\u002Fadd\u002Dto\u002Dcart\u002Dinsights.js'
                            ];

                            loadScripts(insightScripts).then(() => {
                                initAlgoliaInsights();
                            })
                        }

                        // Algolia instantSearch required only for search page
                        if (algoliaConfig.instant.enabled && document.getElementsByClassName('catalogsearch-result-index')) {
                            const instantSearchScripts = [
                                'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002Finstantsearch.js'
                            ]
                            loadScripts(instantSearchScripts).then(() => {
                                initAlgoliaInstantSearch(algoliaConfig);
                            })
                        }
                    })

                    if (!window.autocompleteInitialized) {
                        loadScripts(autocompleteScripts).then(() => {
                            window.loadScript('https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_AlgoliaSearch\u002Fjs\u002Finternals\u002FautocompleteConfig.js')
                                .then(() => {
                                    document.querySelector('#algolia-autocomplete-container .aa-Input').focus();
                                })
                            window.autocompleteInitialized = true;
                        });
                    }
                });
            }

            if (window.algoliaConfig.isSearchPage) {
                window.dispatchEvent(new CustomEvent('algolia-autocomplete-load'));
            }
        }
    
    
        
    

        
    
    
        
    #html-body [data-pb-style=LHYT7OI]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}

Shop
Business Login
Corporate Site


Investors lippert/arrow-open-in-new

Careers lippert/arrow-open-in-new

Support lippert/arrow-open-in-new



        
        
            
                
                    
                    
    
        
    

                    
                                            
                            
                                
                                    Search                                
                                
                                
                                    search
                                
                            
                        
                                        
                        
                            Open search
                            search
                        
                        

    
        
        
        Loading...
    
    
        
            
                

account-on
                
                    Hi, 
                
            
            
                
                    
                    
                
                
                    My Account                
                
                    My Orders                
                
                    Sign Out                    arrow-right-alt
                
            
        
    
    
        
            Login
            account-circle
            
                Login
            
        
    


    'use strict';

    const initCustomer = () => {
        return {
            open: false,
            customerName: '',
            isLoggedIn: false,
            isLoaded: true,

            receiveCustomerData (event) {
                this.customerName = event.customer.firstname;
                this.isLoggedIn = event.customer.signin_token;
                window.isLoggedIn = !!event.customer.signin_token;
            }
        }
    }

                        

    
        
        
        Loading...
    
    
        Wishlist
        
            
                favorite-on
                
            
        
        
            favorite-off
        
        
            Wishlist        
    



    'use strict';

        const initWishlistheader = () => {
            return {
                wishlistAmount: 0,
                isLoaded: true,

                receiveWishlistData (event) {
                    this.wishlistAmount = Number(event.wishlist.counter?.split(' ')[0].trim());
                    this.isLoaded = true;
                }
            }
        }

                        

    
    
    Loading...


    
        
        shopping-cart-filled
            
        
        
            Cart            ()
        
    
    
        shopping-cart
        
            Cart Empty        
    


                                                
                        
                            density-medium
                        
                        
                                            
                
                
                
                    
    
    
        
            
                
                    Search                
                
                
                    search
                
            
            
                
                    
                        


                    
                
            
        
        
            
                
    Loading...
        
                    
                    
            
        
                    
                    
            
        
                    
                    
            
        
                    
                    
            
        
                    
                    
            
    
            
        
        
            
        
        
            
                

    
        
        
        Loading...
    
    
        
            
                

account-on
                
                    Hi, 
                
            
            
                
                    
                    
                
                
                    My Account                
                
                    My Orders                
                
                    Sign Out                    arrow-right-alt
                
            
        
    
    
        
            Login
            account-circle
            
                Login
            
        
    


    'use strict';

    const initCustomernavigation = () => {
        return {
            open: false,
            customerName: '',
            isLoggedIn: false,
            isLoaded: true,

            receiveCustomerData (event) {
                this.customerName = event.customer.firstname;
                this.isLoggedIn = event.customer.signin_token;
                window.isLoggedIn = !!event.customer.signin_token;
            }
        }
    }

                

    
        
        
        Loading...
    
    
        Wishlist
        
            
                favorite-on
                
            
        
        
            favorite-off
        
        
            Wishlist        
    



    'use strict';

        const initWishlistnavigation = () => {
            return {
                wishlistAmount: 0,
                isLoaded: true,

                receiveWishlistData (event) {
                    this.wishlistAmount = Number(event.wishlist.counter?.split(' ')[0].trim());
                    this.isLoaded = true;
                }
            }
        }

                

    
    
    Loading...


    
        
        shopping-cart-filled
            
        
        
            Cart            ()
        
    
    
        shopping-cart
        
            Cart Empty        
    

            
            
                
Buy local


lippert/place-fill

            
            
                
Business Login lippert/arrow-open-in-new

Corporate Site lippert/arrow-open-in-new

Investors lippert/arrow-open-in-new

Careers lippert/arrow-open-in-new

Support lippert/arrow-open-in-new

            
        
    


    
    
        
                                                                                            
                                            
                            RV &amp; Camping                        
                                                            
                                                                                            
                                            
                            Boating &amp; Watersports                        
                                                            
                                                                                            
                                            
                            Towing &amp; Trailering                        
                                                            
                                                                                            
                                            
                            More                        
                                                            
                                                                                            
                                            
                            Sale                        
                                    
                                                                                            
                                            
                            Brands                        
                                                            
                                                                                            
                                            
                            Customer Resources                        
                                                            
                    
        
            
                
    Loading...
        
                    
                    
                    
                    
                    
            
        
                    
                    
                    
                    
                    
            
        
                    
                    
                    
                    
                    
            
        
                    
                    
                    
                    
                    
            
    
            
        
    

    
            'use strict';

        const initMenuDesktop = () => {
            return {
                ajaxUrl: 'https://www.lippert.com/hyvanav/menu/?max_level=6&menu_type=desktop',
                isLoading: false,

                init () {
                    this.switchSubnavCms();
                },

                async toggleNav () {
                    if (!document.querySelector('.js-desktop-filled')) {
                        this.isLoading = true;
                        await this.callAjax();
                    }

                    let element = this.$el;
                    const classList = '.' + element.classList.value.replace(' ', '.');
                    if (classList.includes('desktop_')) {
                        // reinit element after callAjax()
                        element = document.querySelector(classList);
                    }

                    element.parentElement.parentElement.querySelectorAll('.active').forEach(el => el.classList.remove('active'));

                    if (element.classList.contains('column-item__name')) {
                        element.closest('.column').querySelectorAll('.hl').forEach(el => el.classList.remove('hl'));
                        element.classList.add('hl');
                    }

                    if (element.classList.contains('parent-item')) {
                        element.closest('.nav-desktop').querySelectorAll('.parent-item--active')
                            .forEach(el => el.classList.remove('parent-item--active'));
                        element.classList.add('parent-item--active');
                    }

                    if (element.nextElementSibling) {
                        element.nextElementSibling.classList.add('active');
                    }
                },

                resetNavState (e) {
                    const element = this.$el;

                    if (element.contains(e.target)) {
                        return false;
                    }

                    const parentActive = element.querySelector('.parent-item--active');
                    const active = element.querySelectorAll('.active');
                    const hl = element.querySelectorAll('.hl');

                    if (hl) {
                        hl.forEach(el => el.classList.remove('hl'));
                    }

                    if (active) {
                        active.forEach(el => el.classList.remove('active'));
                    }

                    if (parentActive) {
                        parentActive.classList.remove('parent-item--active');
                    }

                    this.setDefaultNavCms();
                },

                switchSubnavCms () {
                    if (window.matchMedia('(max-width: 991px)').matches) return false;

                    const navItems = document.querySelectorAll('.js-cms-child');

                    if (navItems) {
                        navItems.forEach(item => {
                            item.addEventListener('click', (e) => {
                                const cmsRoot = e.target.closest('.nav-desktop-dropdown');
                                const column = e.target.closest('.column-item');
                                const cmsChild = column.querySelector('.cms-area');

                                if (cmsRoot && cmsChild && cmsChild.innerHTML) {
                                    cmsRoot.querySelector('.js-desktop-nav-root').classList.add('hidden');
                                    cmsRoot.querySelector('.js-desktop-nav-child').innerHTML = cmsChild.innerHTML;
                                } else {
                                    this.setDefaultNavCms();
                                }
                            })
                        })
                    }
                },

                setDefaultNavCms() {
                    const cmsRoot = document.querySelectorAll('.js-desktop-nav-root');
                    const cmsChild = document.querySelectorAll('.js-desktop-nav-child');

                    if (cmsRoot) {
                        cmsRoot.forEach(cms => cms.classList.remove('hidden'));
                    }

                    if (cmsChild) {
                        cmsChild.forEach(cms => cms.innerHTML = '');
                    }
                },

                async callAjax() {
                    if (this.controller) {
                        this.controller.abort('Stopping a previous request to create a new one');
                        this.signal = null;
                    }
                    this.controller = new AbortController();
                    this.signal = this.controller.signal;

                    try {
                        const response = await fetch(this.ajaxUrl, {
                            headers: {
                                'Content-type': 'text/plain; charset=UTF-8',
                                'X-Requested-With': 'XMLHttpRequest',
                            },
                            signal: this.signal
                        });
                        const responseData = await response.json();
                        this.isLoading = false;
                        this.reloadHtml(responseData['content']);

                        this.controller = null;
                        this.signal = null;
                    } catch (error) {}
                },

                reloadHtml(content) {
                    hyva.replaceDomElement('.main-nav-desktop', content);
                }
            }
        }
    

    'use strict';

    const initMenuMobile = () => {
        return {
            ajaxUrl: 'https://www.lippert.com/hyvanav/menu/?max_level=6&menu_type=mobile',
            mobilePanelActiveId: 0,
            mobilePanellv1ActiveId: 0,
            mobilePanellv2ActiveId: 0,
            mobilePanellv3ActiveId: 0,
            open: false,
            isLoading: false,
            toggleLevel (index, lv) {
                switch (lv) {
                    case 0:
                        this.mobilePanelActiveId = this.mobilePanelActiveId === index ? 0 : index;
                        break;
                    case 1:
                        this.mobilePanellv1ActiveId = this.mobilePanellv1ActiveId === index ? 0 : index;
                        break;
                    case 2:
                        this.mobilePanellv2ActiveId = this.mobilePanellv2ActiveId === index ? 0 : index;
                        break;
                    case 3:
                        this.mobilePanellv3ActiveId = this.mobilePanellv3ActiveId === index ? 0 : index;
                        break;
                }
            },

            async loadMobileMenuItems(isOpen) {
                document.querySelector('.dropdown-mobile .mobile-toggle').classList.toggle('hidden', ! isOpen);
                if (isOpen && !document.querySelector('.nav-mobile').hasChildNodes()) {
                    this.isLoading = true;
                    await this.callAjax();
                }

                document.querySelector('.dropdown-mobile .mobile-toggle').classList.toggle('hidden', !isOpen);
            },

            async callAjax() {
                if (this.controller) {
                    this.controller.abort('Stopping a previous request to create a new one');
                    this.signal = null;
                }
                this.controller = new AbortController();
                this.signal = this.controller.signal;

                try {
                    const response = await fetch(this.ajaxUrl, {
                        headers: {
                            'Content-type': 'text/plain; charset=UTF-8',
                            'X-Requested-With': 'XMLHttpRequest',
                        },
                        signal: this.signal
                    });
                    const responseData = await response.json();
                    this.isLoading = false;
                    hyva.replaceDomElement('.nav-mobile', responseData['content']);

                    this.controller = null;
                    this.signal = null;
                } catch (error) {}
            }
        }
    }


                                        
                        
Buy local


lippert/place-fill

                    
                                    
                
            
        
        
        
 setMinicartState(value))"
    @private-content-loaded.window="getData($event.detail.data)"
    @toggle-cart.window="toggleCart"
    @keydown.window.escape="open=false"
>
    
        
            
            
                
                    

    
        
            
                
                    
                        
                            
                        
                    
                
            
        
    


                    
                        
                            shopping-cart-filled
                            
                                
                                     1"
                                        x-text="getItemsQuantitySum()"
                                    >
                                    Items in Cart                                
                            
                            
                                No Items in Cart
                            
                        
                        
                            cancel
                        
                    

                                        
                        
                            
                                
                                    
                                        
                                            
                                        
                                        
                                            
                                            
                                                SKU:
                                                
                                            
                                            
                                                
                                                    
                                                        
                                                            :&nbsp;
                                                            
                                                                
                                                                ,&nbsp;
                                                            
                                                        
                                                    
                                                
                                                
                                                    
                                                        
                                                            Show Details                                                            
                                                                expand-more
                                                            
                                                        
                                                        
                                                            
                                                                
                                                            
                                                        
                                                    
                                                
                                            
                                            
                                                
                                                    local-shipping
                                                    
                                                        Estimated&#x20;delivery&#x20;is&#x3A;                                                        
                                                    
                                                    
                                                
                                            
                                            
                                            
                                            
                                                In stock                                            
                                            
                                                Low Stock                                            
                                            
                                                Out of stock                                            
                                            
                                            
                                                
                                                    delete
                                                
                                            
                                            
                                                
                                                    remove
                                                
                                                
                                                    Product quantity                                                
                                                
                                                
                                                    add
                                                
                                            
                                        
                                    
                                
                            
                                                        
                                

    
        
        
            
                
                    Shipping Cost                
                
                    
                        Ready to Calculate                    
                
                
                    
                
                
            
            
                
                    
                        
                            Enter ZIP code                        
                        for estimated delivery
                    
                
                
                    
                        
                            Calculated from                            
                        
                        
                            Change ZIP code                        
                    
                
            
        
        
            
                
                    
                     
                    
                        
                        
                        
                        
                    
                        
                            
                                Zip code
                                
                            
                        
                        
                            Calculate                        
                    
                     0">
                        
                            
                                
                                    
                                    
                                        
                                            
                                            
                                                
                                                                                                
                                                                                            
                                        
                                    
                                
                            
                        
                    
                
            
        
    


                            
                            
                                
                                    Subtotal:
                                    
                                
                                                                
                                    
                                        Secure Checkout                                        arrow-right-alt
                                    
                                    
                                        shopping-cart-filled
                                        View or Edit Cart                                    
                                
                                                            
                                                    
                    
                    
                        
                            
                                Your cart is currently empty.                            
                            
                                Continue Shopping                            
                                                            
                                    Login                                    arrow-right-alt
                                
                                                        
                                Have Questions?                                Contact us
                            
                        
                    
                
            
            
    
    
        Loading...    

        
    


    'use strict';

    function initCartDrawer() {
        return {
            open: false,
            isLoading: false,
            cart: {},
            maxItemsToDisplay: 10,
            itemsCount: 0,
            totalCartAmount: 0,
            getData(data) {
                if (data.cart) {
                    this.cart = data.cart;
                    this.itemsCount = data.cart.items && data.cart.items.length || 0;
                    this.totalCartAmount = this.cart.summary_count;
                    this.setCartItems();
                }
                this.isLoading = false;
            },
            cartItems: [],
            getItemCountTitle() {
                return hyva.strf('(%0 of %1)', this.maxItemsToDisplay, this.itemsCount)
            },
            setCartItems() {
                this.cartItems = this.cart.items && this.cart.items.sort((a, b) => b.item_id - a.item_id) || [];

                if (this.maxItemsToDisplay > 0) {
                    this.cartItems = this.cartItems.slice(0, parseInt(this.maxItemsToDisplay, 10));
                }
            },
            deleteItemFromCart(itemId) {
                this.isLoading = true;

                const formKey = hyva.getFormKey();
                const postUrl = BASE_URL + 'checkout/sidebar/removeItem/';

                fetch(postUrl, {
                    "headers": {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    },
                    "body": "form_key=" + formKey + "&item_id=" + itemId,
                    "method": "POST",
                    "mode": "cors",
                    "credentials": "include"
                }).then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else if (response.ok) {
                        return response.json();
                    } else {
                        window.dispatchMessages && window.dispatchMessages([{
                            type: 'warning',
                            text: 'Could\u0020not\u0020remove\u0020item\u0020from\u0020quote.'
                        }]);
                        this.isLoading = false;
                    }
                }).then(result => {
                    window.dispatchMessages && window.dispatchMessages([{
                        type: result.success ? 'success' : 'error',
                        text: result.success
                            ? 'You\u0020removed\u0020the\u0020item.'
                            : result.error_message
                    }], result.success ? 5000 : 0)
                    window.dispatchEvent(new CustomEvent('update-shipping-method-estimations'));
                    window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                });
            },

            updateQty(itemId, itemQty) {
                this.isLoading = true;

                const formKey = hyva.getFormKey();
                const postUrl = BASE_URL + 'checkout/sidebar/updateItemQty/';

                fetch(postUrl, {
                    "headers": {
                        "content-type": "application/x-www-form-urlencoded; charset=UTF-8",
                    },
                    "body": `form_key=${formKey}&item_id=${itemId}&item_qty=${itemQty}`,
                    "method": "POST",
                    "mode": "cors",
                    "credentials": "include"
                }).then(response => {
                    if (response.redirected) {
                        window.location.href = response.url;
                    } else if (response.ok) {
                        return response.json();
                    } else {
                        window.dispatchMessages && window.dispatchMessages([{
                            type: 'warning',
                            text: 'Could\u0020not\u0020update\u0020item.'
                        }]);
                        this.isLoading = false;
                    }
                }).then(result => {
                    window.dispatchMessages && window.dispatchMessages([{
                        type: result.success ? 'success' : 'error',
                        text: result.success
                            ? 'Product\u0020quantity\u0020updated.'
                            : result.error_message
                    }], result.success ? 5000 : 0)
                    window.dispatchEvent(new CustomEvent('update-shipping-method-estimations'));
                    window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                });
            },

            decreaseQty(event, itemId) {
                const { target } = event
                const qtyContainer = target.closest('.js-qty-container');
                const qtyInput = qtyContainer.querySelector('input');
                const qtyValue = parseInt(qtyInput.value);

                if (qtyValue > 1) {
                    qtyInput.value = qtyValue - 1;
                    this.updateQty(itemId, qtyInput.value)
                }
            },
            increaseQty(event, itemId) {
                const { target } = event
                const qtyContainer = target.closest('.js-qty-container');
                const qtyInput = qtyContainer.querySelector('input');
                const qtyValue = parseInt(qtyInput.value);

                qtyInput.value = qtyValue + 1;
                this.updateQty(itemId, qtyInput.value)
            },
            setMinicartState(value) {
                if (value) {
                    document.body.classList.add('overflow-hidden', 'minicart-open', 'pr-[15px]');
                } else {
                    document.body.classList.remove('overflow-hidden', 'minicart-open', 'pr-[15px]');
                }
            },
            getItemsQuantitySum() {
                return this.cart.summary_count;
            },
            toggleCart() {
                this.open = true;
                this.$dispatch('update-shipping-method-estimations');
            }
        }
    }


        
            


    'use strict';


    function initHeader () {
        return {
            cart: {},
            headerHeight: 0,
            isSticky: false,
            mobileOpen: false,
            isLoaded: false,
            getData(data) {
                if (data.cart) {
                    this.cart = data.cart
                }

                this.isLoaded = true;
            },

            initStickyHeader() {
                this.headerHeight = this.$refs.header.offsetHeight;

                const handleScroll = window.debounce(() => {
                    this.isSticky = window.scrollY > this.$el.offsetHeight;
                }, 100);

                window.addEventListener("scroll", handleScroll);
            },
        }
    }

    document.addEventListener('alpine:init', () => {
        Alpine.store('search', {
            searchOpen: false,

            closeSearch() {
                const modal = document.getElementById('algolia-autocomplete-container');
                const target = document.querySelectorAll('.js-placeholder-input');
                const dropdown = modal.querySelector('.js-search-panel');
                const dropdownInput = modal.querySelector('.js-search-input');

                if (modal && target) {
                    if (dropdownInput) {
                        const modalValue = dropdownInput.value;

                        target.forEach(input => input.value = modalValue);
                    }

                    this.$store.search.searchOpen = false;

                    if (dropdown) {
                        dropdown.remove();
                    }
                }

                document.body.classList.remove('overflow-hidden');
                this.$store.search.resetAutocompleteTopPosition();
            },

            openSearch() {
                window.dispatchEvent(new CustomEvent('algolia-autocomplete-load'));
                const modal = document.getElementById('algolia-autocomplete-container');

                this.$store.search.searchOpen = true;
                document.body.classList.add('overflow-hidden');

                if (window.autocompleteInitialized) {
                    this.$nextTick(() => {
                        modal.querySelector('.js-search-input').focus();
                    });
                }

                this.$store.search.setAutocompleteTopPosition();
            },
            setAutocompleteTopPosition() {
                if (window.matchMedia('(max-width: 1279px)').matches) {
                    return false;
                }
                const isSticky = !!document.querySelector('.nav-sticky');
                const algoliaAutocomplete = document.getElementById('modal-algolia');
                let top = 0;

                if (isSticky) {
                    top = 30;
                } else {
                    const marquee = document.querySelector('.js-marquee');
                    const headerLinks= document.querySelector('.js-header-links');

                    if (marquee) {
                        top += marquee.offsetHeight;
                    }

                    if (headerLinks) {
                        top += headerLinks.offsetHeight;
                    }
                }

                if (algoliaAutocomplete) {
                    algoliaAutocomplete.style.top = `${top}px`;
                }
            },
            resetAutocompleteTopPosition() {
                const algoliaAutocomplete = document.getElementById('modal-algolia');

                if (algoliaAutocomplete) {
                    algoliaAutocomplete.style.top = '';
                }
            },
            toggle() {
                this.on = ! this.on
            }
        })
    })




        window.defaultSuccessMessageTimeout = 5000;
        window.globalMessages = [];
    function initMessages() {
        "use strict";
        return {
            messages: [],
            isEmpty() {
                return this.messages.reduce(
                    function (isEmpty, message) {
                        return isEmpty && message === undefined
                    }, true
                )
            },
            removeMessage(messageIndex) {
                this.messages[messageIndex] = undefined;
                window.globalMessages[messageIndex] = undefined;
            },
            addMessages(messages, hideAfter) {
                messages.map((message) => {
                    if (!message?.text?.includes('Coupon')) {
                        this.messages = this.messages.concat(message);
                        window.globalMessages = this.messages;
                    }
                    if (hideAfter === undefined && window.defaultSuccessMessageTimeout) {
                        hideAfter = window.defaultSuccessMessageTimeout;
                    }
                    if (hideAfter) {
                        this.setHideTimeOut(this.messages.length -1, hideAfter);
                    }
                });
            },
            setHideTimeOut(messageIndex, hideAfter) {
                setTimeout((messageIndex) => {
                    this.removeMessage(messageIndex);
                }, hideAfter, messageIndex);
            },
            pullMessages() {
                this.messages = window.globalMessages;
            },
            eventListeners: {
                ['@messages-loaded.window']() {
                    if (event.detail?.messages.length) {
                        this.addMessages(event.detail.messages, event.detail.hideAfter);
                    }
                },
                ['@private-content-loaded.window'](event) {
                    const data = event.detail.data;
                    if (
                        data.messages &&
                        data.messages.messages &&
                        data.messages.messages.length
                    ) {
                        this.addMessages(data.messages.messages);
                    }
                },
                ['@clear-messages.window']() {
                    this.messages = [];
                    window.globalMessages = this.messages;
                }
            }
        }
    }


    
        
            
                
                    
                        
                            
                        
                    
                
            
        
    


    
        404! Uh oh, you’ve hit a roadblock!    

    

                    
            /* e.g. hyva theme */
            document.addEventListener('DOMContentLoaded', function(){
                var items =  document.getElementsByClassName('mfblogunveil');
                var el, url;
                if (items.length) {
                    for (var i=0; i
    'use strict';

    window.addEventListener('init-external-scripts', () => {
        // Yotpo - Add body class
            (function(){document.body.classList.add('yotpo-yotpo-is-enabled')})();
        // Yotpo - Add body class
        // Yotpo - Widget Script
            (function e(){
                var e=document.createElement("script");
                e.type="text/javascript",
                e.async=true,
                e.src="https://cdn-widgetsrepository.yotpo.com/v1/loader/0X4x6lMiICOTyPP25SjWoLIFdKht4NJPRzmfaDKM";
                var t=document.getElementsByTagName("script")[0];
                t.parentNode.insertBefore(e,t)
            })();
        // Yotpo - Widget Script
    }, {once: true, passive: true})

#html-body [data-pb-style=JW9XCEU]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}#html-body [data-pb-style=ULRMGL0]{border-style:none}#html-body [data-pb-style=Q563H6S],#html-body [data-pb-style=QFX97QB]{max-width:100%;height:auto}#html-body [data-pb-style=V57CN85]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}@media only screen and (max-width: 768px) { #html-body [data-pb-style=ULRMGL0]{border-style:none} }This road is closed, sorry about that! Don’t let the adventuring stop here, though – there’s always an alternate route!
Take a short cut back home and choose a new route
Take a detour (the scenic route!) to the blog for new ideas and other great camping info
Use the search bar to look for new directions to your destination        More to Explore:Shop New Products for Outdoor AdventuresRV Awning Kits and AccessoriesBuy Affordable CURT 5th Wheel Hitches 
  addEventListener('DOMContentLoaded', () => {
      for (const [selector, label] of Object.entries({"aside.sidebar-main":"Sidebar Main","aside.sidebar-additional":"Sidebar Additional"})) {
          const target = document.querySelector(selector);
          target && target.setAttribute('aria-label', label);
      }
  }, {once: true})


    
        
            Stay up to date on new products promotions and more!        
        
            
    
        
            
                Customer information
                
                    
                        First Name                    
                    
                    
                
                
                    
                        Last Name                    
                    
                    
                
                
                    
                        Email Address                    
                    
                    
                
            
            
                
                    Interests                
                                                        
                        
                        RV &amp; Camping
                    
                                                        
                        
                        Boating &amp; Watersports
                    
                                                        
                        
                        Towing &amp; Trailering
                    
                                
            
            
                
                                        
    

                
                
        
        
            
            
                
                
                    I have read and accept the Privacy Notice                    
                
                
            
            
        

        
    

                    Subscribe                
            
        
    


    function initNewsletterForm() {
        return {
            errors: 0,
            hasCaptchaToken: 0,
            displayErrorMessage: false,
            errorMessages: [],
            path: 'https://www.lippert.com/newsletter/subscriber/new/',
            setErrorMessages(messages) {
                this.errorMessages = [messages]
                this.displayErrorMessage = this.errorMessages.length
            },
            // Do not rename submitForm, this name used for recaptcha in core files.
            submitForm() {
                // Do not rename $form, the variable is expected to be declared in the recaptcha output
                const $form = document.querySelector('#js-newsletter-validate-detail');

                this.validate()
                    .then(() => {
                            if (!this.hasCaptchaToken) {
        this.errors = 1;


        const executeGreCaptcha = () => {
            grecaptcha.ready(() => {
                grecaptcha.execute(
                    '6LdpdWEpAAAAAP_YuxupKSEZGxzZeuxZD\u002DYkfhUJ',
                    {action: 'submit'}
                ).then((token) => {
                    const tokenElement = $form['g\u002Drecaptcha\u002Dresponse'];

                    if (tokenElement && token && token.length > 0) {
                        $form['g\u002Drecaptcha\u002Dresponse'].value = token;
                        this.errors = 0;
                        this.hasCaptchaToken = 1;
                        (this.submitForm || $form.submit).call(this);
                    } else {
                        this.errors = 1;
                        const error = tokenElement
                            ? 'ReCaptcha\u0020validation\u0020failed,\u0020please\u0020try\u0020again'
                            : 'ReCaptcha\u0020token\u0020element\u0020is\u0020missing.\u0020Please\u0020refresh\u0020the\u0020page\u0020and\u0020trying\u0020again.';
                        if (this.setErrorMessages) {
                            this.setErrorMessages([error])
                            this.displayErrorMessage = true;
                        } else {
                            window.dispatchMessages && window.dispatchMessages([{type: "error", text: error}], 5000);
                        }
                    }
                }).catch(exception => {
                    console.error(exception || `An unknown error occurred during ReCaptcha validation. Are the tokens and the domain correctly set up in the Google console?`)
                });
            })
        }

        if (window.grecaptcha) {
            executeGreCaptcha();
        } else {
            const recaptchaUrl = "https://www.google.com/recaptcha/api.js?render=6LdpdWEpAAAAAP_YuxupKSEZGxzZeuxZD\u002DYkfhUJ";
            const script = document.createElement('script');
            script.setAttribute('type', 'text/javascript');
            script.setAttribute('src', recaptchaUrl);
            document.head.appendChild(script);

            script.addEventListener("load", executeGreCaptcha, false);
        }
    }
                            if (this.errors === 0) {
                            $form.submit();
                        }
                    })
                    .catch((invalid) => {
                        if (invalid.length > 0) {
                            invalid[0].focus();
                        }
                    });
            }
        }
    }

        
    
    
        
            
                #html-body [data-pb-style=WVEMP90]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}Lippert

    Business Storelippert/arrow-open-in-new

    Lippert Companieslippert/arrow-open-in-new

    Investorslippert/arrow-open-in-new

    Careerslippert/arrow-open-in-new

    EMEA Websitelippert/arrow-open-in-new



408 South, Byrkit StMishawaka, IN 46544
customerservice@lci1.com
432-LIPPERT (432-547-7378)
            
            
                #html-body [data-pb-style=J1UYCLS]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}Customer Service

    Contact Us
    Find a Dealer
    My Account
    Wishlist
    Shipping & Returns
    Scouts Community
    Blog
    About Us
            
            
                #html-body [data-pb-style=L8PJQXW]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}Quick Links

    RV & Camping
    Boating & Watersports
    Towing & Trailering
    Brands
            
            
                #html-body [data-pb-style=HENRYRK]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}Support

    Supportlippert/arrow-open-in-new

    Support Documentationlippert/arrow-open-in-new

    Technical Traininglippert/arrow-open-in-new


            
        
        
            #html-body [data-pb-style=KKVOS1S]{justify-content:flex-start;display:flex;flex-direction:column;background-position:left top;background-size:cover;background-repeat:no-repeat;background-attachment:scroll}#html-body [data-pb-style=UB7HIJJ]{border-style:none}#html-body [data-pb-style=DHE4J87],#html-body [data-pb-style=NALC69J]{max-width:100%;height:auto}@media only screen and (max-width: 768px) { #html-body [data-pb-style=UB7HIJJ]{border-style:none} }Connect with Lippert

    









lippert/facebook-circle

    



















lippert/instagram-circle

    









lippert/tik-tok-circle

    









lippert/youtube-circle

    














lippert/pinterest-circle

    









lippert/x-circle

    

























lippert/linkedin-circle


    
        
            Site Terms and Conditions
        
    
    
    
        
            Privacy Notice
        
    
    
    
        
            Disclosures
        
    
    
    
        
            Cookie Policy
        
    
    
    
        
            Recycling Program
        
    
    
    
        
            Customer Terms and Conditions
        
    
    
    
        
            Do Not Sell or Share My Information
        
    

408 South, Byrkit AveMishawaka, IN 46544
customerservice@lci1.com
432-LIPPERT (432-547-7378)
© 2025 Lippert All Rights Reserved.        
    



    function initFooter() {
        return {
            setCopyrightYear() {
                let copyrightYearText = document.getElementById("copyright-year");

                if (copyrightYearText) {
                    copyrightYearText.innerHTML = new Date().getFullYear();
                }
            }
        }
    }


    'use strict';

    function amBrandsPopup() {
        let cached = false;

        const displayError = (error) => {
            console.error(error);
            typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                [{
                    type: "error",
                    text: "Something\u0020went\u0020wrong.\u0020Please\u0020try\u0020again."
                }], 10000
            );
        };

        let letters = [
            "A","B","C","D",
            "E","F","G","H","I","J","K","L","M",
            "N","O","P","Q","R","S","T","U","V","W","X","Y","Z","#"
        ];

        return {
            hoverPanelActiveId: null,
            selectedLetter: null,
            items: [],
            letters: [],
            showCount: null,
            showFilter: null,
            showImages: true,
            showSearch: null,
            loading: false,
            label: 'Brands',
            isPopupEnabled: false,
            isTopMenuItemEnabled: false,
            cache: false,
            isMobile: false,

            initErrorMessages(errors) {
                const messages = [];
                for (let error in Object.keys(errors)) {
                    messages.push({type: 'error', text: errors[error].message});
                }
                typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(messages, 10000);
            },

            chooseLetter(letter) {
                this.selectedLetter = this.selectedLetter === letter ? null : letter;
            },

            getQuery() {
                return "query BrandsPopupQuery { ambrandlist(\n                    showCount: true\n                    displayZero: true\n                  ) {\n                    all_letters,\n                    items {\n                      alt\n                      brandId\n                      cnt\n                      image\n                      img\n                      label\n                      letter\n                      url\n                    }\n                  }\n                  storeConfig {\n                    amshopby_brand_general_brands_brands_popup,\n                    amshopby_brand_general_menu_item_label,\n                    amshopby_brand_general_brands_page,\n                    amshopby_brand_general_topmenu_enabled,\n                    amshopby_brand_general_brands_popup_config {\n                      show_images,\n                      display_zero,\n                      filter_display_all,\n                      image_width,\n                      image_height,\n                      show_filter,\n                      show_count\n                    }\n                  } }"            },

            /**
             * Retrieve media url for given path
             *
             * @param path
             * @returns {string}
             */
            getMediaUrl(path) {
                let stringToRemove = 'index.php/';
                let baseUrl = BASE_URL.replace(stringToRemove, '');
                return path.includes(baseUrl) ? path : baseUrl + path;
            },

            checkIsMobileResolution() {
                this.isMobile = window.matchMedia('(max-width: 1023px)').matches;
            },

            getBrandUrl(url){
                return BASE_URL + url;
            },

            init() {
                this.checkIsMobileResolution();

                                this.$watch('hoverPanelActiveId', (value) => {
                    if (value === 'am-brand') {
                        this.sendRequest();
                    }
                });
                            },

            /**
             * Get brands by letter
             *
             * @param result
             * @returns {{imageWidth: *, isTopMenuItemEnabled: *, showCount: *, displayAll: *, showFilter: *, showImages: *, isPopupEnabled: *, label: *, imageHeight: *, filterDisplayAll: *, brandsPage: *}}
             */
            settingsMapper(result) {
                const config = result.data.storeConfig?.amshopby_brand_general_brands_popup_config;
                return {
                    showImages: config.show_images,
                    showCount: config.show_count,
                    showFilter: config.show_filter,
                    imageWidth: config.image_width,
                    imageHeight: config.image_height,
                    filterDisplayAll: config.filter_display_all,
                    displayAll: config.display_zero,
                    isPopupEnabled: result.data.storeConfig?.amshopby_brand_general_brands_brands_popup,
                    label: result.data.storeConfig?.amshopby_brand_general_menu_item_label,
                    isTopMenuItemEnabled: result.data.storeConfig?.amshopby_brand_general_topmenu_enabled,
                    brandsPage: result.data.storeConfig?.amshopby_brand_general_brands_page,
                }
            },

            /**
             * Send request to graphql
             *
             * @returns {Promise}
             */
            async sendRequest() {
                if (this.isMobile) {
                    return false;
                }

                this.loading = true;

                try {
                    if (cached) {
                        this.loading = false;
                        return false;
                    }

                    const response = await fetch('https://www.lippert.com/graphql', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Store': 'lippert'
                        },
                        credentials: 'include',
                        body: JSON.stringify({query: this.getQuery(), variables: {}})
                    });
                    const result = await response.json();

                    if (result?.errors) {
                        this.initErrorMessages(result.errors);
                        return;
                    }

                    const data = result.data?.ambrandlist;
                    const mapper = this.settingsMapper(result);

                    // Update component settings
                    Object.keys(mapper).forEach(config => {
                        this[config] = mapper[config];
                    });

                    if (!this.filterDisplayAll) {
                        letters = data.all_letters.split(',');
                    }

                    const items = data.items.map(brand => {
                        brand.image = brand.img
                            ? this.getMediaUrl(brand.img) : (brand.image ? this.getMediaUrl(brand.image) : null);
                        return brand;
                    });

                    this.letters = letters.map(letter => ({
                        letter,
                        brands: this.getLetterItems(items, letter),
                    }));

                    this.items = this.letters.filter(row => row.brands?.length > 0);

                    cached = true;
                } catch (error) {
                    displayError(error);
                } finally {
                    this.loading = false;
                }
            },

            /**
             * Get brands by letter
             *
             * @param items
             * @param letter
             * @returns {*}
             */
            getLetterItems(items, letter) {
                return items.filter(row => row.letter === letter);
            },

            convertHtml(text) {
                let textField = document.createElement("textarea");
                textField.innerHTML = text;
                return textField.value;
            }
        }
    }



    'use strict';

    (function () {
        window.AmFB = {
            fbSectionName: 'amfacebook-pixel',
            options: {
                eventCode: '',
                url: 'https://www.lippert.com/amasty_fbpixel/pageView/processPageView/',
                eventsData: {},
                isLogEnabled: '',
                loggingUrl: 'https://www.lippert.com/amasty_fbpixel/logEvent/log/'
            },

            /**
             * @private
             * @param {object} body
             * @param {string} param
             * @param {object} object
             * @returns {void}
             */
            prepareObjectData: function (body, param, object) {
                for (const [key, value] of Object.entries(object)) {
                    if (value === null) {
                        continue;
                    }

                    if (typeof value === 'object') {
                        this.prepareObjectData(body, param + `[${key}]`, value);
                    } else {
                        body.append(param + `[${key}]`, value);
                    }

                }
            },

            /**
             * @private
             * @returns {void}
             */
            setDataToSection: function () {
                const body = new URLSearchParams({
                    form_key: hyva.getFormKey(),
                    uenc: hyva.getUenc(),
                    event_code: this.options.eventCode
                });

                this.prepareObjectData(body, 'event_data', this.options.eventsData);

                fetch(this.options.url, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        body: body
                    }).catch(error => {
                        typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                            {
                                type: "error",
                                text: error
                            }
                        ]);
                    });
            },

            /**
             * @private
             * @param {string} eventsData
             * @returns {void}
             */
            logEventData: function (eventsData) {
                const body = new URLSearchParams({
                    form_key: hyva.getFormKey(),
                    uenc: hyva.getUenc()
                });

                this.prepareObjectData(body, 'events', eventsData);

                fetch(this.options.loggingUrl, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
                        },
                        body: body
                    }).catch(error => {
                        typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                            {
                                type: "error",
                                text: error
                            }
                        ]);
                    });
            },

            /**
             * @private
             * @param {Object} event
             * @returns {void}
             */
            afterLoadSectionData: function (event) {
                const eventsData = event.detail?.data[this.fbSectionName]?.events;

                !!eventsData && this.setFbqData(eventsData);
            },

            /**
             * @private
             * @param {array} eventsData
             * @returns {void}
             */
            setFbqData: function(eventsData) {
                eventsData.forEach((data) => {
                    const id = Object.keys(data)[0];

                    !!id && fbq(data[id].event_action, id, data[id].event_type, data[id].event_data, {eventID: data[id].event_id});
                });

                if (this.options.loggingUrl && this.options.isLogEnabled) {
                    this.logEventData(eventsData);
                }
            },

            /**
             * @public
             * @returns {void}
             */
            initFB: function () {
                window.addEventListener("private-content-loaded", (event) => this.afterLoadSectionData(event), {once:true});

                if (this.options.eventCode && this.options.url) {
                    this.setDataToSection();
                    this.reloadCustomerData();
                } else {
                    this.reloadCustomerData();
                }
            },

            /**
             * @private
             * @returns {void}
             */
            reloadCustomerData() {
                this.resetSessionCookie();
                window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
            },

            /**
             * @private
             * @returns {void}
             */
            resetSessionCookie() {
                hyva.setCookie('mage-cache-sessid', '', -1, true);
            },
        };

        window.AmFB.initFB();
        })();



    
        
            
                

close
            
            
            
                
            
            
            
                
                    I have read and accept                
            
        

    



    'use strict';

    function initAmGdprPolicyPopup() {
        return {
            /**
             * @typedef PolicyData
             * @property {string} policyVersion
             * @property {boolean} show
             * @property {string} title
             * @property{boolean} versionChanged
             * @property {boolean} hideClose
             * @property {boolean} action
             */

            eventListeners: {
                ['@amgdpr-accept-policy']() {
                    if (this.consentId) {
                        window.dispatchEvent(new CustomEvent('amgdpr-consent-accepted', {detail: this.consentId}));
                        this.consentId = undefined;
                        this.hide('amgdpr-policy-popup');
                    } else {
                        this.acceptPolicy();
                    }
                },
                ['@amgdpr-show-policy.window'](event) {
                    this.consentId = event.detail;
                    this.fetchPolicyContent().then(() => {
                        this.$nextTick(() => {
                            this.show('amgdpr-policy-popup');
                        });
                    });
                },
                ['@amgdpr-close-policy']() {
                    this.hide('amgdpr-policy-popup');
                }
            },
            textUrl: 'https://www.lippert.com/gdpr/policy/policytext/',
            acceptUrl: 'https://www.lippert.com/gdpr/policy/accept/',
            popupDataUrl: 'https://www.lippert.com/gdpr/policy/popupData/',
            notificationText: 'We would like to inform you that our Privacy Policy has been amended.Please, read and accept the new terms.',
            showOnPageLoad: '',
            /**
             * @type PolicyData
             */
            policyData: {
                policyVersion: '',
                show: false,
                title: '',
                versionChanged: false,
                hideClose: false,
                action: true
            },
            title: '',
            policyText: '',
            consentId: undefined,
            initGdprPopup: function () {
                if (this.showOnPageLoad) {
                    this.fetchPolicyData().then(() => {
                        if (this.policyData.show || this.policyData.versionChanged) {
                            this.fetchPolicyContent().then(() => {
                                this.$nextTick(() => {
                                    this.show('amgdpr-policy-popup');
                                });
                            });
                        }
                    });
                }
            },

            /**
             * @returns {Promise}
             */
            fetchPolicyData: function () {
                return fetch(this.popupDataUrl)
                    .then(response => response.json())
                    .then((data) => {
                        this.policyData = {...data}
                    })
                    .catch(error => this.dispatchErrorMessage(error));
            },

            /**
             * @returns {Promise}
             */
            fetchPolicyContent: function () {
                this.title = '';
                this.policyText = '';

                const params = !!this.consentId
                    ? '?' + new URLSearchParams({consent_id: this.consentId})
                    : ''

                return fetch(this.textUrl + params)
                    .then(response => response.json())
                    .then(policyContent => {
                        this.title = policyContent.title;
                        this.policyText = policyContent.content;
                    }).catch(error => this.dispatchErrorMessage(error));
            },

            /**
             * @returns {void}
             */
            acceptPolicy: function () {
                window.dispatchEvent(new Event('amgdpr-loading-start'));

                const body = new URLSearchParams({form_key: hyva.getFormKey(), ...this.policyData});
                const contentType = 'application/x-www-form-urlencoded; charset=UTF-8';

                fetch(this.acceptUrl, {method: 'POST', body, headers: {'Content-Type': contentType}})
                    .then(response => response.json())
                    .then(data => {
                        if (data.error) {
                            this.dispatchErrorMessage(data.message)
                        } else {
                            this.notificationText = '';
                            this.hide('amgdpr-policy-popup');
                        }
                    })
                    .catch(error => this.dispatchErrorMessage(error))
                    .finally(() => window.dispatchEvent(new Event('amgdpr-loading-stop')));
            },

            /**
             * @param {string} message
             * @returns {void}
             */
            dispatchErrorMessage: function (message) {
                typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                    {
                        type: "error",
                        text: message
                    }
                ]);
            }
        }
    }




{
    "[data-role=signifyd-fingerprint]": {
        "Magento_Ui/js/core/app": {"components":{"signifyd-fingerprint":{"component":"Signifyd_Connect\/js\/view\/signifyd-fingerprint"}}}    }
}

    
        
            
                
                    
                         
                        
                            
                        
                    
                    
                        
                    
                
            
        
    

    
        'use strict';

        function webchatScope() {
            return {
                webchatInstance: false,
                isLoaded: false,
                isLoading: false,
                isLoadedTimeout: 1000,
                initWebchat() {
                    this.isLoading = true;
                    window.loadScript("https://github.com/Cognigy/Webchat/releases/latest/download/webchat.js", 'script-cognigy')
                        .then(() => {
                            this.storageSetup();

                            this.webchatSetup().then(webchat => {
                                this.webchatInstance = webchat;
                                webchat.registerAnalyticsService(events => this.processAnalyticsEvent(events))
                                this.webchatInstance.open()

                                setTimeout(() => this.isLoaded = true, this.isLoadedTimeout)
                            })
                        });
                },
                processAnalyticsEvent(analyticsEvent) {
                    switch (analyticsEvent.type) {
                        case "webchat/open":
                            window.localStorage.windowState = 'open';
                            break;
                        case "webchat/close":
                            window.localStorage.windowState = 'closed';
                            break;
                        case "webchat/incoming-message":
                            window.localStorage.webchatLastMessage = Date.now();
                            break;
                        case "webchat/outgoing-message":
                            window.localStorage.webchatLastMessage = Date.now();
                            break;
                    }
                },

                checkTime() {
                    let hours = 1;
                    let now = Date.now();
                    let diff = (now - window.localStorage.webchatLastMessage) / 3600000;

                    if (diff > hours) {
                        this.clearStorage();
                        this.storageSetup();
                        if (this.webchatInstance) {
                            this.webchatInstance.close();
                            this.webchatSetup().then(webchat => {
                                this.webchatInstance = webchat;
                                webchat.registerAnalyticsService(events => this.processAnalyticsEvent(events));
                            });
                        }
                    }
                },
                storageSetup() {
                    let sessionId;

                    if (window.localStorage) {
                        window.localStorage.webchatLastMessage = Date.now();
                        if (typeof window.localStorage.webchatLastMessage != 'undefined' ||
                            window.localStorage.webchatLastMessage != null) {
                            this.checkTime();
                        }
                        window.localStorage.windowState = 'closed';
                        sessionId = window.localStorage.getItem("WEBCHATSESSIONID");
                        if (!sessionId) {
                            sessionId = "session-" + Date.now() * Math.random();
                            window.localStorage.setItem("WEBCHATSESSIONID", sessionId);
                        }

                        setInterval(this.checkTime, 300000);
                    }
                },

                clearStorage() {
                    for (let i = 0; i  window.hyva.breakpointTablet
                            }
                        }
                    );
                }
            }
        }
    

document.addEventListener("DOMContentLoaded", function() {
        if (document.querySelectorAll('.mf-ytw-wrapper').length || document.querySelectorAll('[data-mf-ytw-youtube-link]').length) {
            !function (f, b, e, v, t, s) {
                if(f.mfytwcss)return;
                f.mfytwcss=1;
                t = b.createElement(e);
                t.rel = 'stylesheet';
                t.type = 'text/css';
                t.href = v;
                s = b.getElementsByTagName('HEAD')[0];
                s.appendChild(t)
            }(window, document, 'link', 'https://www.lippert.com/static/version1759822589/frontend/Vaimo/lippert/en_US/Magefan_YouTubeWidget/css/youtubewidget.css');
        }
        if (document.querySelectorAll('.mf-ytw-wrapper').length) {
            !function (f, b, e, v, t, s) {
                if(f.mfytwjs)return;
                f.mfytwjs=1;
                t = b.createElement(e);
                t.type = 'text/javascript';
                t.src = v;
                s = b.getElementsByTagName('HEAD')[0];
                s.appendChild(t)
            }(window, document, 'script', 'https://www.lippert.com/static/version1759822589/frontend/Vaimo/lippert/en_US/Magefan_YouTubeWidget/js/iframe.js');
        }
        if (document.querySelectorAll('[data-mf-ytw-youtube-link]').length) {
            !function (f, b, e, v, t) {
                if(f.mflinkjs)return;
                f.mflinkjs=1;
                t = b.createElement(e);
                t.type = 'text/javascript';
                t.src = v;
                s = b.getElementsByTagName('HEAD')[0];
                s.appendChild(t)
            }(window, document, 'script', 'https://www.lippert.com/static/version1759822589/frontend/Vaimo/lippert/en_US/Magefan_YouTubeWidget/js/link.js');
        }
    });

    (() => {
        function src_default(Alpine) {
            Alpine.directive("intersect", Alpine.skipDuringClone((el, { value, expression, modifiers }, { evaluateLater, cleanup }) => {
                let evaluate = evaluateLater(expression);
                let options = {
                    rootMargin: getRootMargin(modifiers),
                    threshold: getThreshold(modifiers)
                };
                let observer = new IntersectionObserver((entries) => {
                    entries.forEach((entry) => {
                        if (entry.isIntersecting === (value === "leave"))
                            return;
                        evaluate();
                        modifiers.includes("once") && observer.disconnect();
                    });
                }, options);
                observer.observe(el);
                cleanup(() => {
                    observer.disconnect();
                });
            }));
        }
        function getThreshold(modifiers) {
            if (modifiers.includes("full"))
                return 0.99;
            if (modifiers.includes("half"))
                return 0.5;
            if (!modifiers.includes("threshold"))
                return 0;
            let threshold = modifiers[modifiers.indexOf("threshold") + 1];
            if (threshold === "100")
                return 1;
            if (threshold === "0")
                return 0;
            return Number(`.${threshold}`);
        }
        function getLengthValue(rawValue) {
            let match = rawValue.match(/^(-?[0-9]+)(px|%)?$/);
            return match ? match[1] + (match[2] || "px") : void 0;
        }
        function getRootMargin(modifiers) {
            const key = "margin";
            const fallback = "0px 0px 0px 0px";
            const index = modifiers.indexOf(key);
            if (index === -1)
                return fallback;
            let values = [];
            for (let i = 1; i  v !== void 0);
            return values.length ? values.join(" ").trim() : fallback;
        }

        document.addEventListener("alpine:init", () => {
            window.Alpine.plugin(src_default);
        });
    })();


    for (const [selector, deferUntil] of Object.entries({".product-slider section[x-data]":"intersect",".product-info [x-data]":"intersect","#filters-content [x-data]":"intersect","#review_form":"intersect","section[x-data^=initRecentlyViewedProductsComponent]":"intersect","div[x-data^=initBundleOptions]":"intersect","#product_addtocart_form [x-data]":"intersect","#notice-cookie-block":"idle"})) {
        document.querySelectorAll(selector).forEach(el => el.setAttribute('x-defer', `${deferUntil}`));
    }


    (function () {
        "use strict";

        const hasAlpine = new Promise(resolve => {
            window.addEventListener('alpine:initialized', resolve, {once: true, passive: true});
        });

        const hasInteract = new Promise(resolve => {
            (events => {
                const onInteract = () => {
                    resolve();
                    events.forEach(type => window.removeEventListener(type, onInteract));
                }
                events.forEach(type => window.addEventListener(type, onInteract, {once: true, passive: true}))
            })(['touchstart', 'mouseover', 'wheel', 'scroll', 'keydown'])
        });

        const onIntersect = (el) => {
            return new Promise(resolve => {
                const observer = new IntersectionObserver(entries => {
                    for (const entry of entries) {
                        if (entry.isIntersecting) {
                            observer.disconnect()
                            resolve();
                        }
                    }
                }, {});
                observer.observe(el);
            });
        }

        function runComponent(el) {
            hasAlpine.then(() => {
                el.removeAttribute('x-ignore');
                queueMicrotask(() => Alpine.initTree(el));
            });
        }

        function initDeferredComponents() {
            document.querySelectorAll('[x-data][x-defer]').forEach(el => {
                el.setAttribute('x-ignore', '');
                const deferUntil = (el.getAttribute('x-defer') || '').trim();
                switch (deferUntil) {
                    case 'interact':
                        hasInteract.then(() => runComponent(el));
                        break;
                    case 'intersect':
                        onIntersect(el).then(() => runComponent(el))
                        break;
                    case 'idle':
                        window.requestIdleCallback
                            ? window.requestIdleCallback(() => runComponent(el), {timeout: 4000})
                            : setTimeout(() => runComponent(el), 4000);
                        break;
                    case 'eager':
                        runComponent(el);
                        break;
                    default:
                        if (deferUntil.startsWith('event:') && deferUntil.length > 6) {
                            window.addEventListener(deferUntil.substring(6), () => runComponent(el), {once: true, passive: true});
                        }
                }
            });
        }

        window.addEventListener('alpine:init', initDeferredComponents, {once: true, passive: true});
    })()


// x-teleport implementation
(_ => {
    document.addEventListener('DOMContentLoaded', event => {
        // x-teleport available only for template
        if (!Alpine.version.startsWith('2')) {
            return;
        }

        const teleportDirective = (el, expression) => {
            let target = document.querySelector(expression)
            let clone = el.content.cloneNode(true).firstElementChild;

            target.appendChild(clone);
            setTimeout(() => {
                target.querySelectorAll('[x-data]')
                    .forEach(el => Alpine.initializeComponent(el));
            }, 0)
        };

        document.querySelectorAll('template').forEach(el => {
            if (!el.hasAttribute('x-teleport')) {
                return;
            }

            teleportDirective(el, el.getAttribute('x-teleport'));
        });

        document.querySelectorAll('[x-data]').forEach(el => {
            if (el.hasAttribute('x-init')) {
                return;
            }

            setTimeout(() => {
                Alpine.initializeComponent(el);
            }, 0);
        });
    });
})()




    'use strict';
    function dispatchMessages(messages, hideAfter) {
        const messagesEvent = new CustomEvent("messages-loaded", {
            detail: {
                messages: messages,
                hideAfter: hideAfter
            }
        });
        window.dispatchEvent(messagesEvent);
    }

    if (typeof hyva === 'undefined' || (!hyva.getBrowserStorage || !hyva.getCookie || !hyva.setCookie)) {
        console.warn("Hyvä helpers are not loaded yet. Make sure they are included before this script");
    }

    (function( hyva, undefined ) {

        hyva.initFormKey = () => {
            const inputSelector = 'input[name="form_key"]',
                formKey = hyva.getFormKey();

            Array.from(document.querySelectorAll(inputSelector)).map(function (input) {
                input.value = formKey
            });
        }

        hyva.initMessages = () => {
            try {
                const messages = hyva.getCookie('mage-messages');
                window.mageMessages = messages ? JSON.parse(decodeURIComponent(messages).replace(/\+/g, ' ')) : [];

                dispatchMessages(window.mageMessages);

                                // empty `mage-messages` cookie
                const skipSetDomain = true;
                hyva.setCookie('mage-messages','', -1, skipSetDomain);

            } catch (error) {
                console.warn('Error parsing Cookie Messages:', error);
            }
        }

        window.addEventListener('DOMContentLoaded', hyva.initFormKey);
        hyva.alpineInitialized(hyva.initMessages)

    }( window.hyva = window.hyva || {} ));


    'use strict';
    {
        const private_content_key = 'mage-cache-storage';
        const private_content_expire_key = 'mage-cache-timeout';
        const private_content_version_key = 'private_content_version';
        const section_data_ids_key = 'section_data_ids';
        const mage_cache_session_id_key = 'mage-cache-sessid';
        const last_visited_store_key = 'last_visited_store';

        const ttl = 3600;

        if (typeof hyva === 'undefined' || (!hyva.getBrowserStorage || !hyva.getCookie || !hyva.setCookie)) {
            console.warn("Hyvä helpers are not loaded yet. Make sure they are included before this script");
        }

        function loadSectionData () {
            const browserStorage = hyva.getBrowserStorage();
            if (!browserStorage) {
                typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                    [{
                        type: "warning",
                        text: "Please enable LocalStorage in your browser."
                    }]
                );
                return;
            }
            try {
                let isInvalid = false;

                if (hyva.getCookie(last_visited_store_key) !== CURRENT_STORE_CODE) {
                    isInvalid = true;
                }
                hyva.setCookie(last_visited_store_key, CURRENT_STORE_CODE, false, false);

                if (!hyva.getCookie(mage_cache_session_id_key)) {
                    isInvalid = true;
                    browserStorage.removeItem(private_content_key);
                    const skipSetDomain = true;
                    const days = false;
                    hyva.setCookie(mage_cache_session_id_key, true, days, skipSetDomain)
                }

                const cookieVersion = hyva.getCookie(private_content_version_key);
                const storageVersion = browserStorage.getItem(private_content_version_key);

                if (cookieVersion && !storageVersion || cookieVersion !== storageVersion) {
                    isInvalid = true;
                }

                const privateContentExpires = browserStorage.getItem(private_content_expire_key);
                if (privateContentExpires && new Date(privateContentExpires)  response.ok && response.json())
                .then(
                    data => {
                        if (data) {
                            try {
                                const browserStorage = hyva.getBrowserStorage();

                                // merge new data preserving non-invalidated sections
                                const oldSectionData = JSON.parse(browserStorage.getItem(private_content_key) || '{}') || {};

                                if ((! data.cart || ! data.cart.cartId) && oldSectionData['checkout-data']) {
                                    delete oldSectionData['checkout-data'];
                                }
                                const newSectionData = Object.assign(oldSectionData, data);

                                dispatchPrivateContent(newSectionData);

                                // don't persist messages, they've been dispatched already
                                if (newSectionData.messages && newSectionData.messages.messages ) {
                                    newSectionData.messages.messages = [];
                                }

                                browserStorage.setItem(private_content_key, JSON.stringify(newSectionData));

                                const expiresAt = new Date(Date.now() + (ttl * 1000)).toISOString();
                                browserStorage.setItem(private_content_expire_key, expiresAt);

                                const newCookieVersion = hyva.getCookie(private_content_version_key);
                                browserStorage.setItem(private_content_version_key, newCookieVersion);

                                // We don't need the section_data_ids in Hyvä, but we store them for compatibility
                                // with Luma Fallback. Otherwise, not all sections are loaded in Luma Checkout
                                hyva.setCookie(
                                    section_data_ids_key,
                                    JSON.stringify(
                                        Object.keys(data).reduce((sectionDataIds, sectionKey) => {
                                            sectionDataIds[sectionKey] = data[sectionKey]['data_id'];
                                            return sectionDataIds;
                                        }, {})
                                    ),
                                    false,
                                    true
                                );
                            } catch (error) {
                                console.warn("Couldn't store privateContent", error);
                            }
                        }
                    }
                );
        }
    }


    (() => {
        document.addEventListener('submit', event => event.target.action = event.target.action.replace('%25uenc%25', hyva.getUenc()));
    })()


    (events => {
        const dispatchUserInteractionEvent = () => {
            events.forEach(type => window.removeEventListener(type, dispatchUserInteractionEvent))
            window.dispatchEvent(new Event('init-external-scripts'))
        };
        events.forEach(type => window.addEventListener(type, dispatchUserInteractionEvent, {once: true, passive: true}))
    })(['touchstart', 'mouseover', 'wheel', 'scroll', 'keydown'])



    'use strict';

    function initShippingEstimation() {
        return {
            showEstimateShipping: false,
            cart: false,
            cartIsVirtual: 0,
            customer: false,
            isCustomerLoggedIn: 0,
            availableShippingMethods: [],
            dispatch: null,
            isCartDeliveryLoading: false,
            shippingAmount: false,
            cartData: {
                address: {
                    countryId: 'US',
                    regionId: '0',
                    postcode: '' || localStorage.getItem(oms_client_postcode_key)
                },
                cartVersion: Math.floor(Date.now() / 1000),
                rates: [],
                shippingCarrierCode: null,
                shippingMethodCode: null,
                is_check_region: 1,
            },
            checkoutData: {
                shippingAddressFromData: {
                    country_id: 'US',
                    region: '0',
                    postcode: ''
                }
            },
            directoryData: false,
            shippingMethod: false,
            abortShippingController: null,
            init($dispatch) {
                if ($dispatch) {
                    this.setShippingMethod();
                    this.dispatch = $dispatch;
                    // this.fetchTotals();
                }
            },
            setShippingMethod(method) {
                const selectedShippingMethod = method || window.checkoutConfig?.selectedShippingMethod;

                if (selectedShippingMethod) {
                    this.shippingMethod = `${selectedShippingMethod.carrier_code}_${selectedShippingMethod.method_code}`
                    this.shippingAmount = hyva.formatPrice(selectedShippingMethod.base_amount);
                }
            },
            triggerEstimatedShippingCalculation() {
                const form = document.querySelector('form#shipping'),
                    shippingPostcode = form?.querySelector('#shipping-postcode');

                this.updateShippingMethodEstimations();

                if (shippingPostcode) {
                    let cartDataPostcode = this.cartData?.address?.postcode || '';

                    shippingPostcode.value = cartDataPostcode;

                    if (cartDataPostcode) {
                        shippingPostcode.dispatchEvent(new Event('input'));
                    }
                }
            },
            shippingEstimationValidate(skipValidation) {
                if (skipValidation) {
                    this.updateShippingMethodEstimations();
                } else {
                    this.validate().then(() => {
                        this.updateShippingMethodEstimations();
                    }).catch((invalid) => {
                        if (invalid.length > 0) {
                            invalid[0].focus();
                        }
                    });
                }
            },
            async updateShippingMethodEstimations() {
                let cartId = this.cart.cartId || this.getCartId();
                // set Region if it is required
                this.resetAddressDataRegion();
                await this.setRegionToAddressData();
                if (this.abortShippingController) {
                    this.abortShippingController.abort();
                }

                this.isCartDeliveryLoading = true;

                if (this.dispatch) {
                    this.dispatch('update-shipping-method-start', {});
                }

                const guestUserPath = cartId ? '/V1/guest-carts/' + cartId + '/estimate-shipping-methods' : '',
                    loggedUserPath = '/V1/carts/mine/estimate-shipping-methods',
                    path = this.customer && this.customer.fullname ? loggedUserPath : guestUserPath;

                // ensure a new controller is used for the new request
                this.abortShippingController = new AbortController();

                if (path) {
                    fetch(BASE_URL + 'rest/' + CURRENT_STORE_CODE + path + '?form_key=' + hyva.getFormKey(), {
                        signal: this.abortShippingController.signal,
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                            address: this.cartData.address
                        })
                    })
                        .then(response => response.json())
                        .then(result => {
                            this.availableShippingMethods = result;
                            this.setShippingMethod(result[0]);

                            if (!this.availableShippingMethods.find(method => {
                                return method.carrier_code + '_' + method.method_code === this.shippingMethod
                            })) {
                                if (this.dispatch) {
                                    this.dispatch('update-shipping-method', {method: false});
                                }
                                this.shippingMethod = false;
                            }
                        })
                        .catch(this.displayError)
                        .finally(() => {
                            if (this.dispatch) {
                                this.dispatch('update-shipping-method-end', {});
                            }
                            this.fetchTotals();
                            this.isCartDeliveryLoading = false;
                        });
                }
            },
            getEstimatedShippingRateCarriers() {
                return Array.from(new Set(this.availableShippingMethods.map(rate => rate.carrier_title)));
            },
            getRatesForCarrier(carrierTitle) {
                return this.availableShippingMethods.filter(rate => rate.carrier_title === carrierTitle);
            },
            async updateShippingMethod() {
                if (this.dispatch) {
                    this.dispatch('update-shipping-method', {method: this.shippingMethod});
                }
                await this.fetchTotals();
                this.showEstimateShipping = false;
            },
            abortTotalsController: null,
            async fetchTotals() {
                let cartId = this.cart.cartId || this.getCartId();

                if (this.abortTotalsController) {
                    this.abortTotalsController.abort();
                }

                let carrierCode = null;
                let methodCode = null;

                // we don't need to call fetch total without shipping method
                if (!this.shippingMethod) {
                    return;
                }

                window.dispatchEvent(new Event('reload-customer-section-data'));
                // set Region if it is required
                await this.setRegionToAddressData();
                const splitShippingMethod = this.shippingMethod.split('_');
                carrierCode = splitShippingMethod[0];
                // methodCode might contain multiple underscores
                methodCode = this.shippingMethod.replace(carrierCode + '_', '') || null;

                const guestUserPath = cartId ? '/V1/guest-carts/' + cartId + '/totals-information' : '',
                    loggedUserPath = '/V1/carts/mine/totals-information',
                    path = this.customer && this.customer.fullname ? loggedUserPath : guestUserPath;

                // ensure a new controller is used for the new request
                this.abortTotalsController = new AbortController();

                if (path) {
                    fetch(BASE_URL + 'rest/' + CURRENT_STORE_CODE + path + '?form_key=' + hyva.getFormKey(), {
                        signal: this.abortTotalsController.signal,
                        method: 'post',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        },
                        body: JSON.stringify({
                                                 addressInformation: {
                                                     shipping_carrier_code: carrierCode,
                                                     shipping_method_code: methodCode,
                                                     address: this.cartData.address
                                                 }
                                             })
                    })
                        .then(response => response.json())
                        .then(result => {
                                                        if (window.checkoutConfig && window.checkoutConfig.totalsData) {
                                const checkoutConfigTotals = window.checkoutConfig.totalsData.total_segments || [];
                                result?.total_segments?.forEach(total => {
                                    const totalFromConfig = checkoutConfigTotals?.find(fromConfig => fromConfig?.code === total?.code)
                                    totalFromConfig && (total.title = totalFromConfig?.title);
                                })
                            }

                            this.shippingAmount = hyva.formatPrice(result.shipping_amount);
                            this.setDeliveryData(result.items)

                            return result;
                        })
                        .then(result => {
                            if (this.dispatch) {
                                this.dispatch('update-totals', {data: result});
                            }
                        })
                        .catch(this.displayError)
                }
            },
            setDeliveryData(items) {
                const cartItems = items || window.checkoutConfig?.totalsData.items;

                cartItems?.forEach((cartItem) => {
                    let maoDeliveryDateEls = document.getElementsByClassName(
                            'mao-delivery-date-' + cartItem?.item_id
                        ),
                        maoInStockEls = document.getElementsByClassName(
                            'mao-in-stock-status-' + cartItem?.item_id
                        ),
                        {mao_delivery_date, is_show_in_stock} = cartItem?.extension_attributes || '';
                    const deliveryLabel = 'Estimated delivery is: ';

                    if (typeof mao_delivery_date !== 'undefined' && maoDeliveryDateEls?.length > 0) {
                        let i;
                        for (i = 0; i ' + this.dateFormatting(mao_delivery_date.split(',')[0]) + '';
                                maoDeliveryDateEl.style.display = 'block';
                            }
                            let customItemShippingMessageEl = maoDeliveryDateEls[i].querySelector('.custom-item-shipping-message');
                            if (customItemShippingMessageEl) {
                                customItemShippingMessageEl.style.display = 'none';
                            }
                        }
                    }

                    if (typeof is_show_in_stock !== 'undefined' && maoInStockEls?.length > 0) {
                        let i;
                        for (i = 0; i  countryKey !== 'data_id')
                    .sort((a, b) => {
                        if (this.directoryData[a].name  this.directoryData[b].name) {
                            return 1
                        }
                        return 0;
                    }).map(countryId => {
                        return {
                            id: countryId,
                            name: this.directoryData[countryId].name || countryId
                        }
                    });
            },
            getAvailableRegions() {
                const countryId = this.cartData.address.countryId;

                if (
                    countryId &&
                    this.directoryData[countryId] &&
                    this.directoryData[countryId].regions
                ) {
                    return Object.keys(this.directoryData[countryId].regions).map(regionId => {
                        return {
                            id: regionId,
                            code: this.directoryData[countryId].regions[regionId].code,
                            name: this.directoryData[countryId].regions[regionId].name
                        }
                    });
                }
                return [];
            },
            hasAvailableRegions() {
                return this.cartData.address && this.cartData.address.countryId && this.getAvailableRegions().length
            },
            displayError(error) {
                if (error?.name === 'AbortError') {
                    console.log('Fetch aborted');
                } else {
                    if (typeof error !== 'undefined') {
                        console.error(error);
                    }
                    typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                        [{
                            type: "error",
                            text: "Something\u0020went\u0020wrong.\u0020Please\u0020try\u0020again."
                        }], 10000
                    );
                }
            },
            dateFormatting(date) {
                const number = date.split(' ')[1];
                const englishOrdinalRules = new Intl.PluralRules('en', {type: 'ordinal'});
                const category = englishOrdinalRules.select(number);

                switch (category) {
                    case 'one': {
                        return `${date}st`
                    }

                    case 'two': {
                        return `${date}nd`
                    }

                    case 'few': {
                        return `${date}rd`
                    }

                    default: {
                        return `${date}th`
                    }
                }
            },
            getCartId() {
                const browserStorage = window.hyva.getBrowserStorage(),
                    sectionData = JSON.parse(browserStorage.getItem('mage-cache-storage'));

                return sectionData?.cart?.cartId || '';
            },

            async setRegionToAddressData() {
                const browserStorage = hyva.getBrowserStorage(),
                    sectionData = JSON.parse(browserStorage.getItem('mage-cache-storage'));
                this.cartData.is_check_region = sectionData['cart']?.is_check_region || 0;

                if (
                    (this.cartData.is_check_region || this.cart.is_check_region)
                    && (this.cartData.address.region === '' || this.cartData.address.region === '0')) {
                    const region = await window.fetchMapBoxRegionId(this.cartData.address);
                    this.cartData.address.region = region || '';
                }
            },

            resetAddressDataRegion() {
                this.cartData.address.region = '';
            },
            updatingShippingMethods() {
                this.shippingEstimationValidate(true);
            }
        }
    }



    'use strict';

    const oms_client_postcode_key = 'oms_client_postcode';
    const access_token = 'sk.eyJ1IjoibGlwcGVydGNvbXBvbmVudHMiLCJhIjoiY2x4eDlmNmxkMmJnZDJucHhxMjFna3lkcSJ9.Tg2ImClpxFFf1KzCcW4TNQ';

    /**
     * Set postcode to local storage entry
     * @param event
     */
    function setPostcodeToStorage(event) {
        if (window.mapboxExecuted) {
            return false;
        }

        const sectionData = event.detail.data;

        if (sectionData.customer.postcode && !localStorage.getItem(oms_client_postcode_key)) {
            localStorage.setItem(oms_client_postcode_key, sectionData.customer.postcode);
        } else {
            setPostcodePerGeolocation();
        }

        window.mapboxExecuted = true;
    }

    /**
     * Get current browser location data
     */
    function setPostcodePerGeolocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(getPositionSuccess, getPositionError);
        } else {
            console.warn('Geolocation is not supported by this browser.');
        }
    }

    /**
     * Method to be executed if Navigator Geolocation returns success
     * @param position
     */
    function getPositionSuccess(position) {
        fetchMapboxGeocoding(position.coords.longitude, position.coords.latitude);
    }

    /**
     * Method to be executed if Navigator Geolocation returns error
     * @param error
     */
    function getPositionError(error) {
        console.warn('ERROR(' + error.code + '): ' + error.message);
    }

    /**
     * Fetch data from Mapbox API
     * @param longitude
     * @param latitude
     */
    function fetchMapboxGeocoding(longitude, latitude) {
        const endpointUrl = `https://api.mapbox.com/search/geocode/v6/reverse` +
            `?longitude=${longitude}&latitude=${latitude}&access_token=${access_token}`;

        fetch(endpointUrl)
            .then(response => response.json())
            .then(data => {
                if (typeof data === 'undefined') {
                    console.warn('Something\u0020went\u0020wrong');
                } else if (typeof data.message !== 'undefined') {
                    console.warn(data.message);
                } else {
                    if (!localStorage.getItem(oms_client_postcode_key)) {
                        const { name } = data?.features[0]?.properties?.context?.postcode || '';
                        localStorage.setItem(oms_client_postcode_key, name);
                    }
                }

                const mapBoxAfterEvent = new CustomEvent('mapbox-response-execute-after');
                window.dispatchEvent(mapBoxAfterEvent);
            })
            .catch(error => {
                console.error(error);
            });
    }

    function fetchMapBoxRegionId({postcode, countryId}) {
        const regionKey = `mapbox_region_${postcode}`;

        if (!(postcode && countryId)) {
            return false;
        }

        const browserStorage = hyva.getBrowserStorage();
        let region = browserStorage.getItem(regionKey);

        if (!region) {
            const endpointUrl = `https://api.mapbox.com/search/searchbox/v1/forward?q=${postcode}&limit=1&country=${countryId}&access_token=${access_token}`;

            return fetch(endpointUrl)
                .then(response => response.json())
                .then(data => {
                    region = data?.features[0]?.properties?.context?.region?.region_code || '';

                    if (region) {
                        browserStorage.setItem(regionKey, region);
                    }

                    return region;
                })
        }

        return region;
    }

    window.addEventListener('private-content-loaded', setPostcodeToStorage);


    
    
        (function initGoogleGA(){
            const config = {"isCookieRestrictionModeEnabled":false,"currentWebsite":1,"cookieName":"user_allowed_save_cookie","pageTrackingData":{"optPageUrl":"","measurementId":"G-E9MM7QZV1F"},"ordersTrackingData":[],"googleAnalyticsAvailable":true};
            const anonymize_ip = true;

            let allowServices = false,
                allowedCookies,
                allowedWebsites,
                measurementId;

            if (typeof hyva === 'undefined' || (!hyva.getBrowserStorage || !hyva.getCookie || !hyva.setCookie)) {
                console.warn("Hyvä helpers are not loaded yet. Make sure they are included before this script");
            }
            if (config.isCookieRestrictionModeEnabled && typeof hyva !== 'undefined') {
                allowedCookies = hyva.getCookie(config.cookieName);

                if (allowedCookies !== null) {
                    allowedWebsites = JSON.parse(unescape(allowedCookies));

                    if (allowedWebsites[config.currentWebsite] === 1) {
                        allowServices = true;
                    }
                } else {
                    window.addEventListener('user-allowed-save-cookie', initGoogleGA, { once: true, passive: true });
                }
            } else {
                allowServices = true;
            }

            if (allowServices) {
                measurementId = config.pageTrackingData.measurementId;
                if (!window.gtag) {
                                        window.addEventListener('init-external-scripts', () => {
                                            const gtagScript = document.createElement('script');
                        gtagScript.type = 'text/javascript';
                        gtagScript.async = true;
                        gtagScript.src = 'https://www.googletagmanager.com/gtag/js?id=' + measurementId;
                        document.head.insertBefore(gtagScript, document.head.children[0]);
                                        });
                    
                    window.dataLayer = window.dataLayer || [];
                    window.gtag = function(){dataLayer.push(arguments)};
                    gtag('js', new Date());
                    gtag('set', 'developer_id.dYjhlMD', true);
                }

                gtag('config', measurementId, { 'anonymize_ip': anonymize_ip });
                // Purchase Event
                if (config.ordersTrackingData.hasOwnProperty('currency')) {
                    let purchaseObject = config.ordersTrackingData.orders[0];
                    purchaseObject['items'] = config.ordersTrackingData.products;
                    gtag('event', 'purchase', purchaseObject);
                }
            }
        }())
    
    


    'use strict';

    function backInStockListAlert() {
        return {
            customerEmail: '',
            send(id) {

                                const formData = new FormData();

                formData.append('product_id', id);
                formData.append('form_key', window.hyva.getFormKey());
                formData.append('store_id', 1);
                formData.append('website_id', 1);

                if (this.customerEmail === '') {
                    const CustomerData = JSON.parse(hyva.getBrowserStorage().getItem('mage-cache-storage'));
                    this.customerEmail = CustomerData.customer.email;
                }
                formData.append('email', this.customerEmail);

                fetch('https://www.lippert.com/alert/index/stock/', {
                    method: 'POST',
                    body: formData
                }).then(response => response.json())
                    .then(data => {
                        typeof window.dispatchMessages !== "undefined" && window.dispatchMessages(
                            [{
                                type: data.success ? "success" : "warning",
                                text: data.message
                            }], 5000
                        );
                    })
            },

            receiveCustomerData(data) {
                if (data?.customer) {
                    this.customerEmail = data.customer.email;
                }
            }
        }
    }


    function initConfigurableOptions(productId, optionConfig) {

        function findPathParam(key) {
                        const baseUrl = (BASE_URL.substring(0, 2) === '//' ? 'http:' : '') + BASE_URL;
            const baseUrlParts = (new URL(baseUrl)).pathname.replace(/\/$/, '').split('/');
            const pathParts = window.location.pathname.split('/').slice(baseUrlParts.length + 3);
            for (let i = 0; i  i) {
                    return pathParts[i + 1];
                }
            }
        }

        return {
            optionConfig,
            productId,
            itemId: (new URLSearchParams(window.location.search)).get('id') || findPathParam('id'),
            allowedAttributeOptions: [],
            selectedValues: [],
            init() {
                this.findAllowedAttributeOptions();
                this.$nextTick(() => {
                    if (typeof this.optionConfig.defaultValues === 'object') {
                        for (const [attributeId, value] of Object.entries(this.optionConfig.defaultValues)) {
                            this.changeOption(attributeId, value + '');
                        }
                    }

                    this.setSelectedOptions();
                });
            },
            productIndex: 0,
            productIndexForPrice: 0,
            setSelectedOptions() {
                if (document.body.classList.contains('catalog-product-view')) {
                    const attrs = JSON.parse(window.sessionStorage.getItem('selected_attributes'));

                    if (attrs && attrs[productId]) {
                        attrs[productId].map(attr => {
                            for (const [attributeId, value] of Object.entries(attr)) {
                                this.changeOption(attributeId, value + '');
                            }
                        })
                    }

                    window.sessionStorage.removeItem('selected_attributes')
                }
            },
            optionIsActive(attributeId, optionId) {
                                return !!this.getAllowedAttributeOptions(attributeId).find(
                    option => option.id === optionId
                )
            },
            optionIsEnabled(attributeId, optionId) {
                                for (const productId in this.optionConfig.index) {
                    if (this.optionConfig.index[productId][attributeId] === optionId) {
                        return true;
                    }
                }
                return false;
            },
            findSimpleIndex() {
                                this.productIndex = this.calculateSimpleIndexForPartialSelection(this.selectedValues);
            },
            findSimpleIndexSku() {
                this.productIndexSku = this.calculateSimpleIndexSkuForPartialSelection(this.selectedValues);
            },
            calculateSimpleIndexForPartialSelection(selectedValues) {
                if (selectedValues.length === 0) return 0;
                let productIndexIds = Object.keys(this.optionConfig.index);
                Object.keys(this.optionConfig.attributes).forEach((attribute) => {
                                        const productsWithAttributeMatch = selectedValues[attribute]
                        ? productIndexIds.filter((productIndex) => {
                            return this.optionConfig.index[productIndex][attribute] === this.selectedValues[attribute]
                        })
                        : [];

                                        productIndexIds = productsWithAttributeMatch.length ? productsWithAttributeMatch : productIndexIds
                })
                return productIndexIds[0];
            },
            calculateSimpleIndexSkuForPartialSelection(selectedValues) {
                if (selectedValues.length === 0) return '';
                let productIndexSkus = Object.keys(this.optionConfig.indexSku);
                Object.keys(this.optionConfig.attributes).forEach((attribute) => {
                    const productsWithAttributeMatch = selectedValues[attribute]
                        ? productIndexSkus.filter((productIndexSku) => {
                            return this.optionConfig.indexSku[productIndexSku][attribute] === this.selectedValues[attribute]
                        })
                        : [];

                                        productIndexSkus = productsWithAttributeMatch.length ? productsWithAttributeMatch : productIndexSkus
                })
                return productIndexSkus[0];
            },
            calculateSimpleIndexForFullSelection(selectedValues) {
                const productIndexes = this.optionConfig.index;
                return Object.keys(productIndexes).find(productIndex => {
                    const productCandidateOptions = productIndexes[productIndex];

                    for (const productOption in productCandidateOptions) {
                        if (
                            ! selectedValues[productOption] ||
                            selectedValues[productOption] !== productCandidateOptions[productOption]
                        ) {
                            return false;
                        }
                    }
                    return productIndex;
                });
            },
            productIndex: 0,
            productIndexSku: '',
            findAllowedAttributeOptions() {
                                this.allowedAttributeOptions = this.calculateAllowedAttributeOptions(this.selectedValues);
            },
            calculateAllowedAttributeOptions(selectedValues) {
                const allAttributes = this.optionConfig.attributes;
                const allAttributesSorted = Object.values(allAttributes).sort((a,b) => {
                    return a.position - b.position
                });

                const selectionWithoutAttr = attrId => {
                                        return Object.keys(selectedValues).reduce((acc, id) => {
                        if (id !== attrId) acc[id] = selectedValues[id];
                        return acc;
                    }, {})
                }

                const newAllowedAttributeOptions = [];

                allAttributesSorted.forEach(attribute => {
                    const availableIndexes = this.calculateAvailableProductIndexes(selectionWithoutAttr(attribute.id));
                    newAllowedAttributeOptions[attribute.id] = allAttributes[attribute.id].options.filter(option => {
                        return !!option.products.find(product => {
                            return availableIndexes.includes(product);
                        })
                    });
                });
                return newAllowedAttributeOptions;
            },
            calculateAvailableProductIndexes(selectedOptions) {
                if (Object.keys(selectedOptions).length === 0) {
                                        if (Object.values(this.optionConfig.salable || {}).length) {
                                                return [].concat.apply([], [].concat.apply([], Object.values(this.optionConfig.salable).map(Object.values))).filter((x, i, a) => a.indexOf(x) === i)
                    }
                                        return Object.keys(this.optionConfig.index);
                }

                                const selectedIds = Object.keys(selectedOptions);
                if (Object.values(this.optionConfig.salable || {}).length) {
                                        const selectedOptionIndexes = selectedIds.map(attrId => {
                        const optionValue = selectedOptions[attrId];
                        return this.optionConfig.salable[attrId] && this.optionConfig.salable[attrId][optionValue] || []
                    })
                                        return selectedOptionIndexes.reduce((acc, optionIndexes) => {
                        return acc.filter(index => optionIndexes.includes(index));
                    });
                } else {
                                        const productIndexes = this.optionConfig.index;
                    return Object.keys(productIndexes).filter(index => {
                        return selectedIds.find(attrId => productIndexes[index][attrId] === `${selectedOptions[attrId]}`)
                    });
                }
            },
            findAttributeByOptionId(optionId) {
                for (const attributeId in this.optionConfig.attributes) {
                    const attributeOptions = this.optionConfig.attributes[attributeId].options || [];
                    if (attributeOptions.find(option => option.id === optionId)) {
                        return attributeId;
                    }
                }
            },
            getAllowedAttributeOptions(attributeId) {
                return this.allowedAttributeOptions[attributeId] || []
            },
            getAllAttributeOptions(attributeId) {
                return (
                    this.optionConfig.attributes[attributeId] &&
                    this.optionConfig.attributes[attributeId].options
                ) || []
            },
            getProductIdsForOption(option) {
                const attributeId = this.findAttributeByOptionId(option.id);
                const allOptions = this.optionConfig.attributes[attributeId];
                const opt = (allOptions && allOptions.options || []).find(o => o.id === option.id);
                return opt && opt.products
                    ? opt.products
                    : [];
            },
            findProductIdsForPartialSelection(optionSelection) {
                const candidateProducts = Object.values(optionSelection).reduce((candidates, optionId) => {
                    const newCandidates = this.getProductIdsForOption({id: optionId});
                    return candidates === null
                        ? newCandidates
                        : candidates.filter(productId => newCandidates.includes(productId));
                }, null);
                return candidateProducts || [];
            },
            findCheapestProductForPartialSelection(optionSelection) {
                const candidateProducts = this.findProductIdsForPartialSelection(optionSelection);
                return candidateProducts.reduce((cheapest, simpleIdx) => {
                    // in the first iteration we start with simpleIdx as the currently cheapest product
                    if (! this.optionConfig.optionPrices[cheapest]) return simpleIdx;
                    const knownCheapestPrice = this.optionConfig.optionPrices[cheapest].finalPrice.amount;
                    return knownCheapestPrice > this.optionConfig.optionPrices[simpleIdx].finalPrice.amount
                        ? simpleIdx
                        : cheapest;
                }, 0)
            },
            findProductIdToUseForOptionPrice(option) {
                // try to find a product for a complete selection
                const attributeId = this.findAttributeByOptionId(option.id);
                const optionSelection = Object.assign({}, this.selectedValues, {[attributeId]: option.id});
                const matchingSimpleIndex = this.calculateSimpleIndexForFullSelection(optionSelection);
                // if there is no complete selection, use the cheapest product for the option
                return matchingSimpleIndex || this.findCheapestProductForPartialSelection(optionSelection);
            },
            getAttributeOptionLabel(option) {
                const optionProduct = this.findProductIdToUseForOptionPrice(option);
                if ((! optionProduct) || (optionProduct === this.productIndex)) {
                    return option.label;
                }

                const currentPrice = this.getOptionPriceAdjustmentBasePrice();

                if (this.optionConfig.optionPrices[optionProduct]) {
                    const optionPrice = this.optionConfig.optionPrices[optionProduct].finalPrice.amount;
                    if (optionPrice !== currentPrice){
                        return option.label + ' ' + hyva.formatPrice(optionPrice - currentPrice, true);
                    }
                }
                return option.label;
            },
            getOptionPriceAdjustmentBasePrice() {
                if (this.optionConfig.optionPrices[this.productIndex]) {
                    return this.optionConfig.optionPrices[this.productIndex].finalPrice.amount
                }
                const cheapestForSelection = this.findCheapestProductForPartialSelection(this.selectedValues);
                return this.optionConfig.optionPrices[cheapestForSelection]
                    ? this.optionConfig.optionPrices[cheapestForSelection].finalPrice.amount
                    : this.optionConfig.prices.finalPrice.amount; // default price if no option selection
            },
            changeOption(attributeId, value) {
                if (value === '') {
                                        this.selectedValues = this.selectedValues.reduce((newSelection, val, attr) => {
                        if (attr !== attributeId) {
                            newSelection[attr] = val;
                        }
                        return newSelection;
                    }, []);
                } else if (value && this.getAllowedAttributeOptions(attributeId).find(option => option.id === value)) {
                                        this.selectedValues[attributeId] = value;
                }
                this.findSimpleIndex();
                this.findSimpleIndexSku();
                this.findAllowedAttributeOptions();
                this.updatePrices();
                this.updateGallery();
                window.dispatchEvent(
                    new CustomEvent(
                        'configurable-selection-changed',
                        {
                            detail: {
                                productId: this.productId,
                                optionId: attributeId,
                                value: value,
                                productIndex: this.productIndex,
                                selectedValues: this.selectedValues,
                                candidates: this.findProductIdsForPartialSelection(this.selectedValues),
                                productSku: this.productIndexSku
                            }
                        }
                    )
                );
            },
            calculateIsMinimalPrice() {
                return (
                    this.selectedValues.filter(value => !!value).length  {
                    return x.position === y.position ? 0 : (parseInt(x.position) > parseInt(y.position) ? 1 : -1)
                });
            },
            onGetCartData(data) {
                            },
            preselectCartItems(data) {
                // pre-select options based on cart data for current (quote) itemId
                const cart = data && data.cart;
                if (cart && cart.items) {
                    const cartItem = cart.items.find((item) => {
                        return (
                            item.item_id === this.itemId
                            && item.product_id === this.productId
                        )
                    });
                    if (cartItem && cartItem.options && cartItem.options.length) {
                        cartItem.options.map(option => {
                            this.changeOption(option.option_id, option.option_value);
                        })
                    }
                }
            },
            preselectQuerystringItems() {
                // pre-select option like ?size=167
                const urlQueryParams = new URLSearchParams(window.location.search.replace('?',''));
                this.preselectItemsBasedOnLocation(attribute => urlQueryParams.get(attribute.code));
            },
            preselectLocationHashItems() {
                // pre-select option like #144=167
                const urlHashParams = new URLSearchParams(window.location.hash.replace('#',''));
                this.preselectItemsBasedOnLocation(attribute => urlHashParams.get(attribute.id));
            },
            preselectItemsBasedOnLocation(getLocationValue) {
                Object.values(this.optionConfig.attributes).map(attribute => {
                    this.changeOption(attribute.id, getLocationValue(attribute))
                });
            }
        }
    }



    function initSwatchOptions(swatchConfig) {
        return {
            swatchConfig,
            getAttributeSwatchData(attributeId) {
                const swatchConfig = Object.assign({}, this.swatchConfig[attributeId]);
                swatchConfig['details'] = JSON.parse(swatchConfig['additional_data']);

                return swatchConfig;
            },
            getAllAttributeOptions(attributeId) {
                return (
                    this.optionConfig.attributes[attributeId] &&
                    this.optionConfig.attributes[attributeId].options
                ) || []
            },
            optionIsActive(attributeId, optionId) {
                // return true if a product with this option is in stock
                return !!this.getAllowedAttributeOptions(attributeId).find(
                    option => option.id === optionId
                )
            },
            optionIsEnabled(attributeId, optionId) {
                // return true if a product with this option is enabled
                for (const productId in this.optionConfig.index) {
                    if (this.optionConfig.index[productId][attributeId] === optionId) {
                        return true;
                    }
                }
                return false;
            },
            optionIsSelected(attributeId, itemId) {
                const isActive = itemId === attributeId;

                if (isActive) {
                    this.$nextTick(() => window.dispatchEvent(new CustomEvent('swatch-preselect-option')));
                }

                return isActive;
            },
            mapSwatchTypeNumberToTypeCode(typeNumber) {
                switch ("" + typeNumber) {
                    case "1":
                        return "color"
                    case "2":
                        return "image"
                    case "3":
                        return "empty"
                    case "0":
                    default:
                        return "text"
                }
            },
            getTypeOfFirstOption(attributeId) {
                for (const optionId in this.swatchConfig[attributeId]) {
                    const option = this.swatchConfig[attributeId][optionId];
                    if (typeof option.type !== 'undefined') {
                        return this.mapSwatchTypeNumberToTypeCode(option.type);
                    }
                }
            },
            getVisualSwatchType(attributeId, targetOptionId) {
                // If a type configuration is present for the given option id, use it
                const config = this.swatchConfig[attributeId];
                if (config[targetOptionId] && typeof config[targetOptionId].type !== 'undefined') {
                    return this.mapSwatchTypeNumberToTypeCode(config[targetOptionId].type);
                }

                // Otherwise - if no config is present for the target option - use the type of the first option
                // with a type property from the attribute, thus assuming its the same type as the target option.
                // (This edge case condition can occur on single swatch products if some options are not salable)
                return this.getTypeOfFirstOption(attributeId);
            },
            getSwatchType(attributeId, optionId) {
                // Deserialize the attribute details the first time they are used
                if (this.swatchConfig[attributeId] && ! this.swatchConfig[attributeId].details) {
                    this.swatchConfig[attributeId] = this.getAttributeSwatchData(attributeId);
                }
                const type =  this.swatchConfig[attributeId] &&
                    this.swatchConfig[attributeId].details &&
                    this.swatchConfig[attributeId].details.swatch_input_type ||
                    "empty";
                return type === 'visual' ? this.getVisualSwatchType(attributeId, optionId) : type;
            },
            isTextSwatch(attributeId, optionId) {
                return this.getSwatchType(attributeId, optionId) === 'text';
            },
            isVisualSwatch(attributeId, optionId) {
                const type = this.getSwatchType(attributeId, optionId);

                return ['image', 'color'].includes(type);
            },
            getSwatchBackgroundStyle(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                const type = this.getSwatchType(attributeId, optionId);

                if (type === "color") {
                        return 'background-color:' + config.value;
                } else if (type === "image") {
                        return "background: #ffffff url('" + config.value + "') no-repeat center";
                } else {
                    return '';
                }
            },
            getSwatchText(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                return config.label || config.value || this.getOptionLabelFromOptionConfig(attributeId, optionId);
            },
            getSelectedSwatchText (id, optionId) {
                return this.getSwatchText(id, optionId) ?
                    this.getSwatchText(id, optionId) :
                    'Select Option';
            },
            getOptionLabelFromOptionConfig(attributeId, optionId) {
                // Fallback if no value is present in swatchConfig data
                // Reference issue https://gitlab.hyva.io/hyva-themes/magento2-default-theme/-/issues/190
                const option = this.getAllAttributeOptions(attributeId).filter(option => option.id === optionId);
                return option && option[0] && option[0].label ||'';
            },
            getSwatchConfig(attributeId, optionId) {
                return this.swatchConfig[attributeId] && this.swatchConfig[attributeId][optionId]
                    ? this.swatchConfig[attributeId][optionId]
                    : false;
            },
            activeTooltipItem: false,
            tooltipPositionElement: false,
            isTooltipVisible() {
                return this.activeTooltipItem &&
                    this.getSwatchConfig(
                        this.activeTooltipItem.attribute,
                        this.activeTooltipItem.item
                    );
            },
            getTooltipImageStyle(attributeId, optionId) {
                const config = this.getSwatchConfig(attributeId, optionId);
                const type = this.getSwatchType(attributeId, optionId);

                if (type === "color") {
                    return 'background-color:' + config.value + '; width: 110px; height: 90px;';
                } else if (type === "image") {
                    return "background: #ffffff url('" + config.thumb +
                        "') center center no-repeat; width: 110px; height: 90px;";
                } else {
                    return 'display:none';
                }
            },
            getTooltipPosition() {
                return this.tooltipPositionElement ?
                    `top: ${this.tooltipPositionElement.offsetTop}px;` +
                    `left: ${
                        this.tooltipPositionElement.offsetLeft - (
                            this.tooltipPositionElement.closest('.snap') &&
                            this.tooltipPositionElement.closest('.snap').scrollLeft ||
                            0
                        )
                    }px;` : ''
            },
            getTooltipLabel() {
                return this.getSwatchConfig(this.activeTooltipItem.attribute, this.activeTooltipItem.item).label
            },
            focusedLabel: false,
            focusLabel(optionId) {
                this.focusedLabel = optionId;
            },
            blurLabel() {
                this.focusedLabel = false;
            },
            showSwatches: false,
            initShowSwatchesIntersect() {
                if ('IntersectionObserver' in window && !window.scrollY) {
                    let io = new IntersectionObserver(
                        entries => {
                            entries.map(entry => {
                                if (entry.isIntersecting) {
                                    this.showSwatches = true;
                                    io.unobserve(this.$root);
                                }
                            })
                        }
                    );
                    io.observe(this.$root);
                } else {
                    this.showSwatches = true
                }
            }
        }
    }


    'use strict';

    (function () {
        const modals = [];
        const excludedFromFocusTrapping = new Set();

        function trapFocusInNextModalWithOverlay() {
            for (let idx = modals.length -1; idx >= 0; idx--) {
                const nextOnStack = modals[idx];
                const nextDialogElement = nextOnStack.instance.$refs[nextOnStack.name];
                if (! isOverlayDisabled(nextDialogElement)) {
                    hyva.trapFocus(nextDialogElement);
                    break;
                }
            }
        }

        function focusables(dialogElement) {
            const selector = 'button, [href], input, textarea, select, details, [tabindex]:not([tabindex="-1"])';
            return Array.from(dialogElement.querySelectorAll(selector))
                .filter(el => !el.hasAttribute('disabled'));
        }

        function firstVisible(elements) {
            const a = Array.from(elements);
            for (let i = 0; i = 0 &&
                   rect.left >= 0 &&
                   rect.right  candidate.focus(), 50);
                break;
            }
            window.setTimeout(() => {
                const focusElement = firstVisible(dialogElement.querySelectorAll('[x-focus-first]')) ||
                                     focusables(dialogElement)[0] ||
                                     null;
                focusElement && isInViewport(focusElement) && focusElement.focus();
            }, Math.max(1, duration));
        }

        function determineTrigger($refs, dialog, trigger) {
                        if (typeof trigger === 'undefined' && typeof dialog === 'object' && dialog.target instanceof HTMLElement) {
                return dialog.target;
            }
                        if (typeof dialog === 'string' && typeof trigger === 'object' && trigger.target instanceof HTMLElement) {
                return trigger.target;
            }
                        if (typeof trigger === 'string') {
                try {
                    return $refs[trigger] || document.querySelector(trigger)
                } catch (e) {}
            }

            if (trigger instanceof Element) {
                return trigger;
            }

            return null;
        }

        function isOverlayDisabled(dialog) {
            return dialog && dialog.hasAttribute('x-no-overlay')
        }

        function areRemainingModalsWithoutOverlay(modals)
        {
            const overflowDisabled = modals.map(modal => modal.instance.$refs[modal.name]).filter(isOverlayDisabled);

            return overflowDisabled.length === modals.length;
        }

        window.hyva.modal = function(options) {

            const config = Object.assign({
                                             dialog: 'dialog',                                              duration: 300,                                              transitionEnter: 'transition ease-out duration-300',
                                             transitionEnterStart: 'opacity-0',
                                             transitionEnterEnd: 'opacity-100',
                                             transitionLeave: 'transition ease-in duration-300',
                                             transitionLeaveStart: 'opacity-100',
                                             transitionLeaveEnd: 'opacity-0',
                                         }, options);
            let lastHide = 0;

            return {
                opened: {},
                show(dialog, trigger) {
                    const focusTargetAfterHide = determineTrigger(this.$refs, dialog, trigger);
                    const name = typeof dialog === 'string' ? dialog : config.dialog;
                    const dialogElement = this.$refs[name];
                    if (! dialogElement) {
                                                return;
                    }
                    const useOverlay = ! dialogElement.hasAttribute('x-no-overlay');

                    dialogElement.scrollTop = 0;

                                        if (this.opened[name]) {
                        return;
                    }

                    if (focusTargetAfterHide) {
                        focusTargetAfterHide.setAttribute('aria-expanded', 'true');
                    }

                    this.opened[name] = true;
                    useOverlay && this.$nextTick(() => hyva.trapFocus(dialogElement));
                    setFocusAfterTransition(dialogElement, config.duration);

                    const frame = {name, instance: this, focusTarget: focusTargetAfterHide, time: Date.now()};

                    modals.push(frame);
                    if (useOverlay) {
                        document.body.classList.add('overflow-hidden');
                    }
                    return new Promise(resolve => frame.resolve = resolve);
                },
                cancel() {
                    this.hide(false);
                },
                ok() {
                    this.hide(true);
                },
                hide(value) {
                                        if (Date.now() - lastHide  {
                        nextFocusAfterHide.setAttribute('aria-expanded', 'false');
                        nextFocusAfterHide.focus()
                    }, config.duration);

                    if (modals.length === 0 || areRemainingModalsWithoutOverlay(modals)) {
                        document.body.classList.remove('overflow-hidden');
                    }

                    modal.resolve(value);
                },
                overlay(dialog) {
                    const name = typeof dialog === 'string' ? dialog : config.dialog;
                    return {
                        ['x-show']() {
                            return this.opened[name]
                        },
                        ['x-transition:enter']: config.transitionEnter,
                        ['x-transition:enter-start']: config.transitionEnterStart,
                        ['x-transition:enter-end']: config.transitionEnterEnd,
                        ['x-transition:leave']: config.transitionLeave,
                        ['x-transition:leave-start']: config.transitionLeaveStart,
                        ['x-transition:leave-end']: config.transitionLeaveEnd,
                        ['@hyva-modal-show.window'](event) {
                            event.detail && event.detail.dialog === name && this.show(name, event.detail.focusAfterHide)
                        }
                    };
                }
            };
        }

        window.hyva.modal.peek = () => modals.length > 0 && modals[modals.length -1]

        window.hyva.modal.pop = function () {
            if (modals.length > 0) {
                const modal = modals[modals.length -1];
                modal.instance.hide();
            }
        }

        window.hyva.modal.excludeSelectorsFromFocusTrap = function (selectors) {
            typeof selectors === 'string' || selectors instanceof String
                ? excludedFromFocusTrapping.add(selectors)
                : selectors.map(selector => excludedFromFocusTrapping.add(selector));
        }

        window.hyva.modal.eventListeners = {
            keydown: event => {
                if (event.key === 'Escape') {
                    window.hyva.modal.pop();
                }
            },
                        click: event => {
                if (modals.length > 0) {
                    const modal = modals[modals.length -1];
                    const dialog = modal.instance.$refs[modal.name];

                    const ignoredInstance = ['checkout.billing.address-validation.modal'];

                    if (modal.time + 500 

    'use strict';

    const grecaptchaV2LoadCallbacks = [];

    function executeRecaptchaLoadCallbacks () {
        while (window.grecaptcha && grecaptchaV2LoadCallbacks.length > 0) {
            const callback = grecaptchaV2LoadCallbacks.pop();
            typeof callback === 'string' ? window[callback]() : callback();
        }
    }

    (function() {
        const loadRecaptchaScript = (event) => {

            if (window.grecaptcha || !event.target.form) {
                return;
            }

            const url = 'https://www.google.com/recaptcha/api.js?onload=executeRecaptchaLoadCallbacks';
            const siteKey = '6LdpdWEpAAAAAP_YuxupKSEZGxzZeuxZD\u002DYkfhUJ';
            const script = document.createElement('script');
            script.type = 'text/javascript';
            script.src = siteKey ? `${url}&render=${siteKey}` : `${url}&render=explicit`;
            script.async = true;
            document.head.appendChild(script);

            script.addEventListener('load', () => {
                Array.from(document.querySelectorAll('button[data-recaptcha-btn]:disabled')).forEach(btn => btn.removeAttribute('disabled'));
            });
        }

        window.forceLoadRecaptchaScript = (form) => {
            loadRecaptchaScript({target: {form: form || 'dummy'}});
            executeRecaptchaLoadCallbacks();
        };

        document.body.addEventListener('input', loadRecaptchaScript, { once: true });
        document.body.addEventListener('focus', loadRecaptchaScript, { once: true });

    }());





    {{#findAutocomplete}}
    
    {{/findAutocomplete}}

    
        
            
                
                    
                        Filters                        
                            

close
                        
                    
                    
                        
                            
                            
                        
                    
                
            
            
                
                    
                        {{#second_bar}}
                        
                        {{/second_bar}}
                    
                
                
                    
                        
                            
                                
                                    
                                        Filter                                    
                                    
                                
                            
                            
                                
                                
                                    Show &nbsp;
                                    
                                
                                
                                    Sorting by &nbsp;
                                    
                                
                            
                            
                            
                            
                        
                    
                
                
                    
                
            
        
    


    'use strict';

    class InstantSearch {
        constructor() {
            this.initialize();
        }

        initialize() {
            if (!window.algoliaConfig.instant.colorSwatches) {
                window.algoliaConfig.instant.colorSwatches = {"awn_fabric_closed_color":{"Black":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/o\/n\/onyx_black.jpg"},"White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/h\/white_outline_6.jpg"}},"measfit_color":{"Almond":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/a\/l\/almond_1.jpg"},"Amber":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/a\/m\/amber.jpg"},"Aurora Gold":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/a\/u\/aurora-gold.jpg"},"Battleship Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/h\/charcoal_4.jpg"},"Beige":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/e\/beige_swatch.jpg"},"Black":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/black_swatch_1.jpg"},"Black\/Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/black_grey_swatch.jpg"},"Black Matte":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-matte.jpg"},"Black\/Silver":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/u\/super_gard_boat_fender_silver_mist___black_onyx_swirl_1_1.jpg"},"Black\/Stainless Steel":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/black_stainless.png"},"Black Swirl":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/u\/super_gard_boat_fender_silver_mist___black_onyx_swirl_1.jpg"},"Black\/White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/black_white_swatch.jpg"},"Black\/Yellow":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/black_yellow_swatch.jpg"},"Black Matte\/Satin Bronze":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/a\/satin_bronze_black_matte.jpg"},"Blaze Orange":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/blaze-orange.jpg"},"Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/l\/blue_swatch_1.jpg"},"Blue Swirl":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/u\/super_gard_boat_fender_captain_s_navy_and_silver_swirl_1_1.jpg"},"Bright Aluminum":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_8.png"},"Brown":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/o\/wood_grain_2.jpg"},"Burgundy":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/u\/burgundy_sureshade.jpg"},"Camo":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/a\/camo.jpg"},"Charcoal":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/h\/charcoal_1.jpg"},"Chrome":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_3.png"},"Clear":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/h\/white_outline.jpg"},"Cranberry":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/r\/cranberry.jpg"},"Dark Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/h\/charcoal_2.jpg"},"Emerald Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/e\/m\/emerald-green.jpg"},"Darker Stainless Steel":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/d\/a\/darker_ss.png"},"Gloss Black":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-blackgloss_original_size.jpg"},"Gold":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/g\/o\/gold.jpg"},"Gray":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/g\/r\/grey_swatch_3.jpg"},"Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/g\/r\/green_swatch_1.jpg"},"Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/g\/r\/grey_swatch_6.jpg"},"Hammer Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/h\/charcoal_3.jpg"},"Hunter Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/h\/u\/hunter-green_sureshade_1.jpg"},"Ice Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/i\/c\/ice_blue.jpg"},"Ivory":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/o\/bone_white_1.jpg"},"Light Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/l\/i\/light_blue_1.jpg"},"Light Gray":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/p\/l\/platinum_series_fabric_grey_plain.jpg"},"Lime Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/l\/i\/lime_green.jpg"},"Mid-Atlantic Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/m\/i\/mid-atlantic-blue.jpg"},"Mirror Glass":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_7.png"},"Navy":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/n\/a\/navy_swatch_1.jpg"},"Navy\/Silver":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/n\/a\/navy_silver.jpg"},"Navy Swirl":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/u\/super_gard_boat_fender_captain_s_navy_and_silver_swirl_1.jpg"},"Neon Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/n\/e\/neon_green.jpg"},"Neon Red":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/n\/e\/neon_red.jpg"},"Neon Yellow":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/n\/e\/neon-yellow.jpg"},"Off White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/b\/o\/bone_white.jpg"},"Orange":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/o\/r\/orange.jpg"},"Pacific Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/p\/a\/pacific_blue_swatch_1.png"},"Parchment":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/p\/a\/parchment_1.jpg"},"Pink":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/p\/i\/pink.jpg"},"Polar White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/h\/white_outline_2.jpg"},"Purple":{"type":3,"value":""},"Red":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/e\/red_swatch_1.jpg"},"Red\/Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/e\/red_green.jpg"},"Red\/White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/e\/red_white.jpg"},"Rocket Red":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/o\/rocket-red.jpg"},"Royal Blue":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/o\/royal_blue.jpg"},"Ruby Red":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/r\/u\/ruby-red.jpg"},"Sand":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/t\/o\/toast_1.jpg"},"Satin Bronze":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/a\/satin_bronze.jpg"},"Seafoam Green":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/e\/seafoam_green.jpg"},"Silver":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_6.png"},"Silver Mist":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/i\/silver-mist.jpg"},"Stainless Steel":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_5.png"},"Stainless Steel Silver":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/s\/w\/swatch-ss_4.png"},"Tan":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/t\/a\/tan_swatch.jpg"},"Teak":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/o\/wood_grain_1.jpg"},"Teal":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/t\/e\/teal_1.jpg"},"Terracotta":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/t\/e\/terracotta_1.jpg"},"Titanium Grey":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/c\/h\/charcoal.jpg"},"White":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/h\/white_outline_1.jpg"},"Wood Grain Color":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/w\/o\/wood_grain.jpg"},"Yellow":{"type":2,"value":"https:\/\/www.lippert.com\/media\/attribute\/swatch\/swatch_image\/78x78\/y\/e\/yellow.jpg"},"Black\/Champagne Bronze":{"type":3,"value":""},"Champagne Bronze":{"type":3,"value":""}}};
            }
            this.paginationEvent();
        }

        paginationEvent() {
            document.body.addEventListener('click', e => {
                if (e.target.closest('.ais-Pagination-link')) {
                    window.dispatchEvent(new CustomEvent("reload-customer-section-data"));
                }
            })
        }
    }

    const is = new InstantSearch();


    
        
        
            

                
                    {{#image_url}}
                        
                    {{/image_url}}
                    {{^image_url}}{{/image_url}}
                    View Product
                
                
                                            {{#top_rated_label}}
                                    Top-Rated
                            {{/top_rated_label}}
                                            {{#new_label}}
                                    New
                            {{/new_label}}
                                            {{#best_seller_label}}
                                    Bestseller
                            {{/best_seller_label}}
                                            {{#on_sale_label}}
                                    Sale
                            {{/on_sale_label}}
                                    
                
                                        {{#isNotCPQ}}
                        
                            Add to Wish List
                        
                    {{/isNotCPQ}}
                
                
                    
                        {{#brand}}
                        {{brand}}
                        {{/brand}}
                        
                            {{{ _highlightResult.name.value }}}
                        
                    
                    {{#_highlightResult.sku.value}}
                    
                        SKU: {{{ _highlightResult.sku.value }}}
                    
                    {{/_highlightResult.sku.value}}
                    {{#isNotCPQ}}
                        
                            {{^price.USD.default_max}}
                            
                                
                                {{/price.USD.default_max}}
                                {{#price.USD.default_max}}
                                
                                    
                                    
                                    {{/price.USD.default_max}}
                                    
                                    
                                        {{#price.USD.default_original_formated}}
                                        
                                        {{/price.USD.default_original_formated}}
                                        
                                        {{price.USD.default_formated}}
                                        
                                         {{#price.USD.default_original_formated}}
                                        
                                        {{/price.USD.default_original_formated}}
                                        {{#price.USD.default_original_formated}}
                                        
                                     {{price.USD.default_original_formated}}
                                
                                        {{/price.USD.default_original_formated}}
                                        {{#price.USD.default_tier_formated}}
                                        
                                        From                                        {{price.USD.default_tier_formated}}
                                    
                                        {{/price.USD.default_tier_formated}}
                                    
                                
                                {{#mao_stock_status_oos}}
                                Out of Stock
                                {{/mao_stock_status_oos}}
                                {{#mao_stock_status_low}}
                                Low Stock
                                {{/mao_stock_status_low}}
                            
                        
                    {{/isNotCPQ}}
                
                {{{ _highlightResult.description.value }}}
            
        
    


    
        {{#hasOneResult}}
        1
        Product        {{/hasOneResult}}
        {{#hasManyResults}}
        {{nbHits}}
        Products        {{/hasManyResults}}
        {{#hasNoResults}}
        Your search returned no results.
        {{/hasNoResults}}
    



    
        
        
            {{value}}
        
        ({{count}})
    


    
        
        {{label}}
    


    
        
            Select color: {{label}}
            
        
        
            
                
                {{label}}
            
            
                
            
        
    


    
        
    
    
        {{#label}}
        {{label}}{{^operator}}:{{/operator}}
        {{/label}}
        {{#operator}}
        {{{displayOperator}}}
        {{/operator}}
        {{#exclude}}-{{/exclude}}
        {{name}}
    


    
    
    
        Loading...    




    'use strict';

    (() => {
        const equalizeButtonWidths = (buttons) => {
            const buttonList = buttons.querySelectorAll('[data-element="link"], [data-element="empty_link"]');
            let buttonMinWidth = 0;

            buttonList.forEach(button => {
                const buttonWidth = button.offsetWidth;

                if (buttonWidth > buttonMinWidth) {
                    buttonMinWidth = buttonWidth;
                }
            });

            buttonList.forEach(button => {
                button.style.minWidth = `${buttonMinWidth}px`;
            });
        };

        window.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('[data-content-type="buttons"][data-same-width="true"]').forEach(buttons => {
                equalizeButtonWidths(buttons);
            });
        });
    })();


    'use strict';

    (() => {
        const initCarousels = (elements) => {
            if (!Glider) {
                return;
            }

            const initProductCarousel = (carousel) => {
                const gliderElement = carousel.querySelector('[data-role="glider-content"]');
                const isBlogPage = document.body.classList.contains('blog-page');

                if (!gliderElement) {
                    return;
                }

                const gliderPrev = carousel.querySelector('.glider-prev');
                const gliderNext = carousel.querySelector('.glider-next');
                let gliderDots = carousel.querySelector('.glider-dots');
                const slidesToShowDesktop = isBlogPage ? 2.1 : 4.1;
                const slidesToScrollDesktop = isBlogPage ? 2 : 4;

                if (carousel.querySelectorAll('.product-item').length  {
                slider.innerHTML = `${slider.innerHTML}`;
                slider.classList.add('glider-contain');

                slider.insertAdjacentHTML(
                    'beforeend',
                    '\u000A\u003Cdiv\u0020class\u003D\u0022carousel\u002Dnav\u0020flex\u0020items\u002Dcenter\u0020justify\u002Dcenter\u0020flex\u002D1\u0022\u003E\u000A\u0020\u0020\u0020\u0020\u003Cbutton\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020aria\u002Dlabel\u003D\u0022Previous\u0022\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020class\u003D\u0022\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020glider\u002Dprev\u0020button\u002Dicon\u0020button\u002Dicon\u002D\u002Dmd\u0020absolute\u0020\u002Dleft\u002D1\u0020\u002Dtranslate\u002Dy\u002D1\u002F2\u0020top\u002D\u005Bcalc\u002850\u0025\u002D44px\u0029\u005D\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020z\u002D10\u0020flex\u0020items\u002Dcenter\u0020justify\u002Dcenter\u0020rounded\u002Dfull\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020outline\u002Dnone\u0020focus\u003Aoutline\u002Dnone\u0020bg\u002Dgrayscale\u002D800\u0020hidden\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0022\u000A\u0020\u0020\u0020\u0020\u003E\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003Csvg\u0020xmlns\u003D\u0022http\u003A\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\u0022\u0020width\u003D\u002224\u0022\u0020height\u003D\u002224\u0022\u0020viewBox\u003D\u00220\u00200\u002024\u002024\u0022\u0020class\u003D\u0022fill\u002Dwhite\u0020mx\u002Dauto\u0022\u0020role\u003D\u0022img\u0022\u003E\u003Cpath\u0020d\u003D\u0022M10\u00206L11.4\u00207.45L7.85\u002011L20\u002011L20\u002013L7.85\u002013L11.4\u002016.55L10\u002018L4\u002012L10\u00206Z\u0022\u002F\u003E\u003Ctitle\u003Earrow\u002Dleft\u002Dalt\u003C\u002Ftitle\u003E\u003C\u002Fsvg\u003E\u000A\u0020\u0020\u0020\u0020\u003C\u002Fbutton\u003E\u000A\u0020\u0020\u0020\u0020\u003Cdiv\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020role\u003D\u0022tablist\u0022\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020class\u003D\u0022glider\u002Ddots\u0020select\u002Dnone\u0020flex\u0020flex\u002Dwrap\u0020mx\u002D1\u0020justify\u002Dcenter\u0020p\u002D0\u0020focus\u003Aoutline\u002Dnone\u0022\u000A\u0020\u0020\u0020\u0020\u003E\u003C\u002Fdiv\u003E\u000A\u0020\u0020\u0020\u0020\u003Cbutton\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020aria\u002Dlabel\u003D\u0022Next\u0022\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020class\u003D\u0022\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020glider\u002Dnext\u0020button\u002Dicon\u0020button\u002Dicon\u002D\u002Dmd\u0020absolute\u0020\u002Dright\u002D1\u0020\u002Dtranslate\u002Dy\u002D1\u002F2\u0020top\u002D\u005Bcalc\u002850\u0025\u002D44px\u0029\u005D\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020z\u002D10\u0020flex\u0020items\u002Dcenter\u0020justify\u002Dcenter\u0020rounded\u002Dfull\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020outline\u002Dnone\u0020focus\u003Aoutline\u002Dnone\u0020bg\u002Dgrayscale\u002D800\u0020hidden\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0022\u000A\u0020\u0020\u0020\u0020\u003E\u000A\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u003Csvg\u0020xmlns\u003D\u0022http\u003A\u002F\u002Fwww.w3.org\u002F2000\u002Fsvg\u0022\u0020width\u003D\u002224\u0022\u0020height\u003D\u002224\u0022\u0020viewBox\u003D\u00220\u00200\u002024\u002024\u0022\u0020class\u003D\u0022fill\u002Dwhite\u0020mx\u002Dauto\u0022\u0020role\u003D\u0022img\u0022\u003E\u003Cpath\u0020d\u003D\u0022M14\u002018L12.6\u002016.55L16.15\u002013H4V11H16.15L12.6\u00207.45L14\u00206L20\u002012L14\u002018Z\u0022\u002F\u003E\u003Ctitle\u003Earrow\u002Dright\u002Dalt\u003C\u002Ftitle\u003E\u003C\u002Fsvg\u003E\u000A\u0020\u0020\u0020\u0020\u003C\u002Fbutton\u003E\u000A\u003C\u002Fdiv\u003E\u000A'
                );

                const gliderElement = slider.querySelector('[data-role="glider-content"]');
                const gliderDots = slider.querySelector('.glider-dots');
                const gliderPrev = slider.querySelector('.glider-prev');
                const gliderNext = slider.querySelector('.glider-next');

                const glider = new Glider(gliderElement, {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    scrollLock: true,
                    scrollLockDelay: 250,
                    draggable: true,
                    dragVelocity: 2.5,
                    dots: gliderDots,
                    arrows: {
                        prev: gliderPrev,
                        next: gliderNext,
                    },
                });

                slider.classList.add('glider-initialized');
                if (slider.dataset.showArrows === 'true') {
                    gliderPrev.classList.remove('hidden');
                    gliderNext.classList.remove('hidden');
                }

                if (slider.dataset.autoplay !== 'false') {
                    gliderAutoplay(
                        glider,
                        slider.dataset.autoplaySpeed,
                        slider.dataset.infiniteLoop
                    );
                }
            };

            const gliderAutoplay = (glider, milliseconds, loop) => {
                const pagesCount = glider.track.childElementCount;
                let slideTimeout = null,
                nextIndex = 1,
                paused = false;

                const slide = () => {
                    slideTimeout = setTimeout(
                        () => {
                            if (loop && nextIndex >= pagesCount) {
                                nextIndex = 0;
                            }
                            glider.scrollItem(nextIndex);
                        },
                        parseInt(milliseconds)
                    );
                };

                glider.ele.addEventListener('glider-animated', () => {
                    nextIndex = glider.slide + glider.opt.slidesToScroll;
                    window.clearInterval(slideTimeout);
                    if (!paused && (loop || nextIndex  {
                    if (!paused) {
                        clearInterval(slideTimeout);
                        paused = true;
                    }
                };

                const unpause = () => {
                    if (paused) {
                        slide();
                        paused = false;
                    }
                };

                glider.ele.parentElement.addEventListener('mouseover', pause, {passive: true});
                glider.ele.parentElement.addEventListener('touchstart', pause, {passive: true});
                glider.ele.parentElement.addEventListener('mouseout', unpause, {passive: true});
                glider.ele.parentElement.addEventListener('touchend', unpause, {passive: true});

                slide();
            };

            elements.forEach(element => {
                if (element.dataset.contentType === 'products') {
                    initProductCarousel(element);
                }
                if (element.dataset.contentType === 'slider') {
                    initSliderCarousel(element);
                }
            });
        };

        window.addEventListener('DOMContentLoaded', () => {
            const carouselElements = document.querySelectorAll(
                `[data-content-type="products"][data-appearance="carousel"],
                [data-content-type="slider"]`
            );

            if (carouselElements.length > 0) {
                const script = document.createElement('script');

                script.type = 'text/javascript';

                script.addEventListener('load', () => {
                    initCarousels(carouselElements);
                });

                script.src = 'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_PageBuilder\u002Fjs\u002Fglider.min.js';
                document.head.appendChild(script);
            }
        });
    })();


    'use strict';

    (() => {
        const initMaps = (elements) => {
            const renderMap = (element) => {
                const dataLocations = element.dataset.locations;

                // Hide map if no locations set
                if (!dataLocations || dataLocations === '[]') {
                    element.classList.add('hidden');
                    return;
                }

                const map = new google.maps.Map(
                    element,
                    getMapOptions(
                        element.dataset.showControls !== 'true',
                        element.dataset.showControls === 'true'
                    )
                );
                const locations = JSON.parse(dataLocations);
                const latitudeLongitudeBounds = new google.maps.LatLngBounds();
                const bounds = [];

                locations.forEach(location => {
                    const position = {
                        lat: parseFloat(location.position.latitude),
                        lng: parseFloat(location.position.longitude),
                    };
                    bounds.push(position);

                    const infowindow = new google.maps.InfoWindow({
                        content: getInfoWindowContent(location),
                    });
                    const marker = new google.maps.Marker({
                        position: position,
                        map,
                        title: location.location_name,
                    });

                    marker.addListener('click', () => {
                        infowindow.open(map, marker);
                    });
                });

                // Set bounds if multiple locations
                if (bounds.length > 1) {
                    bounds.forEach(function (bound) {
                        latitudeLongitudeBounds.extend(bound);
                    });
                    map.fitBounds(latitudeLongitudeBounds);
                }

                // Center if single location
                if (bounds.length === 1) {
                    map.setCenter(bounds[0]);
                }
            };

            const getMapOptions = (disableDefaultUI, mapTypeControl) => {
                const style = '';
                return {
                    zoom: 8,
                    scrollwheel: false,
                    disableDoubleClickZoom: false,
                    mapTypeControlOptions: {
                        style: google.maps.MapTypeControlStyle.DEFAULT,
                    },
                    styles: style ? JSON.parse(style) : [],
                    disableDefaultUI: disableDefaultUI,
                    mapTypeControl: mapTypeControl,
                };
            };

            const getInfoWindowContent = (location) => {
                const title = location.location_name ?
                    `${location.location_name}` : '';
                const comment = location.comment ? `${location.comment}` : '';
                const phone = location.phone ? `Phone: ${location.phone}` : '';
                const street = location.address ? `${location.address}` : '';
                const city = location.city ? `${location.city}` : '';
                const state = location.state ? `${location.state}` : '';
                const zipCode = location.zipcode ? `${location.zipcode}` : '';
                const country = location.country ? location.country : '';

                return `
                            ${title}
                            ${comment}
                            ${phone}
                            
                                ${street}
                                ${city}
                                ${state}
                                ${zipCode}
                                ${country}
                            
                        `;
            };

            const hideAllMaps = () => {
                document.querySelectorAll('[data-content-type="map"]').forEach(element => {
                    element.classList.add('hidden');
                });
            };

            window.gm_authFailure = () => {
                hideAllMaps();
            };

            if (typeof google.maps === 'undefined') {
                hideAllMaps();
                return;
            }

            elements.forEach(element => {
                if (element.dataset.contentType === 'map') {
                    renderMap(element);
                }
            });
        };

        window.addEventListener('DOMContentLoaded', () => {
            const mapElements = document.querySelectorAll('[data-content-type="map"]');

            if (mapElements.length > 0) {
                const script = document.createElement('script');
                script.type = 'text/javascript';

                script.addEventListener('load', () => {
                    initMaps(mapElements);
                });

                script.src = 'https\u003A\u002F\u002Fmaps.googleapis.com\u002Fmaps\u002Fapi\u002Fjs\u003Fv\u003D3\u0026key\u003D';
                document.head.appendChild(script);
            }
        });
    })();


    'use strict';

    (() => {
        const initParallaxImage = (element) => {
            if (!window.jarallax) {
                return;
            }

            element.classList.add('jarallax');
            element.dataset.jarallax = '';
            const parallaxSpeed = parseFloat(element.dataset.parallaxSpeed) || 0.5;
            const elementStyle = window.getComputedStyle(element);

            window.jarallax(element, {
                imgPosition: elementStyle.backgroundPosition || '50% 50%',
                imgRepeat: elementStyle.backgroundRepeat || 'no-repeat',
                imgSize: elementStyle.backgroundSize || 'cover',
                speed: parallaxSpeed,
            });
        };

        const initVideoBackground = (element) => {
            if (!window.jarallax) {
                return;
            }

            let slider = null;

            if (element.classList.contains('pagebuilder-slide-wrapper')) {
                const viewportElement = document.createElement('div');
                slider = element.closest('[data-content-type=slider]');
                viewportElement.classList.add('jarallax-viewport-element');
                element.dataset.elementInViewport = '.jarallax-viewport-element';
                element.appendChild(viewportElement);
            }

            element.classList.add('jarallax');
            element.dataset.jarallax = '';
            const parallaxSpeed = parseFloat(element.dataset.parallaxSpeed) || 0.5;

            window.jarallax(element, {
                imgSrc: element.dataset.videoFallbackSrc,
                speed: parallaxSpeed,
                videoLoop: element.dataset.videoLoop,
                videoPlayOnlyVisible: element.dataset.videoPlayOnlyVisible,
                videoLazyLoading: element.dataset.videoLazyLoad,
                disableVideo: false,
                elementInViewport: element.dataset.elementInViewport &&
                    element.querySelector(element.dataset.elementInViewport),
            });

            if (slider) {
                if (slider.dataset.afterChangeIsSet) {
                    return;
                }

                slider.addEventListener('glider-loaded', () => {
                    slider.querySelectorAll('.jarallax').forEach(videoSlide => {
                        videoSlide.jarallax && videoSlide.jarallax.onScroll();
                    });
                });

                slider.addEventListener('glider-animated', () => {
                    slider.querySelectorAll('.jarallax').forEach(videoSlide => {
                        videoSlide.jarallax && videoSlide.jarallax.onScroll();
                    });
                });

                slider.dataset.afterChangeIsSet = true;
            }
        };

        window.addEventListener('DOMContentLoaded', () => {
            const parallaxImageElements = document.querySelectorAll(
                `[data-content-type="row"][data-background-type="image"][data-enable-parallax="1"],
                [data-content-type="row"] > [data-background-type="image"][data-enable-parallax="1"]`
            );

            const videoBackgroundsElements = document.querySelectorAll(
                `[data-content-type="row"][data-background-type="video"][data-enable-parallax="1"],
                [data-content-type="row"] > [data-background-type="video"][data-enable-parallax="1"],
                [data-content-type="banner"] [data-background-type="video"],
                [data-content-type="slide"] [data-background-type="video"]`
            );

            if (parallaxImageElements.length > 0 || videoBackgroundsElements.length > 0) {
                const jarallaxScript = document.createElement('script');
                jarallaxScript.type = 'text/javascript';

                jarallaxScript.addEventListener('load', () => {
                    parallaxImageElements.forEach(row => {
                        initParallaxImage(row);
                    });

                    const jarallaxVideoScript = document.createElement('script');
                    jarallaxVideoScript.type = 'text/javascript';

                    jarallaxVideoScript.addEventListener('load', () => {
                        videoBackgroundsElements.forEach(element => {
                            initVideoBackground(element);
                        });
                    });

                    jarallaxVideoScript.src = 'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_PageBuilder\u002Fjs\u002Fjarallax\u002Dvideo.min.js';
                    document.head.appendChild(jarallaxVideoScript);
                });

                jarallaxScript.src = 'https\u003A\u002F\u002Fwww.lippert.com\u002Fstatic\u002Fversion1759822589\u002Ffrontend\u002FVaimo\u002Flippert\u002Fen_US\u002FHyva_PageBuilder\u002Fjs\u002Fjarallax.min.js';
                document.head.appendChild(jarallaxScript);
            }
        });
    })();


    'use strict';

    (() => {
        const applyShowOnHover = (element) => {
            const showOverlayOnHover = (element) => {
                const overlay = element.querySelector('.pagebuilder-overlay');
                const color = overlay.dataset.overlayColor;

                element.addEventListener('mouseover', () => {
                    overlay.style.backgroundColor = color;
                });
                element.addEventListener('mouseout', () => {
                    overlay.style.backgroundColor = 'transparent';
                });
            };

            const showButtonOnHover = (element) => {
                const button = element.querySelector('.pagebuilder-banner-button');

                element.addEventListener('mouseover', () => {
                    button.style.opacity = '1';
                    button.style.visibility = 'visible';
                });
                element.addEventListener('mouseout', () => {
                    button.style.opacity = '0';
                    button.style.visibility = 'hidden';
                });
            };

            if (element.dataset.showOverlay === 'hover') {
                showOverlayOnHover(element);
            }
            if (element.dataset.showButton === 'hover') {
                showButtonOnHover(element);
            }
        };

        window.addEventListener('DOMContentLoaded', () => {
            document.querySelectorAll('[data-content-type="banner"],[data-content-type="slider"]').forEach(element => {
                applyShowOnHover(element);
            });
        });
    })();


    'use strict';

    (() => {
        document.querySelectorAll('[data-content-type="tab-item"]').forEach(tabItem => {
            tabItem.setAttribute('x-show', `tab === '${tabItem.id}'`);
        });

        document.querySelectorAll('[data-content-type="tabs"]').forEach(tab => {
            const defaultActiveTab = parseInt(tab.dataset.activeTab) || 0;

            tab.querySelectorAll('.tab-header').forEach((tabHeader, index) => {
                const tabLink = tabHeader.querySelector('a');
                const tabId = tabLink.getAttribute('href').replace('#', '');

                tabHeader.setAttribute(':class', `{ 'active': tab === '${tabId}' }`);
                tabLink.setAttribute('x-on:click.prevent', `tab = '${tabId}'`);

                if (index === defaultActiveTab) {
                    tab.setAttribute('x-data', `{ tab: '${tabId}' }`);
                }
            });
        });
    })();



    (function () {
        'use strict';

        const storageName = 'AmastyCookieGroups';

        !!hyva.amStorage && hyva.amStorage.create(storageName, {
            /**
             * @type {{
             * checked: boolean,
             * cookies: {description: string, lifetime: number|null, name: string, provider: string, type: string}[],
             * description: string,
             * groupId: string|number,
             * isEssential: boolean,
             * name: string
             * }[]} name
             */
            groupData: [],
            cookiePolicy: undefined,
            lastUpdate: undefined,

            /**
             * @returns {string|number[]}
             */
            getEssentialGroupIds: function () {
                return this.groupData.reduce(function (essentialGroupIds, group) {
                        if (group.isEssential) {
                            essentialGroupIds.push(group.groupId)
                        }

                        return essentialGroupIds;
                    }, []);
            },

            /**
             * @returns {string|number[]}
             */
            getCheckedGroupIds: function () {
                return this.groupData.reduce(function (checkedGroupIds, group) {
                    if (group.checked) {
                        checkedGroupIds.push(group.groupId);
                    }

                    return checkedGroupIds;
                }, []);
            },

            /**
             * @param {string} cookieName
             * @returns {boolean}
             */
            isCookieEssential: function (cookieName) {
                const allEssentialCookies = this.getEssentialCookies();

                return !!allEssentialCookies.find(cookie => cookie.name === cookieName);
            },

            /**
             * @returns {array}
             */
            getEssentialCookies: function () {
                return this.groupData
                    .filter(group => group.isEssential)
                    .map(group => group.cookies)
                    .flat();
            },

            /**
             * @returns {boolean}
             */
            hasGroupData: function () {
                return !!this.groupData.length;
            },

            /**
             * @param {string} cookieName
             * @param {string} pattern
             * @returns {boolean}
             */
            isEssentialByPattern: function (cookieName, pattern) {
                const essentialCookiePatterns = this.getEssentialCookiesPattern(pattern);

                return essentialCookiePatterns.some((pattern) => !!cookieName.match(this.getCookiePattern(pattern)));
            },

            /**
             * @param {string} pattern
             * @return {Array}
             */
            getEssentialCookiesPattern: function (pattern) {
                return this.getCookiesByPattern(pattern, this.getEssentialCookies());
            },

            /**
             * @param {string} pattern
             * @param {Array|undefined} cookies
             * @return {Array}
             */
            getCookiesByPattern: function (pattern, cookies) {
                if (typeof cookie === 'undefined') {
                    cookies = this.getAllCookies();
                }

                return cookies
                    .map((cookie) => typeof cookie === 'object' ? cookie.name : cookie.split('=')[0].trim())
                    .filter((cookie) => cookie.match(pattern) !== null);
            },

            /**
             * @returns {array}
             */
            getDisallowedCookies: function () {
                const disallowedCookie = decodeURIComponent(hyva.getCookie('amcookie_disallowed') ?? '');
                if (!disallowedCookie) {
                    return [];
                }

                return disallowedCookie.split(',');
            },

            /**
             * @returns {string}
             */
            getCookiePattern: function (pattern) {
                return `^${pattern.replaceAll('*', '.*')}$`;
            },

            /**
             * @returns {array}
             */
            getAllCookies: function () {
                return document.cookie.split(';');
            },

            /**
             * This method was rewritten
             * Method was changed from POST to GET
             * To avoid regeneration 'private_content_version' cookies
             * @param {boolean} setAcceptance
             * @returns {Promise}
             */
            updateGroupData: function (setAcceptance = false) {
                const cookieFetchUrl = `${BASE_URL}amcookie/cookie/cookies`;
                const params = '?' + new URLSearchParams({
                    allowed: hyva.getCookie('amcookie_allowed'),
                    restriction: hyva.getCookie('amcookie_policy_restriction')
                });
                return fetch(cookieFetchUrl + params).then(response => {
                    if (response.ok) {
                        return response.json();
                    }

                    return Promise.reject(`${response.status} ${response.statusText}`);
                }).then(data => {
                    this.cookiePolicy = data.cookiePolicy ?? 'allowed';
                    this.lastUpdate = data.lastUpdate ?? 0;
                    this.groupData = [...data.groupData];

                    hyva.setCookie('amcookie_policy_restriction', this.cookiePolicy, 10);
                    if (setAcceptance) {
                        amastyCookieManager.setLastCookieAcceptance(this.lastUpdate);
                    }

                    return data;
                }).catch(error => {
                    typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                        {
                            type: "error",
                            text: error
                        }
                    ]);
                }).finally(() => window.dispatchEvent(new CustomEvent('amasty-cookie-group-updated')));
            }
        });
    })();


    (function (amastyCookieManager) {
        'use strict';

        amastyCookieManager.pattern = '{(?.*)}';

        amastyCookieManager.getAmastyCookieGroupStorage = function () {
            return hyva?.amStorage?.getStorage('AmastyCookieGroups') ?? {};
        };

        amastyCookieManager.deleteDisallowedCookie = function () {
            const amastyCookieGroupStorage = this.getAmastyCookieGroupStorage();
            const disallowedCookies = amastyCookieGroupStorage?.getDisallowedCookies() ?? [];

            disallowedCookies.forEach((name) => {
                const pattern = name.match(this.pattern);
                if (!!pattern && !!amastyCookieGroupStorage) {
                    const cookiePattern = amastyCookieGroupStorage.getCookiePattern(pattern.groups.cookiePattern) ?? '';

                    amastyCookieGroupStorage.getCookiesByPattern(cookiePattern).forEach((cookieName) => {
                        this.deleteNotEssentialCookie(cookieName);
                    });
                } else {
                    this.deleteNotEssentialCookie(name);
                }
            });
        };

        amastyCookieManager.isCookieAllowed = function (cookieName) {
            const allowedGroups = hyva.getCookie('amcookie_allowed');
            const disallowedCookie = this.getAmastyCookieGroupStorage()?.getDisallowedCookies() ?? [];
            const isCookiePolicyAllowed = hyva.getCookie('amcookie_policy_restriction') === 'allowed';
            const isCookieEssential = this.getAmastyCookieGroupStorage()?.isCookieEssential(cookieName);
            const isCookieEssentialByPattern = this.getAmastyCookieGroupStorage()?.isEssentialByPattern(cookieName, this.pattern);

            if (!isCookiePolicyAllowed || isCookieEssential || isCookieEssentialByPattern) {
                return true;
            }

            return !((!allowedGroups && !disallowedCookie) || this.isCookieDisallowed(cookieName));
        };

        amastyCookieManager.isCookieDisallowed = function (cookieName) {
            const amastyCookieGroupStorage = this.getAmastyCookieGroupStorage();
            const disallowedCookies = amastyCookieGroupStorage?.getDisallowedCookies() ?? [];

            return disallowedCookies.some((cookie) => {
                const pattern = cookie.match(this.pattern);

                return !!pattern && !!cookieName.match(amastyCookieGroupStorage?.getCookiePattern(pattern.groups.cookiePattern));
            }) || disallowedCookies.indexOf(cookieName) !== -1;
        };

        amastyCookieManager.processManageableCookies = function () {
            let cookieScripts = document.querySelectorAll('script[data-amcookie-groupid][type="text/plain"]');

            cookieScripts.forEach((elem) => {
                if (this.isChecked(elem.dataset['amcookie-groupid'])) {
                    let elClone = elem.cloneNode(true).setAttribute('type', 'text/javascript');

                    elem.remove();
                    document.body.appendChild(elClone);
                }
            });
        };

        amastyCookieManager.deleteNotEssentialCookie = function (cookieName) {
            if (!this.getAmastyCookieGroupStorage()?.isCookieEssential(cookieName)) {
                hyva.setCookie(cookieName, '', -1, true);
            }
        };

        amastyCookieManager.setLastCookieAcceptance = function (lastUpdate) {
            localStorage.setItem('am-last-cookie-acceptance', lastUpdate);
        };

        window.addEventListener('amasty-cookie-group-updated', () => {
            amastyCookieManager.deleteDisallowedCookie();
        });

        window.addEventListener('private-content-loaded', () => {
            amastyCookieManager.getAmastyCookieGroupStorage()?.hasGroupData() && amastyCookieManager.deleteDisallowedCookie();
        });
    }(window.amastyCookieManager = window.amastyCookieManager || {}));


    (function () {
        'use strict';

        window.addEventListener('cookiebar-action-accept', (event) => {
            const groups = event.detail;
            const url = `${BASE_URL}amcookie/cookie/savegroups`;
            const contentType = 'application/x-www-form-urlencoded; charset=UTF-8';
            const body = new URLSearchParams({
                form_key: hyva.getFormKey()
            });
            groups.length && groups.map(groupId => body.append('groups[]', groupId));

            fetch(url, {method: 'POST', body, headers: {'Content-Type': contentType}})
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    }

                    return Promise.reject(`${response.status} ${response.statusText}`);
                })
                .then(data => {
                    if (data.success) {
                        !!hyva.amStorage && hyva.amStorage.getStorage('AmastyCookieGroups').updateGroupData(true);
                    }
                })
                .catch(error => {
                    typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                        {
                            type: "error",
                            text: error
                        }
                    ]);
                })
                .finally(() => {
                    amastyCookieManager.processManageableCookies();
                    window.dispatchEvent(new CustomEvent('cookiebar-action-accept-finish'));
                    window.dispatchEvent(new CustomEvent('amasty-cookie-group-updated'));
                    // Wait cookiebar close animation
                    setTimeout(() => {
                        window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                    }, 100);
                });
        });
    })();


    (function () {
        'use strict';

        window.addEventListener('cookiebar-action-allow', () => {
            const url = `${BASE_URL}amcookie/cookie/allow`;
            const contentType = 'application/x-www-form-urlencoded; charset=UTF-8';
            const body = new URLSearchParams({
                form_key: hyva.getFormKey()
            });
            fetch(url, {method: 'POST', body, headers: {'Content-Type': contentType}})
                .then(response => {
                    if (response.ok) {
                        return response;
                    }

                    return Promise.reject(`${response.status} ${response.statusText}`);
                })
                .then(() => {
                    !!hyva.amStorage && hyva.amStorage.getStorage('AmastyCookieGroups').updateGroupData(true);
                })
                .catch(error => {
                    typeof window.dispatchMessages !== "undefined" && window.dispatchMessages([
                        {
                            type: "error",
                            text: error
                        }
                    ]);
                })
                .finally(() => {
                    amastyCookieManager.processManageableCookies();
                    window.dispatchEvent(new CustomEvent('cookiebar-action-allow-finish'));
                    // Wait cookiebar close animation
                    setTimeout(() => {
                        window.dispatchEvent(new CustomEvent('reload-customer-section-data'));
                    }, 100);
                });
        });
    })();



    (function () {
        'use strict';

        window.addEventListener('cookiebar-action-settings', () => {
            window.dispatchEvent(new Event('open-am-cookie-bar-settings'));
        });
    })();



    :root {
        /* Bar Color Settings */
        --ambar-background: #fff;
        --ambar-links-color: #326ed1;
        --ambar-policy-text: #374151;
        --ambar-toggle-active-color: #2563eb;
        --ambar-toggle-inactive-color: #fff;

        /* Buttons Color Settings */
        --ambar-button-accept-color: #337ab7;
        --ambar-button-accept-hover-color: #337ab7;
        --ambar-button-accept-text: #fff;
        --ambar-button-accept-hover-text: #fff;

        --ambar-button-allow-color: #337ab7;
        --ambar-button-allow-hover-color: #337ab7;
        --ambar-button-allow-text: #fff;
        --ambar-button-allow-hover-text: #fff;

        --ambar-button-decline-color: #337ab7;
        --ambar-button-decline-hover-color: #337ab7;
        --ambar-button-decline-text: #fff;
        --ambar-button-decline-hover-text: #fff;

        --ambar-button-settings-color: #337ab7;
        --ambar-button-settings-hover-color: #337ab7;
        --ambar-button-settings-text: #fff;
        --ambar-button-settings-hover-text: #fff;

        /* Buttons Order Settings */
        --ambar-button-accept-order: 0;
        --ambar-button-allow-order: 0;
        --ambar-button-settings-order: 0;
        --ambar-button-decline-order: 0;

        /* Cookie Information Bar Color Settings */
        --ambar-information-background: #fff;
        --ambar-information-title: #374151;
        --ambar-information-description: #374151;
        --ambar-information-table-header: #374151;
        --ambar-information-table-content: #374151;

        /* Cookie Information Bar Done Button Settings */
        --ambar-information-button-color: #1d4ed8;
        --ambar-information-button-hover-color: #1d4ed8;
        --ambar-information-button-text: #fff;
        --ambar-information-button-hover-text: #fff;

        /* Settings Bar Done Button Settings */
        --ambar-setting-button-color: #1d4ed8;
        --ambar-setting-button-hover-color: #1d4ed8;
        --ambar-setting-button-text: #fff;
        --ambar-setting-button-hover-text: #fff;
    }



    'use strict';

    (() => {
        const accordion = document.querySelector('.accordion-widget');

        if (accordion) {
            const items = accordion.querySelectorAll('.accordion-item');

            items?.forEach(item => {
                item.addEventListener('click', () => {
                    item.closest('.accordion-item').classList.toggle('active')
                })
            })
        }
    })()



    
    
        
            

    
        
            
        
                    
                We value your privacy
                
                    This site uses cookies and related technologies, as described in our privacy policy, for purposes that may include site operation, analytics, enhanced user experience, or advertising. You may choose to consent to our use of these technologies, or manage your own preferences. If you want to know more, please read the Privacy Notice                
            
            
    
        
            

    Accept and proceed
                    

    Manage Choices
        
    
        Close
        

close
    


        
    
    


    Cookie Preferences


    'use strict';

    function initAmastyCookieBar() {
        return {
            firstShowProcess: '0',
            preferenceLabel: true,

            initBar: function () {
                window.isGdprCookieEnabled = true;
                !!hyva.amStorage && hyva.amStorage.getStorage('AmastyCookieGroups').updateGroupData();
            },

            /**
             * @param {string|number} firstShowProcess
             * @param {number} lastUpdate
             * @returns {boolean}
             */
            isShowNotificationBar: function (firstShowProcess, lastUpdate) {
                return (this.isNeedFirstShow(firstShowProcess, lastUpdate) && !hyva.getCookie('amcookie_allowed')
                    || this.isNeedShowOnUpdate(lastUpdate));
            },

            /**
             * @param {string|number} firstShowProcess
             * @param {number} lastUpdate
             * @returns {boolean}
             */
            isNeedFirstShow: function (firstShowProcess, lastUpdate) {
                hyva.getBrowserStorage().setItem('amCookieBarFirstShowTime', lastUpdate);

                if (firstShowProcess === '0') {
                    return true;
                }

                if (hyva.getBrowserStorage().getItem('amCookieBarFirstShow') !== '1') {
                    hyva.getBrowserStorage().setItem('amCookieBarFirstShow', '1');

                    return true;
                }

                return false;
            },

            /**
             * @param {number} lastUpdate
             * @returns {boolean}
             */
            isNeedShowOnUpdate: function (lastUpdate) {
                if (!lastUpdate) {
                    return false;
                }

                return this.isNeedShowAfterLastVisit(lastUpdate) || this.isNeedShowAfterLastAccept(lastUpdate);
            },

            /**
             * @param {number} lastUpdate
             * @returns {boolean}
             */
            isNeedShowAfterLastVisit: function (lastUpdate) {
                let needToShowAfterLastVisit =
                    lastUpdate > hyva.getBrowserStorage().getItem('amCookieBarFirstShowTime');

                if (needToShowAfterLastVisit) {
                    hyva.getBrowserStorage().setItem('amCookieBarFirstShow', null);
                    hyva.setCookie('amcookie_allowed', '', -1, true);
                }

                return needToShowAfterLastVisit;
            },

            /**
             * @param {number} lastUpdate
             * @returns {boolean}
             */
            isNeedShowAfterLastAccept: function (lastUpdate) {
                let needToShowAfterLastAccept = false;

                if (hyva.getBrowserStorage().getItem('am-last-cookie-acceptance')) {
                    needToShowAfterLastAccept =
                        lastUpdate > hyva.getBrowserStorage().getItem('am-last-cookie-acceptance');
                }

                return needToShowAfterLastAccept;
            },
            eventListeners: {
                ['@close-cookie-bar']() {
                    this.hide('am\u002Dcookie\u002Dbar');
                },
                ['@open-cookie-bar']() {
                    this.show('am\u002Dcookie\u002Dbar');
                },
                ['@amasty-cookie-group-updated.window']() {
                    const lastUpdate = !!hyva.amStorage
                        ? hyva.amStorage.getStorage('AmastyCookieGroups').lastUpdate
                        : 0;
                    if (this.isShowNotificationBar(this.firstShowProcess, lastUpdate)) {
                        !this.opened['am\u002Dcookie\u002Dbar'] &&
                        this.show('am\u002Dcookie\u002Dbar');
                    } else {
                        !!this.opened['am\u002Dcookie\u002Dbar'] &&
                        this.hide('am\u002Dcookie\u002Dbar');
                    }
                }
            },
        };
    }



    
        
            
                Close
                

close
            
            
                We value your privacy
                
            
            
                

    
        
            
                
                    
                    
                        
                        
                        
                    
                
            
            
                
                
                    More Information                
            
        
    




    
        
            
                
                    
                        

close
                    
                    
                    
                        
                            
                        
                        
                            
                                
                                    
                                        
                                            Cookie Name                                        
                                        
                                            Cookie Provider                                        
                                        
                                            Cookie Description                                        
                                        
                                            
                                                Cookie Lifetime                                            
                                        
                                        
                                            Cookie Type                                        
                                    
                                
                                
                                    
                                        
                                            
                                                Cookie Name:
                                                
                                            
                                            
                                                Cookie Provider:
                                                
                                            
                                            
                                                Cookie Description:
                                                
                                            
                                            
                                                
                                                    Cookie Lifetime:
                                                    
                                                
                                            
                                            
                                                Cookie Type:
                                                
                                            
                                        
                                    
                                
                            
                        
                    
                
            
            
                
                    Done                
            
        
    



    'use strict';

    function initCookieGroupInfo_68e52e222048e() {
        return {
            group: null,
            eventListeners: {
                ['@popup-close-am-cookie-group-info.window']() {
                    this.hide('popup-am-cookie-group-info');
                },
                ['@popup-open-am-cookie-group-info.window'](event) {
                    this.group = event.detail;

                    if (!!this.group) {
                        /*
                         If modal have big cookies list this can lead to
                         trigger hide event in hyva.modal.eventListeners.click,
                         so we should wait till this.group is reassigned
                         */
                        this.$nextTick(() => this.show('popup-am-cookie-group-info'));
                    }
                }
            }
        }
    }

            
            
                
                    Submit all preferences                
            
        
    



    'use strict';

    function initCookieBarSettings() {
        return {
            eventListeners: {
                ['@close-am-cookie-bar-settings.window']() {
                    !!this.opened['am-cookie-bar-settings'] &&
                    this.hide('am-cookie-bar-settings');
                    window.dispatchEvent(new Event('close-preference-label'));
                },
                ['@open-am-cookie-bar-settings.window']() {
                    !this.opened['am-cookie-bar-settings'] &&
                    this.show('am-cookie-bar-settings');
                    window.dispatchEvent(new Event('open-preference-label'));
                },
                ['@cookiebar-action-accept-finish.window']() {
                    !!this.opened['am-cookie-bar-settings'] &&
                    this.hide('am-cookie-bar-settings');
                    window.dispatchEvent(new Event('close-preference-label'));
                },
                ['@overlay-action-click']() {
                    window.dispatchEvent(new Event('close-preference-label'));
                }
            }
        }
    }


    {"messages":[],"customer":[],"compare-products":[],"last-ordered-items":[],"requisition":[],"cart":[],"directory-data":{"AE":{"name":"United Arab Emirates"},"AU":{"name":"Australia","regions":{"605":{"code":"ACT","name":"Australian Capital Territory"},"606":{"code":"NSW","name":"New South Wales"},"612":{"code":"NT","name":"Northern Territory"},"608":{"code":"QLD","name":"Queensland"},"609":{"code":"SA","name":"South Australia"},"610":{"code":"TAS","name":"Tasmania"},"607":{"code":"VIC","name":"Victoria"},"611":{"code":"WA","name":"Western Australia"}}},"CA":{"name":"Canada","regions":{"66":{"code":"AB","name":"Alberta"},"67":{"code":"BC","name":"British Columbia"},"68":{"code":"MB","name":"Manitoba"},"70":{"code":"NB","name":"New Brunswick"},"69":{"code":"NL","name":"Newfoundland and Labrador"},"72":{"code":"NT","name":"Northwest Territories"},"71":{"code":"NS","name":"Nova Scotia"},"73":{"code":"NU","name":"Nunavut"},"74":{"code":"ON","name":"Ontario"},"75":{"code":"PE","name":"Prince Edward Island"},"76":{"code":"QC","name":"Quebec"},"77":{"code":"SK","name":"Saskatchewan"},"78":{"code":"YT","name":"Yukon Territory"}}},"CL":{"name":"Chile","regions":{"668":{"code":"CL-AI","name":"Ais\u00e9n del General Carlos Iba\u00f1ez del Campo"},"669":{"code":"CL-AN","name":"Antofagasta"},"670":{"code":"CL-AP","name":"Arica y Parinacota"},"672":{"code":"CL-AT","name":"Atacama"},"673":{"code":"CL-BI","name":"Biob\u00edo"},"674":{"code":"CL-CO","name":"Coquimbo"},"671":{"code":"CL-AR","name":"La Araucan\u00eda"},"675":{"code":"CL-LI","name":"Libertador General Bernardo O'Higgins"},"676":{"code":"CL-LL","name":"Los Lagos"},"677":{"code":"CL-LR","name":"Los R\u00edos"},"678":{"code":"CL-MA","name":"Magallanes"},"679":{"code":"CL-ML","name":"Maule"},"680":{"code":"CL-NB","name":"\u00d1uble"},"681":{"code":"CL-RM","name":"Regi\u00f3n Metropolitana de Santiago"},"682":{"code":"CL-TA","name":"Tarapac\u00e1"},"683":{"code":"CL-VS","name":"Valpara\u00edso"}}},"ES":{"name":"Spain","regions":{"130":{"code":"A Coru\u0441a","name":"A Coru\u00f1a"},"131":{"code":"Alava","name":"Alava"},"132":{"code":"Albacete","name":"Albacete"},"133":{"code":"Alicante","name":"Alicante"},"134":{"code":"Almeria","name":"Almeria"},"135":{"code":"Asturias","name":"Asturias"},"136":{"code":"Avila","name":"Avila"},"137":{"code":"Badajoz","name":"Badajoz"},"138":{"code":"Baleares","name":"Baleares"},"139":{"code":"Barcelona","name":"Barcelona"},"140":{"code":"Burgos","name":"Burgos"},"141":{"code":"Caceres","name":"Caceres"},"142":{"code":"Cadiz","name":"Cadiz"},"143":{"code":"Cantabria","name":"Cantabria"},"144":{"code":"Castellon","name":"Castellon"},"145":{"code":"Ceuta","name":"Ceuta"},"146":{"code":"Ciudad Real","name":"Ciudad Real"},"147":{"code":"Cordoba","name":"Cordoba"},"148":{"code":"Cuenca","name":"Cuenca"},"149":{"code":"Girona","name":"Girona"},"150":{"code":"Granada","name":"Granada"},"151":{"code":"Guadalajara","name":"Guadalajara"},"152":{"code":"Guipuzcoa","name":"Guipuzcoa"},"153":{"code":"Huelva","name":"Huelva"},"154":{"code":"Huesca","name":"Huesca"},"155":{"code":"Jaen","name":"Jaen"},"156":{"code":"La Rioja","name":"La Rioja"},"157":{"code":"Las Palmas","name":"Las Palmas"},"158":{"code":"Leon","name":"Leon"},"159":{"code":"Lleida","name":"Lleida"},"160":{"code":"Lugo","name":"Lugo"},"161":{"code":"Madrid","name":"Madrid"},"162":{"code":"Malaga","name":"Malaga"},"163":{"code":"Melilla","name":"Melilla"},"164":{"code":"Murcia","name":"Murcia"},"165":{"code":"Navarra","name":"Navarra"},"166":{"code":"Ourense","name":"Ourense"},"167":{"code":"Palencia","name":"Palencia"},"168":{"code":"Pontevedra","name":"Pontevedra"},"169":{"code":"Salamanca","name":"Salamanca"},"170":{"code":"Santa Cruz de Tenerife","name":"Santa Cruz de Tenerife"},"171":{"code":"Segovia","name":"Segovia"},"172":{"code":"Sevilla","name":"Sevilla"},"173":{"code":"Soria","name":"Soria"},"174":{"code":"Tarragona","name":"Tarragona"},"175":{"code":"Teruel","name":"Teruel"},"176":{"code":"Toledo","name":"Toledo"},"177":{"code":"Valencia","name":"Valencia"},"178":{"code":"Valladolid","name":"Valladolid"},"179":{"code":"Vizcaya","name":"Vizcaya"},"180":{"code":"Zamora","name":"Zamora"},"181":{"code":"Zaragoza","name":"Zaragoza"}}},"GB":{"name":"United Kingdom"},"MX":{"name":"Mexico","regions":{"935":{"code":"AGU","name":"Aguascalientes"},"936":{"code":"BCN","name":"Baja California"},"937":{"code":"BCS","name":"Baja California Sur"},"938":{"code":"CAM","name":"Campeche"},"939":{"code":"CHP","name":"Chiapas"},"940":{"code":"CHH","name":"Chihuahua"},"941":{"code":"CMX","name":"Ciudad de M\u00e9xico"},"942":{"code":"COA","name":"Coahuila"},"943":{"code":"COL","name":"Colima"},"944":{"code":"DUR","name":"Durango"},"945":{"code":"MEX","name":"Estado de M\u00e9xico"},"946":{"code":"GUA","name":"Guanajuato"},"947":{"code":"GRO","name":"Guerrero"},"948":{"code":"HID","name":"Hidalgo"},"949":{"code":"JAL","name":"Jalisco"},"950":{"code":"MIC","name":"Michoac\u00e1n"},"951":{"code":"MOR","name":"Morelos"},"952":{"code":"NAY","name":"Nayarit"},"953":{"code":"NLE","name":"Nuevo Le\u00f3n"},"954":{"code":"OAX","name":"Oaxaca"},"955":{"code":"PUE","name":"Puebla"},"956":{"code":"QUE","name":"Quer\u00e9taro"},"957":{"code":"ROO","name":"Quintana Roo"},"958":{"code":"SLP","name":"San Luis Potos\u00ed"},"959":{"code":"SIN","name":"Sinaloa"},"960":{"code":"SON","name":"Sonora"},"961":{"code":"TAB","name":"Tabasco"},"962":{"code":"TAM","name":"Tamaulipas"},"963":{"code":"TLA","name":"Tlaxcala"},"964":{"code":"VER","name":"Veracruz"},"965":{"code":"YUC","name":"Yucat\u00e1n"},"966":{"code":"ZAC","name":"Zacatecas"}}},"NL":{"name":"Netherlands"},"NZ":{"name":"New Zealand"},"US":{"name":"United States","regions":{"1":{"code":"AL","name":"Alabama"},"2":{"code":"AK","name":"Alaska"},"3":{"code":"AS","name":"American Samoa"},"4":{"code":"AZ","name":"Arizona"},"5":{"code":"AR","name":"Arkansas"},"6":{"code":"AE","name":"Armed Forces Africa"},"7":{"code":"AA","name":"Armed Forces Americas"},"8":{"code":"AE","name":"Armed Forces Canada"},"9":{"code":"AE","name":"Armed Forces Europe"},"10":{"code":"AE","name":"Armed Forces Middle East"},"11":{"code":"AP","name":"Armed Forces Pacific"},"12":{"code":"CA","name":"California"},"13":{"code":"CO","name":"Colorado"},"14":{"code":"CT","name":"Connecticut"},"15":{"code":"DE","name":"Delaware"},"16":{"code":"DC","name":"District of Columbia"},"17":{"code":"FM","name":"Federated States Of Micronesia"},"18":{"code":"FL","name":"Florida"},"19":{"code":"GA","name":"Georgia"},"20":{"code":"GU","name":"Guam"},"21":{"code":"HI","name":"Hawaii"},"22":{"code":"ID","name":"Idaho"},"23":{"code":"IL","name":"Illinois"},"24":{"code":"IN","name":"Indiana"},"25":{"code":"IA","name":"Iowa"},"26":{"code":"KS","name":"Kansas"},"27":{"code":"KY","name":"Kentucky"},"28":{"code":"LA","name":"Louisiana"},"29":{"code":"ME","name":"Maine"},"30":{"code":"MH","name":"Marshall Islands"},"31":{"code":"MD","name":"Maryland"},"32":{"code":"MA","name":"Massachusetts"},"33":{"code":"MI","name":"Michigan"},"34":{"code":"MN","name":"Minnesota"},"35":{"code":"MS","name":"Mississippi"},"36":{"code":"MO","name":"Missouri"},"37":{"code":"MT","name":"Montana"},"38":{"code":"NE","name":"Nebraska"},"39":{"code":"NV","name":"Nevada"},"40":{"code":"NH","name":"New Hampshire"},"41":{"code":"NJ","name":"New Jersey"},"42":{"code":"NM","name":"New Mexico"},"43":{"code":"NY","name":"New York"},"44":{"code":"NC","name":"North Carolina"},"45":{"code":"ND","name":"North Dakota"},"46":{"code":"MP","name":"Northern Mariana Islands"},"47":{"code":"OH","name":"Ohio"},"48":{"code":"OK","name":"Oklahoma"},"49":{"code":"OR","name":"Oregon"},"50":{"code":"PW","name":"Palau"},"51":{"code":"PA","name":"Pennsylvania"},"52":{"code":"PR","name":"Puerto Rico"},"53":{"code":"RI","name":"Rhode Island"},"54":{"code":"SC","name":"South Carolina"},"55":{"code":"SD","name":"South Dakota"},"56":{"code":"TN","name":"Tennessee"},"57":{"code":"TX","name":"Texas"},"58":{"code":"UT","name":"Utah"},"59":{"code":"VT","name":"Vermont"},"60":{"code":"VI","name":"Virgin Islands"},"61":{"code":"VA","name":"Virginia"},"62":{"code":"WA","name":"Washington"},"63":{"code":"WV","name":"West Virginia"},"64":{"code":"WI","name":"Wisconsin"},"65":{"code":"WY","name":"Wyoming"}}},"VI":{"name":"U.S. Virgin Islands"},"ZA":{"name":"South Africa"},"data_id":1759850018},"captcha":[],"wishlist":{"items":[]},"company":[],"company_authorization":[],"negotiable_quote":[],"instant-purchase":[],"loggedAsCustomer":[],"multiplewishlist":[],"purchase_order":[],"persistent":[],"review":[],"amfacebook-pixel":[],"hyva_enterprise":[],"signifyd-fingerprint":[],"hyva_checkout":[],"google-tag-manager-product-info":[],"recently_viewed_product":[],"recently_compared_product":[],"product_data_storage":[],"paypal-billing-agreement":[]}
    window.amlazy = function() {
        if (typeof window.amlazycallback !== "undefined") {
            setTimeout(window.amlazycallback, 500);
            setTimeout(window.amlazycallback, 1500);
        }
    }!(function(){var h=window.addEventListener||function(n,f){window.attachEvent("on"+n,f)},removeEventListener=window.removeEventListener||function(n,f,b){window.detachEvent("on"+n,f)};var j={cache:[],mobileScreenSize:500,observersAdded:false,attributes:{data_src:"data-amsrc",data_srcset:"data-amsrcset",data_src_mobile:"data-src-mobile"},addObservers:function(){if(!this.observersAdded){h("scroll",j.throttledLoad);h("resize",j.throttledLoad);this.observersAdded=true}},removeObservers:function(){removeEventListener("scroll",j.throttledLoad,false);removeEventListener("resize",j.throttledLoad,false);this.observersAdded=false},throttleTimer:new Date().getTime(),throttledLoad:function(){var a=new Date().getTime();if((a-j.throttleTimer)>=200){j.throttleTimer=a;j.loadVisibleImages()}},loadVisibleImages:function(){var a=window.pageYOffset||document.documentElement.scrollTop;var b=window.innerHeight||document.documentElement.clientHeight;var c={min:a-200,max:a+b+200};var i=0;while(i=c.min-f)&&(ewindow.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","licenseKey":"d22126b98f","applicationID":"1058350796","transactionName":"Z1VbN0cFDxUAUURZX14feABBDQ4ITlFdQx9eX0sMQBAESQhcVFVI","queueTime":0,"applicationTime":445,"atts":"SxJYQQ8fHBs=","errorBeacon":"bam.nr-data.net","agent":""}


2025-10-07 11:13:39 [ERROR] Fatal Error: Cannot convert value "$42.14" to type "System.Double". Error: "The input string '$42.14' was not in a correct format."
2025-10-07 11:13:39 [ERROR] Stack Trace: at Invoke-PurchaseDataProcessing, C:\Users\JohnO'NeillSr\OneDrive - AwesomeWildStuff.com\Scripts\URL-Image-Photo-Download\purchasetracking.ps1: line 279
at <ScriptBlock>, C:\Users\JohnO'NeillSr\OneDrive - AwesomeWildStuff.com\Scripts\URL-Image-Photo-Download\purchasetracking.ps1: line 690
at <ScriptBlock>, <No file>: line 1
